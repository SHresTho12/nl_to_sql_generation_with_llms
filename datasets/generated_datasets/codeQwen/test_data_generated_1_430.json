[
    {
        "db_id": "soccer_3",
        "query": "SELECT count(*) FROM club",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "club"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "club"
        ],
        "question": "How many clubs are there?",
        "question_toks": [
            "How",
            "many",
            "clubs",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM club"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT count(*) FROM club",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "club"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "club"
        ],
        "question": "Count the number of clubs.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "clubs",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM club"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM club ORDER BY Name ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "club",
            "ORDER",
            "BY",
            "Name",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "club",
            "order",
            "by",
            "name",
            "asc"
        ],
        "question": "List the name of clubs in ascending alphabetical order.",
        "question_toks": [
            "List",
            "the",
            "name",
            "of",
            "clubs",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM club ORDER BY Name ASC"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM club ORDER BY Name ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "club",
            "ORDER",
            "BY",
            "Name",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "club",
            "order",
            "by",
            "name",
            "asc"
        ],
        "question": "What are the names of clubs, ordered alphabetically?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "clubs",
            ",",
            "ordered",
            "alphabetically",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM club ORDER BY Name ASC"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Manager ,  Captain FROM club",
        "query_toks": [
            "SELECT",
            "Manager",
            ",",
            "Captain",
            "FROM",
            "club"
        ],
        "query_toks_no_value": [
            "select",
            "manager",
            ",",
            "captain",
            "from",
            "club"
        ],
        "question": "What are the managers and captains of clubs?",
        "question_toks": [
            "What",
            "are",
            "the",
            "managers",
            "and",
            "captains",
            "of",
            "clubs",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Manager, Captain FROM club"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Manager ,  Captain FROM club",
        "query_toks": [
            "SELECT",
            "Manager",
            ",",
            "Captain",
            "FROM",
            "club"
        ],
        "query_toks_no_value": [
            "select",
            "manager",
            ",",
            "captain",
            "from",
            "club"
        ],
        "question": "Return the managers and captains of all clubs.",
        "question_toks": [
            "Return",
            "the",
            "managers",
            "and",
            "captains",
            "of",
            "all",
            "clubs",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Manager ,  Captain FROM club"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "club",
            "WHERE",
            "Manufacturer",
            "!",
            "=",
            "``",
            "Nike",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "club",
            "where",
            "manufacturer",
            "!",
            "=",
            "value"
        ],
        "question": "List the name of clubs whose manufacturer is not \"Nike\"",
        "question_toks": [
            "List",
            "the",
            "name",
            "of",
            "clubs",
            "whose",
            "manufacturer",
            "is",
            "not",
            "``",
            "Nike",
            "''"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Nike\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM club WHERE Manufacturer != 'Nike';"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "club",
            "WHERE",
            "Manufacturer",
            "!",
            "=",
            "``",
            "Nike",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "club",
            "where",
            "manufacturer",
            "!",
            "=",
            "value"
        ],
        "question": "What are the names of clubs who do not have the manufacturer Nike?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "clubs",
            "who",
            "do",
            "not",
            "have",
            "the",
            "manufacturer",
            "Nike",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Nike\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM club WHERE Manufacturer != \"Nike\""
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM player ORDER BY Wins_count ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "player",
            "ORDER",
            "BY",
            "Wins_count",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "player",
            "order",
            "by",
            "wins_count",
            "asc"
        ],
        "question": "What are the names of players in ascending order of wins count?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "players",
            "in",
            "ascending",
            "order",
            "of",
            "wins",
            "count",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM player ORDER BY Wins_count ASC"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM player ORDER BY Wins_count ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "player",
            "ORDER",
            "BY",
            "Wins_count",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "player",
            "order",
            "by",
            "wins_count",
            "asc"
        ],
        "question": "Return the names of players in order of count of wins, ascending.",
        "question_toks": [
            "Return",
            "the",
            "names",
            "of",
            "players",
            "in",
            "order",
            "of",
            "count",
            "of",
            "wins",
            ",",
            "ascending",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM player ORDER BY Wins_count ASC"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "player",
            "ORDER",
            "BY",
            "Earnings",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "player",
            "order",
            "by",
            "earnings",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the name of the player with the highest earnings?",
        "question_toks": [
            "What",
            "is",
            "the",
            "name",
            "of",
            "the",
            "player",
            "with",
            "the",
            "highest",
            "earnings",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "player",
            "ORDER",
            "BY",
            "Earnings",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "player",
            "order",
            "by",
            "earnings",
            "desc",
            "limit",
            "value"
        ],
        "question": "Return the name of the player who earns the most money.",
        "question_toks": [
            "Return",
            "the",
            "name",
            "of",
            "the",
            "player",
            "who",
            "earns",
            "the",
            "most",
            "money",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "Country",
            "FROM",
            "player",
            "WHERE",
            "Earnings",
            ">",
            "1200000"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "country",
            "from",
            "player",
            "where",
            "earnings",
            ">",
            "value"
        ],
        "question": "What are the distinct countries of players with earnings higher than 1200000?",
        "question_toks": [
            "What",
            "are",
            "the",
            "distinct",
            "countries",
            "of",
            "players",
            "with",
            "earnings",
            "higher",
            "than",
            "1200000",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    1200000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Earnings  >  1200000"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "Country",
            "FROM",
            "player",
            "WHERE",
            "Earnings",
            ">",
            "1200000"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "country",
            "from",
            "player",
            "where",
            "earnings",
            ">",
            "value"
        ],
        "question": "From which countries are players who make more than 1200000 from?",
        "question_toks": [
            "From",
            "which",
            "countries",
            "are",
            "players",
            "who",
            "make",
            "more",
            "than",
            "1200000",
            "from",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    1200000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Country FROM player WHERE Earnings > 1200000"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Country",
            "FROM",
            "player",
            "WHERE",
            "Wins_count",
            ">",
            "2",
            "ORDER",
            "BY",
            "Earnings",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "player",
            "where",
            "wins_count",
            ">",
            "value",
            "order",
            "by",
            "earnings",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the country of the player with the highest earnings among players that have more than 2 win counts?",
        "question_toks": [
            "What",
            "is",
            "the",
            "country",
            "of",
            "the",
            "player",
            "with",
            "the",
            "highest",
            "earnings",
            "among",
            "players",
            "that",
            "have",
            "more",
            "than",
            "2",
            "win",
            "counts",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T3.Wins_count > 2 AND T1.Earnings = ( SELECT MAX(Earnings) FROM player WHERE Wins_count > 2 );"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Country",
            "FROM",
            "player",
            "WHERE",
            "Wins_count",
            ">",
            "2",
            "ORDER",
            "BY",
            "Earnings",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "player",
            "where",
            "wins_count",
            ">",
            "value",
            "order",
            "by",
            "earnings",
            "desc",
            "limit",
            "value"
        ],
        "question": "Of players who have more than 2 wins, what is the country of the player who makes the most?",
        "question_toks": [
            "Of",
            "players",
            "who",
            "have",
            "more",
            "than",
            "2",
            "wins",
            ",",
            "what",
            "is",
            "the",
            "country",
            "of",
            "the",
            "player",
            "who",
            "makes",
            "the",
            "most",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Wins_count > 2 ORDER BY T1.Earnings DESC LIMIT 1"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
        "query_toks": [
            "SELECT",
            "T2.Name",
            ",",
            "T1.Name",
            "FROM",
            "club",
            "AS",
            "T1",
            "JOIN",
            "player",
            "AS",
            "T2",
            "ON",
            "T1.Club_ID",
            "=",
            "T2.Club_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "name",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "club_id",
            "=",
            "t2",
            ".",
            "club_id"
        ],
        "question": "Show names of players and names of clubs they are in.",
        "question_toks": [
            "Show",
            "names",
            "of",
            "players",
            "and",
            "names",
            "of",
            "clubs",
            "they",
            "are",
            "in",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Name, T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
        "query_toks": [
            "SELECT",
            "T2.Name",
            ",",
            "T1.Name",
            "FROM",
            "club",
            "AS",
            "T1",
            "JOIN",
            "player",
            "AS",
            "T2",
            "ON",
            "T1.Club_ID",
            "=",
            "T2.Club_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "name",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "club_id",
            "=",
            "t2",
            ".",
            "club_id"
        ],
        "question": "What are the names of players and the corresponding clubs that they are in?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "players",
            "and",
            "the",
            "corresponding",
            "clubs",
            "that",
            "they",
            "are",
            "in",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT player.Name ,  club.Name FROM player INNER JOIN club ON player.Club_ID = club.Club_ID"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "club",
            "AS",
            "T1",
            "JOIN",
            "player",
            "AS",
            "T2",
            "ON",
            "T1.Club_ID",
            "=",
            "T2.Club_ID",
            "WHERE",
            "T2.Wins_count",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "club_id",
            "=",
            "t2",
            ".",
            "club_id",
            "where",
            "t2",
            ".",
            "wins_count",
            ">",
            "value"
        ],
        "question": "Show names of clubs that have players with more than 2 win counts.",
        "question_toks": [
            "Show",
            "names",
            "of",
            "clubs",
            "that",
            "have",
            "players",
            "with",
            "more",
            "than",
            "2",
            "win",
            "counts",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Wins_count > 2"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "club",
            "AS",
            "T1",
            "JOIN",
            "player",
            "AS",
            "T2",
            "ON",
            "T1.Club_ID",
            "=",
            "T2.Club_ID",
            "WHERE",
            "T2.Wins_count",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "club_id",
            "=",
            "t2",
            ".",
            "club_id",
            "where",
            "t2",
            ".",
            "wins_count",
            ">",
            "value"
        ],
        "question": "What are the names of clubs that have players who have won more than twice?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "clubs",
            "that",
            "have",
            "players",
            "who",
            "have",
            "won",
            "more",
            "than",
            "twice",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Wins_count > 2"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"",
        "query_toks": [
            "SELECT",
            "T2.Name",
            "FROM",
            "club",
            "AS",
            "T1",
            "JOIN",
            "player",
            "AS",
            "T2",
            "ON",
            "T1.Club_ID",
            "=",
            "T2.Club_ID",
            "WHERE",
            "T1.Manager",
            "=",
            "``",
            "Sam",
            "Allardyce",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "club_id",
            "=",
            "t2",
            ".",
            "club_id",
            "where",
            "t1",
            ".",
            "manager",
            "=",
            "value"
        ],
        "question": "Show names of players from the club with manager \"Sam Allardyce\".",
        "question_toks": [
            "Show",
            "names",
            "of",
            "players",
            "from",
            "the",
            "club",
            "with",
            "manager",
            "``",
            "Sam",
            "Allardyce",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Sam Allardyce\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT t2.name FROM club AS t1 JOIN player AS t2 ON t1.club_id  =  t2.club_id WHERE t1.manager = 'Sam Allardyce'"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"",
        "query_toks": [
            "SELECT",
            "T2.Name",
            "FROM",
            "club",
            "AS",
            "T1",
            "JOIN",
            "player",
            "AS",
            "T2",
            "ON",
            "T1.Club_ID",
            "=",
            "T2.Club_ID",
            "WHERE",
            "T1.Manager",
            "=",
            "``",
            "Sam",
            "Allardyce",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "club_id",
            "=",
            "t2",
            ".",
            "club_id",
            "where",
            "t1",
            ".",
            "manager",
            "=",
            "value"
        ],
        "question": "What are the names of players from the club managed by Sam Allardyce?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "players",
            "from",
            "the",
            "club",
            "managed",
            "by",
            "Sam",
            "Allardyce",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Sam Allardyce\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM player WHERE Club_ID = (SELECT Club_ID FROM club WHERE Manager = \"Sam Allardyce\")"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "club",
            "AS",
            "T1",
            "JOIN",
            "player",
            "AS",
            "T2",
            "ON",
            "T1.Club_ID",
            "=",
            "T2.Club_ID",
            "GROUP",
            "BY",
            "T1.Club_ID",
            "ORDER",
            "BY",
            "avg",
            "(",
            "T2.Earnings",
            ")",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "club_id",
            "=",
            "t2",
            ".",
            "club_id",
            "group",
            "by",
            "t1",
            ".",
            "club_id",
            "order",
            "by",
            "avg",
            "(",
            "t2",
            ".",
            "earnings",
            ")",
            "desc"
        ],
        "question": "Show names of clubs in descending order of average earnings of players belonging.",
        "question_toks": [
            "Show",
            "names",
            "of",
            "clubs",
            "in",
            "descending",
            "order",
            "of",
            "average",
            "earnings",
            "of",
            "players",
            "belonging",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            5,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Name, AVG(T1.Earnings) AS Average_Earnings \nFROM player AS T1 \nJOIN club AS T2 ON T1.Club_ID = T2.Club_ID \nGROUP BY T2.Name \nORDER BY Average_Earnings DESC;"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "club",
            "AS",
            "T1",
            "JOIN",
            "player",
            "AS",
            "T2",
            "ON",
            "T1.Club_ID",
            "=",
            "T2.Club_ID",
            "GROUP",
            "BY",
            "T1.Club_ID",
            "ORDER",
            "BY",
            "avg",
            "(",
            "T2.Earnings",
            ")",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "club",
            "as",
            "t1",
            "join",
            "player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "club_id",
            "=",
            "t2",
            ".",
            "club_id",
            "group",
            "by",
            "t1",
            ".",
            "club_id",
            "order",
            "by",
            "avg",
            "(",
            "t2",
            ".",
            "earnings",
            ")",
            "desc"
        ],
        "question": "What are the names of clubs, ordered descending by the average earnings of players within each?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "clubs",
            ",",
            "ordered",
            "descending",
            "by",
            "the",
            "average",
            "earnings",
            "of",
            "players",
            "within",
            "each",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            5,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM club ORDER BY AVG(Earnings) DESC;"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer",
        "query_toks": [
            "SELECT",
            "Manufacturer",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "Manufacturer"
        ],
        "query_toks_no_value": [
            "select",
            "manufacturer",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "club",
            "group",
            "by",
            "manufacturer"
        ],
        "question": "Show different manufacturers and the number of clubs they are associated with.",
        "question_toks": [
            "Show",
            "different",
            "manufacturers",
            "and",
            "the",
            "number",
            "of",
            "clubs",
            "they",
            "are",
            "associated",
            "with",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer",
        "query_toks": [
            "SELECT",
            "Manufacturer",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "Manufacturer"
        ],
        "query_toks_no_value": [
            "select",
            "manufacturer",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "club",
            "group",
            "by",
            "manufacturer"
        ],
        "question": "How many clubs use each manufacturer?",
        "question_toks": [
            "How",
            "many",
            "clubs",
            "use",
            "each",
            "manufacturer",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT manufacturer, COUNT(*) FROM club GROUP BY manufacturer"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Manufacturer",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "Manufacturer",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "manufacturer",
            "from",
            "club",
            "group",
            "by",
            "manufacturer",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Please show the most common manufacturer of clubs.",
        "question_toks": [
            "Please",
            "show",
            "the",
            "most",
            "common",
            "manufacturer",
            "of",
            "clubs",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Manufacturer",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "Manufacturer",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "manufacturer",
            "from",
            "club",
            "group",
            "by",
            "manufacturer",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Which manufacturer is most common among clubs?",
        "question_toks": [
            "Which",
            "manufacturer",
            "is",
            "most",
            "common",
            "among",
            "clubs",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(Club_ID) DESC LIMIT 1"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "Manufacturer",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "Manufacturer",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "manufacturer",
            "from",
            "club",
            "group",
            "by",
            "manufacturer",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "List the manufacturers that are associated with more than one club.",
        "question_toks": [
            "List",
            "the",
            "manufacturers",
            "that",
            "are",
            "associated",
            "with",
            "more",
            "than",
            "one",
            "club",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Manufacturer FROM club WHERE Manufacturer IN (SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*) > 1)"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "Manufacturer",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "Manufacturer",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "manufacturer",
            "from",
            "club",
            "group",
            "by",
            "manufacturer",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Which manufacturers work for more than 1 club?",
        "question_toks": [
            "Which",
            "manufacturers",
            "work",
            "for",
            "more",
            "than",
            "1",
            "club",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  > 1"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "Country",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "Country",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "player",
            "group",
            "by",
            "country",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "List the country that have more than one player.",
        "question_toks": [
            "List",
            "the",
            "country",
            "that",
            "have",
            "more",
            "than",
            "one",
            "player",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT country FROM player GROUP BY country HAVING count(*) > 1"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "Country",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "Country",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "player",
            "group",
            "by",
            "country",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Which countries have produced more than one player?",
        "question_toks": [
            "Which",
            "countries",
            "have",
            "produced",
            "more",
            "than",
            "one",
            "player",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT Country) FROM player WHERE Club_ID IN (SELECT Club_ID FROM club)"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "club",
            "WHERE",
            "Club_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Club_ID",
            "FROM",
            "player",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "club",
            "where",
            "club_id",
            "not",
            "in",
            "(",
            "select",
            "club_id",
            "from",
            "player",
            ")"
        ],
        "question": "List the name of clubs that do not have players.",
        "question_toks": [
            "List",
            "the",
            "name",
            "of",
            "clubs",
            "that",
            "do",
            "not",
            "have",
            "players",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "club",
            "WHERE",
            "Club_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Club_ID",
            "FROM",
            "player",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "club",
            "where",
            "club_id",
            "not",
            "in",
            "(",
            "select",
            "club_id",
            "from",
            "player",
            ")"
        ],
        "question": "What are the names of clubs that do not have any players?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "clubs",
            "that",
            "do",
            "not",
            "have",
            "any",
            "players",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000",
        "query_toks": [
            "SELECT",
            "Country",
            "FROM",
            "player",
            "WHERE",
            "Earnings",
            ">",
            "1400000",
            "INTERSECT",
            "SELECT",
            "Country",
            "FROM",
            "player",
            "WHERE",
            "Earnings",
            "<",
            "1100000"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "player",
            "where",
            "earnings",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "player",
            "where",
            "earnings",
            "<",
            "value"
        ],
        "question": "Show the country of players with earnings more than 1400000 and players with earnings less than 1100000.",
        "question_toks": [
            "Show",
            "the",
            "country",
            "of",
            "players",
            "with",
            "earnings",
            "more",
            "than",
            "1400000",
            "and",
            "players",
            "with",
            "earnings",
            "less",
            "than",
            "1100000",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    1400000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        4,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        1100000.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT country FROM player WHERE earnings > 1400000 UNION SELECT country FROM player WHERE earnings < 1100000"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000",
        "query_toks": [
            "SELECT",
            "Country",
            "FROM",
            "player",
            "WHERE",
            "Earnings",
            ">",
            "1400000",
            "INTERSECT",
            "SELECT",
            "Country",
            "FROM",
            "player",
            "WHERE",
            "Earnings",
            "<",
            "1100000"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "player",
            "where",
            "earnings",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "player",
            "where",
            "earnings",
            "<",
            "value"
        ],
        "question": "Which country has produced both players with earnings over 1400000 and players with earnings below 1100000?",
        "question_toks": [
            "Which",
            "country",
            "has",
            "produced",
            "both",
            "players",
            "with",
            "earnings",
            "over",
            "1400000",
            "and",
            "players",
            "with",
            "earnings",
            "below",
            "1100000",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    1400000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        4,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        1100000.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings > 1400000 INTERSECT SELECT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings < 1100000"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT COUNT (DISTINCT Country) FROM player",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "DISTINCT",
            "Country",
            ")",
            "FROM",
            "player"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "country",
            ")",
            "from",
            "player"
        ],
        "question": "What is the number of distinct countries of all players?",
        "question_toks": [
            "What",
            "is",
            "the",
            "number",
            "of",
            "distinct",
            "countries",
            "of",
            "all",
            "players",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT Country) FROM player"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT COUNT (DISTINCT Country) FROM player",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "DISTINCT",
            "Country",
            ")",
            "FROM",
            "player"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "country",
            ")",
            "from",
            "player"
        ],
        "question": "How many different countries are players from?",
        "question_toks": [
            "How",
            "many",
            "different",
            "countries",
            "are",
            "players",
            "from",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(DISTINCT country) FROM player"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"",
        "query_toks": [
            "SELECT",
            "Earnings",
            "FROM",
            "player",
            "WHERE",
            "Country",
            "=",
            "``",
            "Australia",
            "''",
            "OR",
            "Country",
            "=",
            "``",
            "Zimbabwe",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "earnings",
            "from",
            "player",
            "where",
            "country",
            "=",
            "value",
            "or",
            "country",
            "=",
            "value"
        ],
        "question": "Show the earnings of players from country \"Australia\" or \"Zimbabwe\".",
        "question_toks": [
            "Show",
            "the",
            "earnings",
            "of",
            "players",
            "from",
            "country",
            "``",
            "Australia",
            "''",
            "or",
            "``",
            "Zimbabwe",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Australia\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Zimbabwe\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Earnings FROM player WHERE Country IN ('Australia', 'Zimbabwe')"
    },
    {
        "db_id": "soccer_3",
        "query": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"",
        "query_toks": [
            "SELECT",
            "Earnings",
            "FROM",
            "player",
            "WHERE",
            "Country",
            "=",
            "``",
            "Australia",
            "''",
            "OR",
            "Country",
            "=",
            "``",
            "Zimbabwe",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "earnings",
            "from",
            "player",
            "where",
            "country",
            "=",
            "value",
            "or",
            "country",
            "=",
            "value"
        ],
        "question": "What are the earnings of players from either of the countries of Australia or Zimbabwe?",
        "question_toks": [
            "What",
            "are",
            "the",
            "earnings",
            "of",
            "players",
            "from",
            "either",
            "of",
            "the",
            "countries",
            "of",
            "Australia",
            "or",
            "Zimbabwe",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Australia\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Zimbabwe\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT earnings FROM player WHERE country IN ('Australia', 'Zimbabwe')"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3",
        "query_toks": [
            "SELECT",
            "T1.customer_id",
            ",",
            "T1.customer_first_name",
            ",",
            "T1.customer_last_name",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.customer_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2",
            "INTERSECT",
            "SELECT",
            "T1.customer_id",
            ",",
            "T1.customer_first_name",
            ",",
            "T1.customer_last_name",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "JOIN",
            "Order_items",
            "AS",
            "T3",
            "ON",
            "T2.order_id",
            "=",
            "T3.order_id",
            "GROUP",
            "BY",
            "T1.customer_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_id",
            ",",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t1",
            ".",
            "customer_last_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "customer_id",
            ",",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t1",
            ".",
            "customer_last_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "order_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "List the id, first name and last name of the customers who both have placed more than 2 orders and have bought at least 3 items.",
        "question_toks": [
            "List",
            "the",
            "id",
            ",",
            "first",
            "name",
            "and",
            "last",
            "name",
            "of",
            "the",
            "customers",
            "who",
            "both",
            "have",
            "placed",
            "more",
            "than",
            "2",
            "orders",
            "and",
            "have",
            "bought",
            "at",
            "least",
            "3",
            "items",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            4
                        ],
                        [
                            "table_unit",
                            5
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    26,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    12,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        8,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        5,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        3.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name \nFROM Customers AS c \nJOIN Orders AS o ON c.customer_id = o.customer_id \nWHERE c.customer_id IN (\n    SELECT c.customer_id \n    FROM Customers AS c \n    JOIN Orders AS o ON c.customer_id = o.customer_id \n    GROUP BY c.customer_id \n    HAVING COUNT(o.order_id) > 2\n) \nAND c.customer_id IN (\n    SELECT c.customer_id \n    FROM Customers AS c \n    JOIN Orders AS o ON c.customer_id = o.customer_id \n    JOIN Order_Items AS oi ON o.order_id = oi.order_id \n    GROUP BY c.customer_id \n    HAVING COUNT(oi.order_item_id) >= 3\n)"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3",
        "query_toks": [
            "SELECT",
            "T1.customer_id",
            ",",
            "T1.customer_first_name",
            ",",
            "T1.customer_last_name",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.customer_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2",
            "INTERSECT",
            "SELECT",
            "T1.customer_id",
            ",",
            "T1.customer_first_name",
            ",",
            "T1.customer_last_name",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "JOIN",
            "Order_items",
            "AS",
            "T3",
            "ON",
            "T2.order_id",
            "=",
            "T3.order_id",
            "GROUP",
            "BY",
            "T1.customer_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_id",
            ",",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t1",
            ".",
            "customer_last_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "customer_id",
            ",",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t1",
            ".",
            "customer_last_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "order_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "What are the ids, first and last names of the customers who have ordered more than twice and have bought at least 3 items?",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            ",",
            "first",
            "and",
            "last",
            "names",
            "of",
            "the",
            "customers",
            "who",
            "have",
            "ordered",
            "more",
            "than",
            "twice",
            "and",
            "have",
            "bought",
            "at",
            "least",
            "3",
            "items",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            4
                        ],
                        [
                            "table_unit",
                            5
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    26,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    12,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        8,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        5,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        3.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING COUNT(*) > 2 AND COUNT(DISTINCT T2.order_id) > 3"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id",
        "query_toks": [
            "SELECT",
            "T1.order_id",
            ",",
            "T1.order_status_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "GROUP",
            "BY",
            "T1.order_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_id",
            ",",
            "t1",
            ".",
            "order_status_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id"
        ],
        "question": "For the orders with any produts, how many products does each orders contain ? List the order id, status and the number.",
        "question_toks": [
            "For",
            "the",
            "orders",
            "with",
            "any",
            "produts",
            ",",
            "how",
            "many",
            "products",
            "does",
            "each",
            "orders",
            "contain",
            "?",
            "List",
            "the",
            "order",
            "id",
            ",",
            "status",
            "and",
            "the",
            "number",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    26,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.order_id, T1.order_status_code, COUNT(T2.order_item_id) AS number FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id, T1.order_status_code"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id",
        "query_toks": [
            "SELECT",
            "T1.order_id",
            ",",
            "T1.order_status_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "GROUP",
            "BY",
            "T1.order_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_id",
            ",",
            "t1",
            ".",
            "order_status_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id"
        ],
        "question": "For every order, how many products does it contain, and what are the orders' statuses and ids?",
        "question_toks": [
            "For",
            "every",
            "order",
            ",",
            "how",
            "many",
            "products",
            "does",
            "it",
            "contain",
            ",",
            "and",
            "what",
            "are",
            "the",
            "orders",
            "'",
            "statuses",
            "and",
            "ids",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    26,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Orders.order_id, Orders.order_status_code, COUNT(Order_Items.product_id) \nFROM Orders \nJOIN Order_Items \nON Orders.order_id = Order_Items.order_id\nGROUP BY Orders.order_id, Orders.order_status_code"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "date_order_placed",
            ")",
            "FROM",
            "Orders",
            "UNION",
            "SELECT",
            "T1.date_order_placed",
            "FROM",
            "Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "GROUP",
            "BY",
            "T1.order_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "date_order_placed",
            ")",
            "from",
            "orders",
            "union",
            "select",
            "t1",
            ".",
            "date_order_placed",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "List the dates of the orders which were placed at the earliest time or have more than 1 items.",
        "question_toks": [
            "List",
            "the",
            "dates",
            "of",
            "the",
            "orders",
            "which",
            "were",
            "placed",
            "at",
            "the",
            "earliest",
            "time",
            "or",
            "have",
            "more",
            "than",
            "1",
            "items",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            4
                        ],
                        [
                            "table_unit",
                            5
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    26,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    29,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        26,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        1.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        },
        "generated_sql": "SELECT T1.date_order_placed FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING COUNT(T1.order_id)  >  1 OR T1.date_order_placed = (SELECT MIN(date_order_placed) FROM orders)"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "date_order_placed",
            ")",
            "FROM",
            "Orders",
            "UNION",
            "SELECT",
            "T1.date_order_placed",
            "FROM",
            "Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "GROUP",
            "BY",
            "T1.order_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "date_order_placed",
            ")",
            "from",
            "orders",
            "union",
            "select",
            "t1",
            ".",
            "date_order_placed",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "What are the dates of the earliest order and the dates of all orders with more than 1 item?",
        "question_toks": [
            "What",
            "are",
            "the",
            "dates",
            "of",
            "the",
            "earliest",
            "order",
            "and",
            "the",
            "dates",
            "of",
            "all",
            "orders",
            "with",
            "more",
            "than",
            "1",
            "item",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            4
                        ],
                        [
                            "table_unit",
                            5
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    26,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    29,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        26,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        1.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        },
        "generated_sql": "SELECT min(date_order_placed) FROM orders\nSELECT date_order_placed FROM orders WHERE order_id IN \n(SELECT order_id FROM Order_Items GROUP BY order_id HAVING count(*) > 1)"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_toks": [
            "SELECT",
            "customer_first_name",
            ",",
            "customer_middle_initial",
            ",",
            "customer_last_name",
            "FROM",
            "Customers",
            "EXCEPT",
            "SELECT",
            "T1.customer_first_name",
            ",",
            "T1.customer_middle_initial",
            ",",
            "T1.customer_last_name",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "customer_first_name",
            ",",
            "customer_middle_initial",
            ",",
            "customer_last_name",
            "from",
            "customers",
            "except",
            "select",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t1",
            ".",
            "customer_middle_initial",
            ",",
            "t1",
            ".",
            "customer_last_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id"
        ],
        "question": "Which customers did not make any orders? List the first name, middle initial and last name.",
        "question_toks": [
            "Which",
            "customers",
            "did",
            "not",
            "make",
            "any",
            "orders",
            "?",
            "List",
            "the",
            "first",
            "name",
            ",",
            "middle",
            "initial",
            "and",
            "last",
            "name",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    12,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT DISTINCT `customer_first_name`, `customer_middle_initial`, `customer_last_name` FROM Customers WHERE `customer_id` NOT IN (SELECT DISTINCT `customer_id` FROM Orders)"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_toks": [
            "SELECT",
            "customer_first_name",
            ",",
            "customer_middle_initial",
            ",",
            "customer_last_name",
            "FROM",
            "Customers",
            "EXCEPT",
            "SELECT",
            "T1.customer_first_name",
            ",",
            "T1.customer_middle_initial",
            ",",
            "T1.customer_last_name",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "customer_first_name",
            ",",
            "customer_middle_initial",
            ",",
            "customer_last_name",
            "from",
            "customers",
            "except",
            "select",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t1",
            ".",
            "customer_middle_initial",
            ",",
            "t1",
            ".",
            "customer_last_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id"
        ],
        "question": "WHat are the first and last names, and middle initials of all customers who did not make any orders?",
        "question_toks": [
            "WHat",
            "are",
            "the",
            "first",
            "and",
            "last",
            "names",
            ",",
            "and",
            "middle",
            "initials",
            "of",
            "all",
            "customers",
            "who",
            "did",
            "not",
            "make",
            "any",
            "orders",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    12,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "To find the first, last names, and middle initials of all customers who did not make any orders, you can use the following SQL query:\n\n```sql\nSELECT customer_first_name, customer_middle_initial, customer_last_name\nFROM Customers\nWHERE customer_id NOT IN (\n    SELECT customer_id\n    FROM Orders\n)\n```"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT product_id ,  product_name ,  product_price ,  product_color FROM Products EXCEPT SELECT T1.product_id ,  T1.product_name ,  T1.product_price ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.product_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "product_id",
            ",",
            "product_name",
            ",",
            "product_price",
            ",",
            "product_color",
            "FROM",
            "Products",
            "EXCEPT",
            "SELECT",
            "T1.product_id",
            ",",
            "T1.product_name",
            ",",
            "T1.product_price",
            ",",
            "T1.product_color",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "JOIN",
            "Orders",
            "AS",
            "T3",
            "ON",
            "T2.order_id",
            "=",
            "T3.order_id",
            "GROUP",
            "BY",
            "T1.product_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_name",
            ",",
            "product_price",
            ",",
            "product_color",
            "from",
            "products",
            "except",
            "select",
            "t1",
            ".",
            "product_id",
            ",",
            "t1",
            ".",
            "product_name",
            ",",
            "t1",
            ".",
            "product_price",
            ",",
            "t1",
            ".",
            "product_color",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "orders",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "product_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "What are the id, name, price and color of the products which have not been ordered for at least twice?",
        "question_toks": [
            "What",
            "are",
            "the",
            "id",
            ",",
            "name",
            ",",
            "price",
            "and",
            "color",
            "of",
            "the",
            "products",
            "which",
            "have",
            "not",
            "been",
            "ordered",
            "for",
            "at",
            "least",
            "twice",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            5
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    32,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        1,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        5,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        2.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT T2.product_id, T2.product_name, T2.product_price, T2.product_color FROM Orders AS T1 INNER JOIN Order_Items AS T2 ON T1.order_id = T2.order_id WHERE T2.product_id NOT IN (SELECT product_id FROM Order_Items WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Order_Items GROUP BY order_id HAVING COUNT(product_id) >= 2)))"
    },
    {
        "db_id": "e_commerce",
        "query": "select t1.product_id ,  t1.product_name ,  t1.product_price ,  t1.product_color from products as t1 join order_items as t2 on t1.product_id  =  t2.product_id join orders as t3 on t2.order_id  =  t3.order_id group by t1.product_id having count(*) < 2",
        "query_toks": [
            "select",
            "t1.product_id",
            ",",
            "t1.product_name",
            ",",
            "t1.product_price",
            ",",
            "t1.product_color",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "join",
            "orders",
            "as",
            "t3",
            "on",
            "t2.order_id",
            "=",
            "t3.order_id",
            "group",
            "by",
            "t1.product_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_id",
            ",",
            "t1",
            ".",
            "product_name",
            ",",
            "t1",
            ".",
            "product_price",
            ",",
            "t1",
            ".",
            "product_color",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "orders",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "product_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ],
        "question": "What are the ids , names , prices , and colors of all products that have been listed in less than two orders ?",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            ",",
            "names",
            ",",
            "prices",
            ",",
            "and",
            "colors",
            "of",
            "all",
            "products",
            "that",
            "have",
            "been",
            "listed",
            "in",
            "less",
            "than",
            "two",
            "orders",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price ,  T1.product_color FROM Products AS T1 JOIN Orders AS T2 ON T1.product_id = T2.order_id GROUP BY T1.product_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T1.order_id",
            ",",
            "T1.date_order_placed",
            "FROM",
            "Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "GROUP",
            "BY",
            "T1.order_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_id",
            ",",
            "t1",
            ".",
            "date_order_placed",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Which orders have at least 2 products on it? List the order id and date.",
        "question_toks": [
            "Which",
            "orders",
            "have",
            "at",
            "least",
            "2",
            "products",
            "on",
            "it",
            "?",
            "List",
            "the",
            "order",
            "id",
            "and",
            "date",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    26,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.order_id ,  T1.date_order_placed FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING COUNT(*) >= 2"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T1.order_id",
            ",",
            "T1.date_order_placed",
            "FROM",
            "Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "GROUP",
            "BY",
            "T1.order_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_id",
            ",",
            "t1",
            ".",
            "date_order_placed",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "What are the ids and dates of the orders with at least two products?",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            "and",
            "dates",
            "of",
            "the",
            "orders",
            "with",
            "at",
            "least",
            "two",
            "products",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    26,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.order_id ,  T2.date_order_placed FROM Order_Items AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count(*)  >= 2"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.product_id",
            ",",
            "T1.product_name",
            ",",
            "T1.product_price",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "GROUP",
            "BY",
            "T1.product_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_id",
            ",",
            "t1",
            ".",
            "product_name",
            ",",
            "t1",
            ".",
            "product_price",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "group",
            "by",
            "t1",
            ".",
            "product_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Which product are listed in orders most frequently? List the id, product name and price.",
        "question_toks": [
            "Which",
            "product",
            "are",
            "listed",
            "in",
            "orders",
            "most",
            "frequently",
            "?",
            "List",
            "the",
            "id",
            ",",
            "product",
            "name",
            "and",
            "price",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.product_id, T1.product_name, T1.product_price FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.product_id",
            ",",
            "T1.product_name",
            ",",
            "T1.product_price",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "GROUP",
            "BY",
            "T1.product_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_id",
            ",",
            "t1",
            ".",
            "product_name",
            ",",
            "t1",
            ".",
            "product_price",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "group",
            "by",
            "t1",
            ".",
            "product_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What are the ids, names, and prices of all products that are ordered most frequently?",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            ",",
            "names",
            ",",
            "and",
            "prices",
            "of",
            "all",
            "products",
            "that",
            "are",
            "ordered",
            "most",
            "frequently",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.product_id ,  T2.product_name ,  T2.product_price FROM order_items AS T1 JOIN products AS T2 ON T2.product_id = T1.product_id GROUP BY T2.product_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.order_id ,  sum(T2.product_price) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.order_id ORDER BY sum(T2.product_price) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.order_id",
            ",",
            "sum",
            "(",
            "T2.product_price",
            ")",
            "FROM",
            "Order_items",
            "AS",
            "T1",
            "JOIN",
            "Products",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "GROUP",
            "BY",
            "T1.order_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "T2.product_price",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_id",
            ",",
            "sum",
            "(",
            "t2",
            ".",
            "product_price",
            ")",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id",
            "order",
            "by",
            "sum",
            "(",
            "t2",
            ".",
            "product_price",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "question": "Which order have the least sum of the product prices. List the order id and sum.",
        "question_toks": [
            "Which",
            "order",
            "have",
            "the",
            "least",
            "sum",
            "of",
            "the",
            "product",
            "prices",
            ".",
            "List",
            "the",
            "order",
            "id",
            "and",
            "sum",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    32,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT order_id, SUM(product_price) FROM Order_Items INNER JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY order_id ORDER BY SUM(product_price) ASC LIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "select t1.order_id ,  sum(t2.product_price) from order_items as t1 join products as t2 on t1.product_id  =  t2.product_id group by t1.order_id order by sum(t2.product_price) asc limit 1",
        "query_toks": [
            "select",
            "t1.order_id",
            ",",
            "sum",
            "(",
            "t2.product_price",
            ")",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1.product_id",
            "=",
            "t2.product_id",
            "group",
            "by",
            "t1.order_id",
            "order",
            "by",
            "sum",
            "(",
            "t2.product_price",
            ")",
            "asc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_id",
            ",",
            "sum",
            "(",
            "t2",
            ".",
            "product_price",
            ")",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id",
            "order",
            "by",
            "sum",
            "(",
            "t2",
            ".",
            "product_price",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "question": "What is the order that total cost the least , and how much is the total cost ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "order",
            "that",
            "total",
            "cost",
            "the",
            "least",
            ",",
            "and",
            "how",
            "much",
            "is",
            "the",
            "total",
            "cost",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    32,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.order_id, sum(T2.product_price) as total_cost\nFROM Shipment_Items as T1 JOIN Order_Items as T2 ON T1.order_item_id  =  T2.order_item_id\nJOIN Orders as T3 ON T2.order_id  =  T3.order_id\nGROUP BY T3.order_id\nORDER BY total_cost\nLIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Payment_method_code",
            "FROM",
            "Customer_Payment_Methods",
            "GROUP",
            "BY",
            "Payment_method_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "customer_payment_methods",
            "group",
            "by",
            "payment_method_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the most popular payment method?",
        "question_toks": [
            "What",
            "is",
            "the",
            "most",
            "popular",
            "payment",
            "method",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    22,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT payment_method_code FROM customer_payment_methods GROUP BY payment_method_code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Payment_method_code",
            "FROM",
            "Customer_Payment_Methods",
            "GROUP",
            "BY",
            "Payment_method_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "customer_payment_methods",
            "group",
            "by",
            "payment_method_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the payment method that most customers use?",
        "question_toks": [
            "What",
            "is",
            "the",
            "payment",
            "method",
            "that",
            "most",
            "customers",
            "use",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    22,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT payment_method_code FROM customer_payment_methods GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code",
        "query_toks": [
            "SELECT",
            "T1.gender_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "JOIN",
            "Order_items",
            "AS",
            "T3",
            "ON",
            "T2.order_id",
            "=",
            "T3.order_id",
            "GROUP",
            "BY",
            "T1.gender_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "gender_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "order_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "gender_code"
        ],
        "question": "How many number of products does each gender of customers buy? List the gender and the number",
        "question_toks": [
            "How",
            "many",
            "number",
            "of",
            "products",
            "does",
            "each",
            "gender",
            "of",
            "customers",
            "buy",
            "?",
            "List",
            "the",
            "gender",
            "and",
            "the",
            "number"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Customers.gender_code, COUNT(Order_Items.order_item_id) AS num_products_bought \nFROM Customers \nJOIN Orders ON Customers.customer_id = Orders.customer_id \nJOIN Order_Items ON Orders.order_id = Order_Items.order_id \nGROUP BY Customers.gender_code"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code",
        "query_toks": [
            "SELECT",
            "T1.gender_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "JOIN",
            "Order_items",
            "AS",
            "T3",
            "ON",
            "T2.order_id",
            "=",
            "T3.order_id",
            "GROUP",
            "BY",
            "T1.gender_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "gender_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "order_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "gender_code"
        ],
        "question": "How many products does each gender buy?",
        "question_toks": [
            "How",
            "many",
            "products",
            "does",
            "each",
            "gender",
            "buy",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "To answer this question, we can use the SUM function and the GROUP BY clause in SQL. Here is the SQL query:\n\n```sql\nSELECT c.gender_code, COUNT(oi.product_id) as num_products\nFROM Customers c\nJOIN Orders o ON c.customer_id = o.customer_id\nJOIN Order_Items oi ON o.order_id = oi.order_id\nGROUP BY c.gender_code;\n```\n\nThis query will give you the number of products each gender bought from the Orders, Order_Items, and Customers tables. The GROUP BY clause groups the results by the gender_code and the COUNT function then counts the number of product_id's for each group."
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code",
        "query_toks": [
            "SELECT",
            "T1.gender_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.gender_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "gender_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "gender_code"
        ],
        "question": "How many orders has each gender of customers placed?",
        "question_toks": [
            "How",
            "many",
            "orders",
            "has",
            "each",
            "gender",
            "of",
            "customers",
            "placed",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.gender_code ,  COUNT(*) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code",
        "query_toks": [
            "SELECT",
            "T1.gender_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.gender_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "gender_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "gender_code"
        ],
        "question": "How many orders has each gender placed?",
        "question_toks": [
            "How",
            "many",
            "orders",
            "has",
            "each",
            "gender",
            "placed",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(order_id) ,  gender_code FROM Customers GROUP BY gender_code"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_toks": [
            "SELECT",
            "T1.customer_first_name",
            ",",
            "T1.customer_middle_initial",
            ",",
            "T1.customer_last_name",
            ",",
            "T2.Payment_method_code",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Customer_Payment_Methods",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t1",
            ".",
            "customer_middle_initial",
            ",",
            "t1",
            ".",
            "customer_last_name",
            ",",
            "t2",
            ".",
            "payment_method_code",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_payment_methods",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id"
        ],
        "question": "List the customers' first name, middle initial, last name and payment methods.",
        "question_toks": [
            "List",
            "the",
            "customers",
            "'",
            "first",
            "name",
            ",",
            "middle",
            "initial",
            ",",
            "last",
            "name",
            "and",
            "payment",
            "methods",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT customer_first_name, customer_middle_initial, customer_last_name, payment_method_code FROM Customers INNER JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_toks": [
            "SELECT",
            "T1.customer_first_name",
            ",",
            "T1.customer_middle_initial",
            ",",
            "T1.customer_last_name",
            ",",
            "T2.Payment_method_code",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Customer_Payment_Methods",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t1",
            ".",
            "customer_middle_initial",
            ",",
            "t1",
            ".",
            "customer_last_name",
            ",",
            "t2",
            ".",
            "payment_method_code",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_payment_methods",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id"
        ],
        "question": "What are the first names, middle initials, last names, and payment methods of all customers?",
        "question_toks": [
            "What",
            "are",
            "the",
            "first",
            "names",
            ",",
            "middle",
            "initials",
            ",",
            "last",
            "names",
            ",",
            "and",
            "payment",
            "methods",
            "of",
            "all",
            "customers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT t1.customer_first_name, t1.customer_middle_initial, t1.customer_last_name, t2.payment_method_code FROM customers AS t1 JOIN customer_payment_methods AS t2 ON t1.customer_id  =  t2.customer_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number",
        "query_toks": [
            "SELECT",
            "T1.invoice_status_code",
            ",",
            "T1.invoice_date",
            ",",
            "T2.shipment_date",
            "FROM",
            "Invoices",
            "AS",
            "T1",
            "JOIN",
            "Shipments",
            "AS",
            "T2",
            "ON",
            "T1.invoice_number",
            "=",
            "T2.invoice_number"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "invoice_status_code",
            ",",
            "t1",
            ".",
            "invoice_date",
            ",",
            "t2",
            ".",
            "shipment_date",
            "from",
            "invoices",
            "as",
            "t1",
            "join",
            "shipments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "invoice_number",
            "=",
            "t2",
            ".",
            "invoice_number"
        ],
        "question": "List the invoices' status, date and the date of shipment.",
        "question_toks": [
            "List",
            "the",
            "invoices",
            "'",
            "status",
            ",",
            "date",
            "and",
            "the",
            "date",
            "of",
            "shipment",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.invoice_status_code ,  T2.invoice_date ,  T3.shipment_date FROM Invoices AS T2 JOIN Shipments AS T3 ON T2.invoice_number  =  T3.invoice_number"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number",
        "query_toks": [
            "SELECT",
            "T1.invoice_status_code",
            ",",
            "T1.invoice_date",
            ",",
            "T2.shipment_date",
            "FROM",
            "Invoices",
            "AS",
            "T1",
            "JOIN",
            "Shipments",
            "AS",
            "T2",
            "ON",
            "T1.invoice_number",
            "=",
            "T2.invoice_number"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "invoice_status_code",
            ",",
            "t1",
            ".",
            "invoice_date",
            ",",
            "t2",
            ".",
            "shipment_date",
            "from",
            "invoices",
            "as",
            "t1",
            "join",
            "shipments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "invoice_number",
            "=",
            "t2",
            ".",
            "invoice_number"
        ],
        "question": "What are the statuses, dates, and shipment dates for all invoices?",
        "question_toks": [
            "What",
            "are",
            "the",
            "statuses",
            ",",
            "dates",
            ",",
            "and",
            "shipment",
            "dates",
            "for",
            "all",
            "invoices",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT `invoice_status_code`, `invoice_date`, `shipment_date` FROM `invoices` INNER JOIN `shipments` ON `invoices`.`invoice_number` = `shipments`.`invoice_number`"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
        "query_toks": [
            "SELECT",
            "T1.product_name",
            ",",
            "T4.shipment_date",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "JOIN",
            "Shipment_Items",
            "AS",
            "T3",
            "ON",
            "T2.order_item_id",
            "=",
            "T3.order_item_id",
            "JOIN",
            "Shipments",
            "AS",
            "T4",
            "ON",
            "T3.shipment_id",
            "=",
            "T4.shipment_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_name",
            ",",
            "t4",
            ".",
            "shipment_date",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "shipment_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_item_id",
            "=",
            "t3",
            ".",
            "order_item_id",
            "join",
            "shipments",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "shipment_id",
            "=",
            "t4",
            ".",
            "shipment_id"
        ],
        "question": "List the names of the products being shipped and the corresponding shipment date.",
        "question_toks": [
            "List",
            "the",
            "names",
            "of",
            "the",
            "products",
            "being",
            "shipped",
            "and",
            "the",
            "corresponding",
            "shipment",
            "date",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            40,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.product_name ,  T1.shipment_date FROM shipments AS T1 JOIN shipment_items AS T2 ON T1.shipment_id = T2.shipment_id JOIN products AS T3 ON T3.product_id = T2.order_item_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
        "query_toks": [
            "SELECT",
            "T1.product_name",
            ",",
            "T4.shipment_date",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "JOIN",
            "Shipment_Items",
            "AS",
            "T3",
            "ON",
            "T2.order_item_id",
            "=",
            "T3.order_item_id",
            "JOIN",
            "Shipments",
            "AS",
            "T4",
            "ON",
            "T3.shipment_id",
            "=",
            "T4.shipment_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_name",
            ",",
            "t4",
            ".",
            "shipment_date",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "shipment_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_item_id",
            "=",
            "t3",
            ".",
            "order_item_id",
            "join",
            "shipments",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "shipment_id",
            "=",
            "t4",
            ".",
            "shipment_id"
        ],
        "question": "What are the names of the products tht have been shipped, and on what days were they shipped?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "products",
            "tht",
            "have",
            "been",
            "shipped",
            ",",
            "and",
            "on",
            "what",
            "days",
            "were",
            "they",
            "shipped",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            40,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT p.product_name, s.shipment_date FROM Products p JOIN Shipment_Items si ON p.product_id = si.order_item_id JOIN Shipments s ON si.shipment_id = s.shipment_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id",
        "query_toks": [
            "SELECT",
            "T1.order_item_status_code",
            ",",
            "T3.shipment_tracking_number",
            "FROM",
            "Order_items",
            "AS",
            "T1",
            "JOIN",
            "Shipment_Items",
            "AS",
            "T2",
            "ON",
            "T1.order_item_id",
            "=",
            "T2.order_item_id",
            "JOIN",
            "Shipments",
            "AS",
            "T3",
            "ON",
            "T2.shipment_id",
            "=",
            "T3.shipment_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_item_status_code",
            ",",
            "t3",
            ".",
            "shipment_tracking_number",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "shipment_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_item_id",
            "=",
            "t2",
            ".",
            "order_item_id",
            "join",
            "shipments",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "shipment_id",
            "=",
            "t3",
            ".",
            "shipment_id"
        ],
        "question": "What is the status code of the items being ordered and shipped and its corresponding shipment tracking number?",
        "question_toks": [
            "What",
            "is",
            "the",
            "status",
            "code",
            "of",
            "the",
            "items",
            "being",
            "ordered",
            "and",
            "shipped",
            "and",
            "its",
            "corresponding",
            "shipment",
            "tracking",
            "number",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            40,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.order_item_status_code , T2.shipment_tracking_number FROM Order_Items AS T1 INNER JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id",
        "query_toks": [
            "SELECT",
            "T1.order_item_status_code",
            ",",
            "T3.shipment_tracking_number",
            "FROM",
            "Order_items",
            "AS",
            "T1",
            "JOIN",
            "Shipment_Items",
            "AS",
            "T2",
            "ON",
            "T1.order_item_id",
            "=",
            "T2.order_item_id",
            "JOIN",
            "Shipments",
            "AS",
            "T3",
            "ON",
            "T2.shipment_id",
            "=",
            "T3.shipment_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_item_status_code",
            ",",
            "t3",
            ".",
            "shipment_tracking_number",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "shipment_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_item_id",
            "=",
            "t2",
            ".",
            "order_item_id",
            "join",
            "shipments",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "shipment_id",
            "=",
            "t3",
            ".",
            "shipment_id"
        ],
        "question": "What is the status code of the items have been ordered and shipped, and also what are their shipment tracking numbers?",
        "question_toks": [
            "What",
            "is",
            "the",
            "status",
            "code",
            "of",
            "the",
            "items",
            "have",
            "been",
            "ordered",
            "and",
            "shipped",
            ",",
            "and",
            "also",
            "what",
            "are",
            "their",
            "shipment",
            "tracking",
            "numbers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            40,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT S.shipment_tracking_number, OI.order_item_status_code\nFROM Order_Items OI \nJOIN Shipment_Items SI ON OI.order_item_id = SI.order_item_id\nJOIN Shipments S ON SI.shipment_id = S.shipment_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
        "query_toks": [
            "SELECT",
            "T1.product_name",
            ",",
            "T1.product_color",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "JOIN",
            "Shipment_Items",
            "AS",
            "T3",
            "ON",
            "T2.order_item_id",
            "=",
            "T3.order_item_id",
            "JOIN",
            "Shipments",
            "AS",
            "T4",
            "ON",
            "T3.shipment_id",
            "=",
            "T4.shipment_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_name",
            ",",
            "t1",
            ".",
            "product_color",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "shipment_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_item_id",
            "=",
            "t3",
            ".",
            "order_item_id",
            "join",
            "shipments",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "shipment_id",
            "=",
            "t4",
            ".",
            "shipment_id"
        ],
        "question": "What is the product name and the color of the ordered items which have been shipped?",
        "question_toks": [
            "What",
            "is",
            "the",
            "product",
            "name",
            "and",
            "the",
            "color",
            "of",
            "the",
            "ordered",
            "items",
            "which",
            "have",
            "been",
            "shipped",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            40,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT p.product_name, p.product_color FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id JOIN Shipments s ON oi.order_id = s.order_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
        "query_toks": [
            "SELECT",
            "T1.product_name",
            ",",
            "T1.product_color",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "JOIN",
            "Shipment_Items",
            "AS",
            "T3",
            "ON",
            "T2.order_item_id",
            "=",
            "T3.order_item_id",
            "JOIN",
            "Shipments",
            "AS",
            "T4",
            "ON",
            "T3.shipment_id",
            "=",
            "T4.shipment_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_name",
            ",",
            "t1",
            ".",
            "product_color",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "shipment_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_item_id",
            "=",
            "t3",
            ".",
            "order_item_id",
            "join",
            "shipments",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "shipment_id",
            "=",
            "t4",
            ".",
            "shipment_id"
        ],
        "question": "What are the names and colors of all products that have been shipped?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "colors",
            "of",
            "all",
            "products",
            "that",
            "have",
            "been",
            "shipped",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            40,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Shipments AS T3 ON T2.order_id = T3.order_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.product_name",
            ",",
            "T1.product_price",
            ",",
            "T1.product_description",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "JOIN",
            "Orders",
            "AS",
            "T3",
            "ON",
            "T2.order_id",
            "=",
            "T3.order_id",
            "JOIN",
            "Customers",
            "AS",
            "T4",
            "ON",
            "T3.customer_id",
            "=",
            "T4.customer_id",
            "WHERE",
            "T4.gender_code",
            "=",
            "'Female",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "product_name",
            ",",
            "t1",
            ".",
            "product_price",
            ",",
            "t1",
            ".",
            "product_description",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "orders",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "join",
            "customers",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "customer_id",
            "=",
            "t4",
            ".",
            "customer_id",
            "where",
            "t4",
            ".",
            "gender_code",
            "=",
            "value"
        ],
        "question": "List all the distinct product names, price and descriptions which are bought by female customers.",
        "question_toks": [
            "List",
            "all",
            "the",
            "distinct",
            "product",
            "names",
            ",",
            "price",
            "and",
            "descriptions",
            "which",
            "are",
            "bought",
            "by",
            "female",
            "customers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Female\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT T3.product_name, T3.product_price, T3.product_description FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T4 ON T2.order_id  =  T4.order_id JOIN products AS T3 ON T4.product_id  =  T3.product_id WHERE T1.gender_code  =  'Female'"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.product_name",
            ",",
            "T1.product_price",
            ",",
            "T1.product_description",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "JOIN",
            "Orders",
            "AS",
            "T3",
            "ON",
            "T2.order_id",
            "=",
            "T3.order_id",
            "JOIN",
            "Customers",
            "AS",
            "T4",
            "ON",
            "T3.customer_id",
            "=",
            "T4.customer_id",
            "WHERE",
            "T4.gender_code",
            "=",
            "'Female",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "product_name",
            ",",
            "t1",
            ".",
            "product_price",
            ",",
            "t1",
            ".",
            "product_description",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "orders",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "join",
            "customers",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "customer_id",
            "=",
            "t4",
            ".",
            "customer_id",
            "where",
            "t4",
            ".",
            "gender_code",
            "=",
            "value"
        ],
        "question": "What are the different names, prices, and descriptions for all products bought by female customers?",
        "question_toks": [
            "What",
            "are",
            "the",
            "different",
            "names",
            ",",
            "prices",
            ",",
            "and",
            "descriptions",
            "for",
            "all",
            "products",
            "bought",
            "by",
            "female",
            "customers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Female\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT T2.product_name, T2.product_price FROM Customers AS T1 JOIN Order_Items AS T3 ON T1.customer_id  =  T3.order_id JOIN Products AS T2 ON T2.product_id  =  T3.product_id WHERE T1.gender_code  =  'Female'"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )",
        "query_toks": [
            "SELECT",
            "invoice_status_code",
            "FROM",
            "Invoices",
            "WHERE",
            "invoice_number",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "invoice_number",
            "FROM",
            "Shipments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "invoice_status_code",
            "from",
            "invoices",
            "where",
            "invoice_number",
            "not",
            "in",
            "(",
            "select",
            "invoice_number",
            "from",
            "shipments",
            ")"
        ],
        "question": "What are invoices status of all the orders which have not been shipped?",
        "question_toks": [
            "What",
            "are",
            "invoices",
            "status",
            "of",
            "all",
            "the",
            "orders",
            "which",
            "have",
            "not",
            "been",
            "shipped",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            36,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.invoice_status_code FROM Invoices AS T1 INNER JOIN Orders AS T2 ON T1.invoice_number = T2.invoice_id WHERE T2.order_id NOT IN ( SELECT order_id FROM Shipments)"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )",
        "query_toks": [
            "SELECT",
            "invoice_status_code",
            "FROM",
            "Invoices",
            "WHERE",
            "invoice_number",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "invoice_number",
            "FROM",
            "Shipments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "invoice_status_code",
            "from",
            "invoices",
            "where",
            "invoice_number",
            "not",
            "in",
            "(",
            "select",
            "invoice_number",
            "from",
            "shipments",
            ")"
        ],
        "question": "What are the invoice statuses for all orderes that have not been shipped out yet?",
        "question_toks": [
            "What",
            "are",
            "the",
            "invoice",
            "statuses",
            "for",
            "all",
            "orderes",
            "that",
            "have",
            "not",
            "been",
            "shipped",
            "out",
            "yet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            36,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.invoice_status_code FROM Invoices AS T1 INNER JOIN Orders AS T2 ON T1.invoice_number = T2.invoice_id WHERE T2.order_id NOT IN ( SELECT T2.order_id FROM Orders AS T1 INNER JOIN Shipments AS T2 ON T1.order_id = T2.order_id )"
    },
    {
        "db_id": "e_commerce",
        "query": "select t1.order_id ,  t1.date_order_placed ,  sum(t3.product_price) from orders as t1 join order_items as t2 on t1.order_id  =  t2.order_id join products as t3 on t2.product_id  =  t3.product_id group by t1.order_id",
        "query_toks": [
            "select",
            "t1.order_id",
            ",",
            "t1.date_order_placed",
            ",",
            "sum",
            "(",
            "t3.product_price",
            ")",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1.order_id",
            "=",
            "t2.order_id",
            "join",
            "products",
            "as",
            "t3",
            "on",
            "t2.product_id",
            "=",
            "t3.product_id",
            "group",
            "by",
            "t1.order_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_id",
            ",",
            "t1",
            ".",
            "date_order_placed",
            ",",
            "sum",
            "(",
            "t3",
            ".",
            "product_price",
            ")",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "join",
            "products",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "product_id",
            "=",
            "t3",
            ".",
            "product_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id"
        ],
        "question": "What are the total cost of all the orders ? List the order id , date , and total cost .",
        "question_toks": [
            "What",
            "are",
            "the",
            "total",
            "cost",
            "of",
            "all",
            "the",
            "orders",
            "?",
            "List",
            "the",
            "order",
            "id",
            ",",
            "date",
            ",",
            "and",
            "total",
            "cost",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    26,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT o.order_id, o.date_order_placed, SUM(p.product_price) as total_cost FROM Orders o INNER JOIN Order_Items oi ON o.order_id = oi.order_id INNER JOIN Products p ON oi.product_id = p.product_id GROUP BY o.order_id, o.date_order_placed"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.order_id ,  T1.date_order_placed ,  sum(T3.product_price) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id JOIN Products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T1.order_id",
        "query_toks": [
            "SELECT",
            "T1.order_id",
            ",",
            "T1.date_order_placed",
            ",",
            "sum",
            "(",
            "T3.product_price",
            ")",
            "FROM",
            "Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "JOIN",
            "Products",
            "AS",
            "T3",
            "ON",
            "T2.product_id",
            "=",
            "T3.product_id",
            "GROUP",
            "BY",
            "T1.order_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_id",
            ",",
            "t1",
            ".",
            "date_order_placed",
            ",",
            "sum",
            "(",
            "t3",
            ".",
            "product_price",
            ")",
            "from",
            "orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "join",
            "products",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "product_id",
            "=",
            "t3",
            ".",
            "product_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id"
        ],
        "question": "For each order, what is its id, date, and total amount paid?",
        "question_toks": [
            "For",
            "each",
            "order",
            ",",
            "what",
            "is",
            "its",
            "id",
            ",",
            "date",
            ",",
            "and",
            "total",
            "amount",
            "paid",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    26,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.order_id , T1.date_order_placed , SUM(T2.product_price) as total_amount FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(DISTINCT customer_id) FROM Orders",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "customer_id",
            ")",
            "FROM",
            "Orders"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "customer_id",
            ")",
            "from",
            "orders"
        ],
        "question": "How many customers have placed any order?",
        "question_toks": [
            "How",
            "many",
            "customers",
            "have",
            "placed",
            "any",
            "order",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                27,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(DISTINCT T2.customer_id) FROM shipments AS T1 JOIN orders AS T2 ON T1.order_id = T2.order_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(DISTINCT customer_id) FROM Orders",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "customer_id",
            ")",
            "FROM",
            "Orders"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "customer_id",
            ")",
            "from",
            "orders"
        ],
        "question": "How many different customers have ordered things?",
        "question_toks": [
            "How",
            "many",
            "different",
            "customers",
            "have",
            "ordered",
            "things",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                27,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(DISTINCT customer_id) FROM Orders"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(DISTINCT order_item_status_code) FROM Order_items",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "order_item_status_code",
            ")",
            "FROM",
            "Order_items"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "order_item_status_code",
            ")",
            "from",
            "order_items"
        ],
        "question": "How many item states are there in the orders?",
        "question_toks": [
            "How",
            "many",
            "item",
            "states",
            "are",
            "there",
            "in",
            "the",
            "orders",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                33,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "To count the number of distinct order item states in the orders, you can use the following SQL query:\n\n```sql\nSELECT COUNT(DISTINCT order_item_status_code) as order_item_states_count\nFROM Order_Items;\n```"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(DISTINCT order_item_status_code) FROM Order_items",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "order_item_status_code",
            ")",
            "FROM",
            "Order_items"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "order_item_status_code",
            ")",
            "from",
            "order_items"
        ],
        "question": "How many different item status codes are there listed in ordered items?",
        "question_toks": [
            "How",
            "many",
            "different",
            "item",
            "status",
            "codes",
            "are",
            "there",
            "listed",
            "in",
            "ordered",
            "items",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                33,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(DISTINCT `order_item_status_code`) FROM `Order_Items`"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "Payment_method_code",
            ")",
            "FROM",
            "Customer_Payment_Methods"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "payment_method_code",
            ")",
            "from",
            "customer_payment_methods"
        ],
        "question": "How many different payment methods are there?",
        "question_toks": [
            "How",
            "many",
            "different",
            "payment",
            "methods",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(DISTINCT payment_method_code) FROM Customer_Payment_Methods"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "Payment_method_code",
            ")",
            "FROM",
            "Customer_Payment_Methods"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "payment_method_code",
            ")",
            "from",
            "customer_payment_methods"
        ],
        "question": "How many different payment methods can customers choose from?",
        "question_toks": [
            "How",
            "many",
            "different",
            "payment",
            "methods",
            "can",
            "customers",
            "choose",
            "from",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                22,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT payment_method_code) FROM Customer_Payment_Methods"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'",
        "query_toks": [
            "SELECT",
            "login_name",
            ",",
            "login_password",
            "FROM",
            "Customers",
            "WHERE",
            "phone_number",
            "LIKE",
            "'+12",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "login_name",
            ",",
            "login_password",
            "from",
            "customers",
            "where",
            "phone_number",
            "like",
            "value"
        ],
        "question": "What are the login names and passwords of the customers whose phone number have the prefix '+12'?",
        "question_toks": [
            "What",
            "are",
            "the",
            "login",
            "names",
            "and",
            "passwords",
            "of",
            "the",
            "customers",
            "whose",
            "phone",
            "number",
            "have",
            "the",
            "prefix",
            "'+12",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"+12%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'",
        "query_toks": [
            "SELECT",
            "login_name",
            ",",
            "login_password",
            "FROM",
            "Customers",
            "WHERE",
            "phone_number",
            "LIKE",
            "'+12",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "login_name",
            ",",
            "login_password",
            "from",
            "customers",
            "where",
            "phone_number",
            "like",
            "value"
        ],
        "question": "What are the usernames and passwords of all customers whose phone number starts with '+12'?",
        "question_toks": [
            "What",
            "are",
            "the",
            "usernames",
            "and",
            "passwords",
            "of",
            "all",
            "customers",
            "whose",
            "phone",
            "number",
            "starts",
            "with",
            "'+12",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"+12%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT login_name, login_password FROM Customers WHERE phone_number LIKE '+12%'"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'",
        "query_toks": [
            "SELECT",
            "product_size",
            "FROM",
            "Products",
            "WHERE",
            "product_name",
            "LIKE",
            "'",
            "%",
            "Dell",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "product_size",
            "from",
            "products",
            "where",
            "product_name",
            "like",
            "value"
        ],
        "question": "What are the product sizes of the products whose name has the substring 'Dell'?",
        "question_toks": [
            "What",
            "are",
            "the",
            "product",
            "sizes",
            "of",
            "the",
            "products",
            "whose",
            "name",
            "has",
            "the",
            "substring",
            "'Dell",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"%Dell%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'",
        "query_toks": [
            "SELECT",
            "product_size",
            "FROM",
            "Products",
            "WHERE",
            "product_name",
            "LIKE",
            "'",
            "%",
            "Dell",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "product_size",
            "from",
            "products",
            "where",
            "product_name",
            "like",
            "value"
        ],
        "question": "What are the sizes of all products whose name includes the word 'Dell'?",
        "question_toks": [
            "What",
            "are",
            "the",
            "sizes",
            "of",
            "all",
            "products",
            "whose",
            "name",
            "includes",
            "the",
            "word",
            "'Dell",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"%Dell%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%';"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )",
        "query_toks": [
            "SELECT",
            "product_price",
            ",",
            "product_size",
            "FROM",
            "Products",
            "WHERE",
            "product_price",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_price",
            ",",
            "product_size",
            "from",
            "products",
            "where",
            "product_price",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            ")"
        ],
        "question": "What are the product price and the product size of the products whose price is above average?",
        "question_toks": [
            "What",
            "are",
            "the",
            "product",
            "price",
            "and",
            "the",
            "product",
            "size",
            "of",
            "the",
            "products",
            "whose",
            "price",
            "is",
            "above",
            "average",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_price, product_size FROM products WHERE product_price > ( SELECT AVG(product_price) FROM products )"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )",
        "query_toks": [
            "SELECT",
            "product_price",
            ",",
            "product_size",
            "FROM",
            "Products",
            "WHERE",
            "product_price",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_price",
            ",",
            "product_size",
            "from",
            "products",
            "where",
            "product_price",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            ")"
        ],
        "question": "What are the prices and sizes of all products whose price is above the mean?",
        "question_toks": [
            "What",
            "are",
            "the",
            "prices",
            "and",
            "sizes",
            "of",
            "all",
            "products",
            "whose",
            "price",
            "is",
            "above",
            "the",
            "mean",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_price, product_size FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products);"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Products",
            "WHERE",
            "product_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "product_id",
            "FROM",
            "Order_items",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "order_items",
            ")"
        ],
        "question": "How many kinds of products have not been sold?",
        "question_toks": [
            "How",
            "many",
            "kinds",
            "of",
            "products",
            "have",
            "not",
            "been",
            "sold",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            31,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(DISTINCT product_id) - (SELECT count(DISTINCT product_id) FROM Orders JOIN Order_Items ON Orders.order_id  =  Order_Items.order_id) FROM Products"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Products",
            "WHERE",
            "product_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "product_id",
            "FROM",
            "Order_items",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "where",
            "product_id",
            "not",
            "in",
            "(",
            "select",
            "product_id",
            "from",
            "order_items",
            ")"
        ],
        "question": "What is the number of products that have not been ordered yet?",
        "question_toks": [
            "What",
            "is",
            "the",
            "number",
            "of",
            "products",
            "that",
            "have",
            "not",
            "been",
            "ordered",
            "yet",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            31,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT product_id) FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items);"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_Payment_Methods",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "customer_payment_methods",
            ")"
        ],
        "question": "How many customers do not have any payment method?",
        "question_toks": [
            "How",
            "many",
            "customers",
            "do",
            "not",
            "have",
            "any",
            "payment",
            "method",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_payment_methods)"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_Payment_Methods",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "customer_payment_methods",
            ")"
        ],
        "question": "How many customers do not have a listed payment method?",
        "question_toks": [
            "How",
            "many",
            "customers",
            "do",
            "not",
            "have",
            "a",
            "listed",
            "payment",
            "method",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_payment_methods)"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT order_status_code ,  date_order_placed FROM Orders",
        "query_toks": [
            "SELECT",
            "order_status_code",
            ",",
            "date_order_placed",
            "FROM",
            "Orders"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            ",",
            "date_order_placed",
            "from",
            "orders"
        ],
        "question": "What are all the order status and all the dates of orders?",
        "question_toks": [
            "What",
            "are",
            "all",
            "the",
            "order",
            "status",
            "and",
            "all",
            "the",
            "dates",
            "of",
            "orders",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT order_status_code ,  date_order_placed FROM ORDERS"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT order_status_code ,  date_order_placed FROM Orders",
        "query_toks": [
            "SELECT",
            "order_status_code",
            ",",
            "date_order_placed",
            "FROM",
            "Orders"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            ",",
            "date_order_placed",
            "from",
            "orders"
        ],
        "question": "What are the status codes and dates placed for all of the orders?",
        "question_toks": [
            "What",
            "are",
            "the",
            "status",
            "codes",
            "and",
            "dates",
            "placed",
            "for",
            "all",
            "of",
            "the",
            "orders",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT order_status_code, date_order_placed FROM Orders"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'",
        "query_toks": [
            "SELECT",
            "address_line_1",
            ",",
            "town_city",
            ",",
            "county",
            "FROM",
            "Customers",
            "WHERE",
            "Country",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "address_line_1",
            ",",
            "town_city",
            ",",
            "county",
            "from",
            "customers",
            "where",
            "country",
            "=",
            "value"
        ],
        "question": "List the address, town and county information of the customers who live in the USA.",
        "question_toks": [
            "List",
            "the",
            "address",
            ",",
            "town",
            "and",
            "county",
            "information",
            "of",
            "the",
            "customers",
            "who",
            "live",
            "in",
            "the",
            "USA",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT address_line_1,  town_city, county FROM Customers WHERE country = 'USA'"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'",
        "query_toks": [
            "SELECT",
            "address_line_1",
            ",",
            "town_city",
            ",",
            "county",
            "FROM",
            "Customers",
            "WHERE",
            "Country",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "address_line_1",
            ",",
            "town_city",
            ",",
            "county",
            "from",
            "customers",
            "where",
            "country",
            "=",
            "value"
        ],
        "question": "What are the addresses, towns, and county information for all customers who live in the United States?",
        "question_toks": [
            "What",
            "are",
            "the",
            "addresses",
            ",",
            "towns",
            ",",
            "and",
            "county",
            "information",
            "for",
            "all",
            "customers",
            "who",
            "live",
            "in",
            "the",
            "United",
            "States",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT address_line_1, town_city, county FROM Customers WHERE country = 'USA'"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id",
        "query_toks": [
            "SELECT",
            "T1.customer_first_name",
            ",",
            "T4.product_name",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "JOIN",
            "Order_items",
            "AS",
            "T3",
            "ON",
            "T2.order_id",
            "=",
            "T3.order_id",
            "JOIN",
            "Products",
            "AS",
            "T4",
            "ON",
            "T3.product_id",
            "=",
            "T4.product_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t4",
            ".",
            "product_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "order_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "join",
            "products",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "product_id",
            "=",
            "t4",
            ".",
            "product_id"
        ],
        "question": "List all the pairs of buyer first names and product names.",
        "question_toks": [
            "List",
            "all",
            "the",
            "pairs",
            "of",
            "buyer",
            "first",
            "names",
            "and",
            "product",
            "names",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.customer_first_name, T3.product_name FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id INNER JOIN Order_Items AS T4 ON T4.order_id  =  T2.order_id INNER JOIN Products AS T3 ON T4.product_id  =  T3.product_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id",
        "query_toks": [
            "SELECT",
            "T1.customer_first_name",
            ",",
            "T4.product_name",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Orders",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "JOIN",
            "Order_items",
            "AS",
            "T3",
            "ON",
            "T2.order_id",
            "=",
            "T3.order_id",
            "JOIN",
            "Products",
            "AS",
            "T4",
            "ON",
            "T3.product_id",
            "=",
            "T4.product_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_first_name",
            ",",
            "t4",
            ".",
            "product_name",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "orders",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "order_items",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "order_id",
            "=",
            "t3",
            ".",
            "order_id",
            "join",
            "products",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "product_id",
            "=",
            "t4",
            ".",
            "product_id"
        ],
        "question": "What are the first names of all buyers and what products did they buy? List them in pairs.",
        "question_toks": [
            "What",
            "are",
            "the",
            "first",
            "names",
            "of",
            "all",
            "buyers",
            "and",
            "what",
            "products",
            "did",
            "they",
            "buy",
            "?",
            "List",
            "them",
            "in",
            "pairs",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.customer_first_name ,  T2.product_name FROM customers AS T1 JOIN order_items AS T2 ON T1.customer_id  =  T2.order_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(*) FROM Shipment_Items",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Shipment_Items"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "shipment_items"
        ],
        "question": "How many items are shipped?",
        "question_toks": [
            "How",
            "many",
            "items",
            "are",
            "shipped",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM Shipment_Items"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT count(*) FROM Shipment_Items",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Shipment_Items"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "shipment_items"
        ],
        "question": "How many products have been shipped?",
        "question_toks": [
            "How",
            "many",
            "products",
            "have",
            "been",
            "shipped",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(DISTINCT T2.product_id) FROM Shipments AS T1 INNER JOIN Order_Items AS T2 ON T1.order_id = T2.order_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT avg(product_price) FROM Products",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products"
        ],
        "question": "What is the product average price?",
        "question_toks": [
            "What",
            "is",
            "the",
            "product",
            "average",
            "price",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT avg(product_price) FROM Products"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT avg(product_price) FROM Products",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products"
        ],
        "question": "How much do the products cost on average?",
        "question_toks": [
            "How",
            "much",
            "do",
            "the",
            "products",
            "cost",
            "on",
            "average",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(product_price) FROM Products"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T1.product_price",
            ")",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "t1",
            ".",
            "product_price",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id"
        ],
        "question": "What is the average price of the products being ordered?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "price",
            "of",
            "the",
            "products",
            "being",
            "ordered",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(T1.product_price) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T1.product_price",
            ")",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "t1",
            ".",
            "product_price",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id"
        ],
        "question": "What is the price of all products being ordered on average?",
        "question_toks": [
            "What",
            "is",
            "the",
            "price",
            "of",
            "all",
            "products",
            "being",
            "ordered",
            "on",
            "average",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(T1.product_price) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id  =  T2.product_id"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )",
        "query_toks": [
            "SELECT",
            "email_address",
            ",",
            "town_city",
            ",",
            "county",
            "FROM",
            "Customers",
            "WHERE",
            "gender_code",
            "=",
            "(",
            "SELECT",
            "gender_code",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "gender_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "town_city",
            ",",
            "county",
            "from",
            "customers",
            "where",
            "gender_code",
            "=",
            "(",
            "select",
            "gender_code",
            "from",
            "customers",
            "group",
            "by",
            "gender_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ],
        "question": "What are the email address, town and county of the customers who are of the least common gender?",
        "question_toks": [
            "What",
            "are",
            "the",
            "email",
            "address",
            ",",
            "town",
            "and",
            "county",
            "of",
            "the",
            "customers",
            "who",
            "are",
            "of",
            "the",
            "least",
            "common",
            "gender",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                9,
                                false
                            ]
                        ],
                        "having": [],
                        "orderBy": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT email_address, town_city ,  county FROM customers ORDER BY gender_code ASC LIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )",
        "query_toks": [
            "SELECT",
            "email_address",
            ",",
            "town_city",
            ",",
            "county",
            "FROM",
            "Customers",
            "WHERE",
            "gender_code",
            "=",
            "(",
            "SELECT",
            "gender_code",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "gender_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "town_city",
            ",",
            "county",
            "from",
            "customers",
            "where",
            "gender_code",
            "=",
            "(",
            "select",
            "gender_code",
            "from",
            "customers",
            "group",
            "by",
            "gender_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ],
        "question": "What are the email addresses, cities, and counties listed for all cusomters who are from the gender that orders less often?",
        "question_toks": [
            "What",
            "are",
            "the",
            "email",
            "addresses",
            ",",
            "cities",
            ",",
            "and",
            "counties",
            "listed",
            "for",
            "all",
            "cusomters",
            "who",
            "are",
            "from",
            "the",
            "gender",
            "that",
            "orders",
            "less",
            "often",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                9,
                                false
                            ]
                        ],
                        "having": [],
                        "orderBy": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.email_address , T2.town_city , T2.county FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.gender_code ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )",
        "query_toks": [
            "SELECT",
            "date_order_placed",
            "FROM",
            "Orders",
            "WHERE",
            "customer_id",
            "IN",
            "(",
            "SELECT",
            "T1.customer_id",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Customer_Payment_Methods",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.customer_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "date_order_placed",
            "from",
            "orders",
            "where",
            "customer_id",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "customer_id",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_payment_methods",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value",
            ")"
        ],
        "question": "List the order date of the orders who are placed by customers with at least 2 payment methods.",
        "question_toks": [
            "List",
            "the",
            "order",
            "date",
            "of",
            "the",
            "orders",
            "who",
            "are",
            "placed",
            "by",
            "customers",
            "with",
            "at",
            "least",
            "2",
            "payment",
            "methods",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                8,
                                false
                            ]
                        ],
                        "having": [
                            [
                                false,
                                5,
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ],
                                2.0,
                                null
                            ]
                        ],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.date_order_placed FROM Customer_Payment_Methods AS T1 INNER JOIN Customers AS T2 ON T1.customer_id = T2.customer_id INNER JOIN Orders AS T3 ON T2.customer_id = T3.customer_id GROUP BY T2.customer_id HAVING count(*) >= 2"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )",
        "query_toks": [
            "SELECT",
            "date_order_placed",
            "FROM",
            "Orders",
            "WHERE",
            "customer_id",
            "IN",
            "(",
            "SELECT",
            "T1.customer_id",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Customer_Payment_Methods",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.customer_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "date_order_placed",
            "from",
            "orders",
            "where",
            "customer_id",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "customer_id",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_payment_methods",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value",
            ")"
        ],
        "question": "What is the date of all orders that have been placed by customers with at least 2 payment methods?",
        "question_toks": [
            "What",
            "is",
            "the",
            "date",
            "of",
            "all",
            "orders",
            "that",
            "have",
            "been",
            "placed",
            "by",
            "customers",
            "with",
            "at",
            "least",
            "2",
            "payment",
            "methods",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                8,
                                false
                            ]
                        ],
                        "having": [
                            [
                                false,
                                5,
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ],
                                2.0,
                                null
                            ]
                        ],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.date_order_placed FROM Customer_Payment_Methods AS T1 INNER JOIN Customers AS T2 ON T1.customer_id = T2.customer_id INNER JOIN Orders AS T3 ON T2.customer_id = T3.customer_id GROUP BY T2.customer_id HAVING COUNT(*)  >= 2"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1",
        "query_toks": [
            "SELECT",
            "order_status_code",
            "FROM",
            "Orders",
            "GROUP",
            "BY",
            "order_status_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            "from",
            "orders",
            "group",
            "by",
            "order_status_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "limit",
            "value"
        ],
        "question": "What is the most uncommon order status?",
        "question_toks": [
            "What",
            "is",
            "the",
            "most",
            "uncommon",
            "order",
            "status",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.order_status_code FROM ORDERS AS T1 JOIN `Order_Items` AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_status_code ORDER BY COUNT(T2.order_item_id) ASC LIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1",
        "query_toks": [
            "SELECT",
            "order_status_code",
            "FROM",
            "Orders",
            "GROUP",
            "BY",
            "order_status_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            "from",
            "orders",
            "group",
            "by",
            "order_status_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "limit",
            "value"
        ],
        "question": "What is the least common order status?",
        "question_toks": [
            "What",
            "is",
            "the",
            "least",
            "common",
            "order",
            "status",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3",
        "query_toks": [
            "SELECT",
            "T1.product_id",
            ",",
            "T1.product_description",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "GROUP",
            "BY",
            "T1.product_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_id",
            ",",
            "t1",
            ".",
            "product_description",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "group",
            "by",
            "t1",
            ".",
            "product_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "For all the products sold for more than 3 times, list their id and description.",
        "question_toks": [
            "For",
            "all",
            "the",
            "products",
            "sold",
            "for",
            "more",
            "than",
            "3",
            "times",
            ",",
            "list",
            "their",
            "id",
            "and",
            "description",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.product_id ,  T1.product_description FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id HAVING COUNT(T1.product_id) > 3"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3",
        "query_toks": [
            "SELECT",
            "T1.product_id",
            ",",
            "T1.product_description",
            "FROM",
            "Products",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "GROUP",
            "BY",
            "T1.product_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_id",
            ",",
            "t1",
            ".",
            "product_description",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "group",
            "by",
            "t1",
            ".",
            "product_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "For all products sold more than 3 times, what are their ids and descriptions?",
        "question_toks": [
            "For",
            "all",
            "products",
            "sold",
            "more",
            "than",
            "3",
            "times",
            ",",
            "what",
            "are",
            "their",
            "ids",
            "and",
            "descriptions",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_id FROM Products WHERE product_id IN \n(SELECT product_id FROM \n(SELECT product_id, COUNT(*) as num_sold FROM Order_Items GROUP BY product_id HAVING COUNT(*) > 3) AS T1)"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T1.invoice_date",
            ",",
            "T1.invoice_number",
            "FROM",
            "Invoices",
            "AS",
            "T1",
            "JOIN",
            "Shipments",
            "AS",
            "T2",
            "ON",
            "T1.invoice_number",
            "=",
            "T2.invoice_number",
            "GROUP",
            "BY",
            "T1.invoice_number",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "invoice_date",
            ",",
            "t1",
            ".",
            "invoice_number",
            "from",
            "invoices",
            "as",
            "t1",
            "join",
            "shipments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "invoice_number",
            "=",
            "t2",
            ".",
            "invoice_number",
            "group",
            "by",
            "t1",
            ".",
            "invoice_number",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "List the invoice dates and ids of the invoices causing at least 2 shipments.",
        "question_toks": [
            "List",
            "the",
            "invoice",
            "dates",
            "and",
            "ids",
            "of",
            "the",
            "invoices",
            "causing",
            "at",
            "least",
            "2",
            "shipments",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.invoice_date ,  T1.invoice_number FROM Shipments AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T2.invoice_date, T2.invoice_number HAVING COUNT(*) >= 2"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T1.invoice_date",
            ",",
            "T1.invoice_number",
            "FROM",
            "Invoices",
            "AS",
            "T1",
            "JOIN",
            "Shipments",
            "AS",
            "T2",
            "ON",
            "T1.invoice_number",
            "=",
            "T2.invoice_number",
            "GROUP",
            "BY",
            "T1.invoice_number",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "invoice_date",
            ",",
            "t1",
            ".",
            "invoice_number",
            "from",
            "invoices",
            "as",
            "t1",
            "join",
            "shipments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "invoice_number",
            "=",
            "t2",
            ".",
            "invoice_number",
            "group",
            "by",
            "t1",
            ".",
            "invoice_number",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "What are the dates and ids of the invoices that are related to at least 2 shipments?",
        "question_toks": [
            "What",
            "are",
            "the",
            "dates",
            "and",
            "ids",
            "of",
            "the",
            "invoices",
            "that",
            "are",
            "related",
            "to",
            "at",
            "least",
            "2",
            "shipments",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT invoice_date ,  invoice_number FROM invoices INNER JOIN shipments ON invoices.invoice_number = shipments.invoice_number GROUP BY invoice_number HAVING COUNT(*) > 1"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments",
        "query_toks": [
            "SELECT",
            "shipment_tracking_number",
            ",",
            "shipment_date",
            "FROM",
            "Shipments"
        ],
        "query_toks_no_value": [
            "select",
            "shipment_tracking_number",
            ",",
            "shipment_date",
            "from",
            "shipments"
        ],
        "question": "what are all shipment tracking numbers and shipment dates?",
        "question_toks": [
            "what",
            "are",
            "all",
            "shipment",
            "tracking",
            "numbers",
            "and",
            "shipment",
            "dates",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT shipment_tracking_number ,  shipment_date FROM shipments"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments",
        "query_toks": [
            "SELECT",
            "shipment_tracking_number",
            ",",
            "shipment_date",
            "FROM",
            "Shipments"
        ],
        "query_toks_no_value": [
            "select",
            "shipment_tracking_number",
            ",",
            "shipment_date",
            "from",
            "shipments"
        ],
        "question": "What are the tracking numbers and dates for all shipments listed?",
        "question_toks": [
            "What",
            "are",
            "the",
            "tracking",
            "numbers",
            "and",
            "dates",
            "for",
            "all",
            "shipments",
            "listed",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT shipment_tracking_number, shipment_date FROM shipments"
    },
    {
        "db_id": "e_commerce",
        "query": "SELECT product_color ,  product_description ,  product_size FROM Products WHERE product_price  <  ( SELECT max(product_price) FROM products )",
        "query_toks": [
            "SELECT",
            "product_color",
            ",",
            "product_description",
            ",",
            "product_size",
            "FROM",
            "Products",
            "WHERE",
            "product_price",
            "<",
            "(",
            "SELECT",
            "max",
            "(",
            "product_price",
            ")",
            "FROM",
            "products",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_color",
            ",",
            "product_description",
            ",",
            "product_size",
            "from",
            "products",
            "where",
            "product_price",
            "<",
            "(",
            "select",
            "max",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            ")"
        ],
        "question": "What are the color, description and size of the products priced below the maximum price.",
        "question_toks": [
            "What",
            "are",
            "the",
            "color",
            ",",
            "description",
            "and",
            "size",
            "of",
            "the",
            "products",
            "priced",
            "below",
            "the",
            "maximum",
            "price",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_color, product_size FROM Products WHERE product_price < ( SELECT MAX(product_price) FROM Products )"
    },
    {
        "db_id": "e_commerce",
        "query": "select product_color ,  product_description ,  product_size from products where product_price  !=  ( select max(product_price) from products )",
        "query_toks": [
            "select",
            "product_color",
            ",",
            "product_description",
            ",",
            "product_size",
            "from",
            "products",
            "where",
            "product_price",
            "!=",
            "(",
            "select",
            "max",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_color",
            ",",
            "product_description",
            ",",
            "product_size",
            "from",
            "products",
            "where",
            "product_price",
            "!",
            "=",
            "(",
            "select",
            "max",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            ")"
        ],
        "question": "What are the colors , descriptions , and sizes for all products that are not at the maximum price ?",
        "question_toks": [
            "What",
            "are",
            "the",
            "colors",
            ",",
            "descriptions",
            ",",
            "and",
            "sizes",
            "for",
            "all",
            "products",
            "that",
            "are",
            "not",
            "at",
            "the",
            "maximum",
            "price",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_color , product_size FROM Products WHERE product_price != ( SELECT max(product_price) FROM Products )"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT name FROM director WHERE age  >  (SELECT avg(age) FROM director)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "director",
            "WHERE",
            "age",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "director",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "director",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "director",
            ")"
        ],
        "question": "Return the names of directors who are older than the average age.",
        "question_toks": [
            "Return",
            "the",
            "names",
            "of",
            "directors",
            "who",
            "are",
            "older",
            "than",
            "the",
            "average",
            "age",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM director WHERE Age  >  (SELECT AVG(Age) FROM director)"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT name FROM director ORDER BY age DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "director",
            "ORDER",
            "BY",
            "age",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "director",
            "order",
            "by",
            "age",
            "desc",
            "limit",
            "value"
        ],
        "question": "Find the the name of the oldest director.",
        "question_toks": [
            "Find",
            "the",
            "the",
            "name",
            "of",
            "the",
            "oldest",
            "director",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM director ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT count(*) FROM channel WHERE internet LIKE \"%bbc%\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "channel",
            "WHERE",
            "internet",
            "LIKE",
            "``",
            "%",
            "bbc",
            "%",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "channel",
            "where",
            "internet",
            "like",
            "value"
        ],
        "question": "How many channels have the word 'bbc' in their internet link?",
        "question_toks": [
            "How",
            "many",
            "channels",
            "have",
            "the",
            "word",
            "'bbc",
            "'",
            "in",
            "their",
            "internet",
            "link",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"%bbc%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM channel WHERE Internet LIKE '%bbc%'"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT count(DISTINCT Digital_terrestrial_channel) FROM channel",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "Digital_terrestrial_channel",
            ")",
            "FROM",
            "channel"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "digital_terrestrial_channel",
            ")",
            "from",
            "channel"
        ],
        "question": "How many different digital terrestrial channels are there?",
        "question_toks": [
            "How",
            "many",
            "different",
            "digital",
            "terrestrial",
            "channels",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(DISTINCT Digital_terrestrial_channel) FROM channel WHERE Digital_terrestrial_channel  IS NOT NULL AND Digital_terrestrial_channel != ''"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT title FROM program ORDER BY start_year DESC",
        "query_toks": [
            "SELECT",
            "title",
            "FROM",
            "program",
            "ORDER",
            "BY",
            "start_year",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "program",
            "order",
            "by",
            "start_year",
            "desc"
        ],
        "question": "List all program titles in the order of starting year. List the most recent one first.",
        "question_toks": [
            "List",
            "all",
            "program",
            "titles",
            "in",
            "the",
            "order",
            "of",
            "starting",
            "year",
            ".",
            "List",
            "the",
            "most",
            "recent",
            "one",
            "first",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Title FROM program ORDER BY Start_Year DESC"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.name",
            "FROM",
            "program",
            "AS",
            "t1",
            "JOIN",
            "director",
            "AS",
            "t2",
            "ON",
            "t1.director_id",
            "=",
            "t2.director_id",
            "GROUP",
            "BY",
            "t1.director_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "program",
            "as",
            "t1",
            "join",
            "director",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "director_id",
            "=",
            "t2",
            ".",
            "director_id",
            "group",
            "by",
            "t1",
            ".",
            "director_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Which director is in charge of the most programs?",
        "question_toks": [
            "Which",
            "director",
            "is",
            "in",
            "charge",
            "of",
            "the",
            "most",
            "programs",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Name FROM director AS T1 JOIN program AS T2 ON T1.Director_ID  =  T2.Director_ID GROUP BY T2.Director_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT t2.name ,  t2.age FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.name",
            ",",
            "t2.age",
            "FROM",
            "program",
            "AS",
            "t1",
            "JOIN",
            "director",
            "AS",
            "t2",
            "ON",
            "t1.director_id",
            "=",
            "t2.director_id",
            "GROUP",
            "BY",
            "t1.director_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "age",
            "from",
            "program",
            "as",
            "t1",
            "join",
            "director",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "director_id",
            "=",
            "t2",
            ".",
            "director_id",
            "group",
            "by",
            "t1",
            ".",
            "director_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Find the name and age of the director who is in charge of the most programs?",
        "question_toks": [
            "Find",
            "the",
            "name",
            "and",
            "age",
            "of",
            "the",
            "director",
            "who",
            "is",
            "in",
            "charge",
            "of",
            "the",
            "most",
            "programs",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Name, T1.Age FROM director AS T1 JOIN program AS T2 ON T1.Director_ID  =  T2.Director_ID GROUP BY T1.Name, T1.Age ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT title FROM program ORDER BY start_year DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "title",
            "FROM",
            "program",
            "ORDER",
            "BY",
            "start_year",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "program",
            "order",
            "by",
            "start_year",
            "desc",
            "limit",
            "value"
        ],
        "question": "Return the title of the program that began most recently.",
        "question_toks": [
            "Return",
            "the",
            "title",
            "of",
            "the",
            "program",
            "that",
            "began",
            "most",
            "recently",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Title FROM program ORDER BY Start_Year DESC LIMIT 1"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "t1.name",
            ",",
            "t1.internet",
            "FROM",
            "channel",
            "AS",
            "t1",
            "JOIN",
            "program",
            "AS",
            "t2",
            "ON",
            "t1.channel_id",
            "=",
            "t2.channel_id",
            "GROUP",
            "BY",
            "t1.channel_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "internet",
            "from",
            "channel",
            "as",
            "t1",
            "join",
            "program",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "channel_id",
            "=",
            "t2",
            ".",
            "channel_id",
            "group",
            "by",
            "t1",
            ".",
            "channel_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Find the name and website link of the channels that have more than one program.",
        "question_toks": [
            "Find",
            "the",
            "name",
            "and",
            "website",
            "link",
            "of",
            "the",
            "channels",
            "that",
            "have",
            "more",
            "than",
            "one",
            "program",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Name, T2.Internet FROM program AS T1 JOIN channel AS T2 ON T1.Channel_ID  =  T2.Channel_ID GROUP BY T1.Channel_ID HAVING COUNT(*) > 1"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT t1.name ,  count(*) FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id",
        "query_toks": [
            "SELECT",
            "t1.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "channel",
            "AS",
            "t1",
            "JOIN",
            "program",
            "AS",
            "t2",
            "ON",
            "t1.channel_id",
            "=",
            "t2.channel_id",
            "GROUP",
            "BY",
            "t1.channel_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "channel",
            "as",
            "t1",
            "join",
            "program",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "channel_id",
            "=",
            "t2",
            ".",
            "channel_id",
            "group",
            "by",
            "t1",
            ".",
            "channel_id"
        ],
        "question": "Find the number of programs for each channel. Return the name of each channel as well.",
        "question_toks": [
            "Find",
            "the",
            "number",
            "of",
            "programs",
            "for",
            "each",
            "channel",
            ".",
            "Return",
            "the",
            "name",
            "of",
            "each",
            "channel",
            "as",
            "well",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.name ,  COUNT(*) FROM channel AS T1 JOIN program AS T2 ON T1.channel_id  =  T2.channel_id GROUP BY T1.name"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT count(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM program)",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "channel",
            "WHERE",
            "channel_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "channel_id",
            "FROM",
            "program",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "channel",
            "where",
            "channel_id",
            "not",
            "in",
            "(",
            "select",
            "channel_id",
            "from",
            "program",
            ")"
        ],
        "question": "Find the number of channels that do not run any program.",
        "question_toks": [
            "Find",
            "the",
            "number",
            "of",
            "channels",
            "that",
            "do",
            "not",
            "run",
            "any",
            "program",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT Channel_ID) FROM channel WHERE Channel_ID NOT IN (SELECT DISTINCT Channel_ID FROM program)"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id WHERE t1.title  =  'Dracula'",
        "query_toks": [
            "SELECT",
            "t2.name",
            "FROM",
            "program",
            "AS",
            "t1",
            "JOIN",
            "director",
            "AS",
            "t2",
            "ON",
            "t1.director_id",
            "=",
            "t2.director_id",
            "WHERE",
            "t1.title",
            "=",
            "'Dracula",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "program",
            "as",
            "t1",
            "join",
            "director",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "director_id",
            "=",
            "t2",
            ".",
            "director_id",
            "where",
            "t1",
            ".",
            "title",
            "=",
            "value"
        ],
        "question": "What is the name of the director who is in the \"Dracula\" program?",
        "question_toks": [
            "What",
            "is",
            "the",
            "name",
            "of",
            "the",
            "director",
            "who",
            "is",
            "in",
            "the",
            "``",
            "Dracula",
            "''",
            "program",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Dracula\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT director.Name FROM director_program JOIN director ON director.Director_ID = director_program.Director_ID JOIN program ON program.Program_ID = director_program.Program_ID WHERE program.Title = \"Dracula\""
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            ",",
            "t1.internet",
            "FROM",
            "channel",
            "AS",
            "t1",
            "JOIN",
            "director_admin",
            "AS",
            "t2",
            "ON",
            "t1.channel_id",
            "=",
            "t2.channel_id",
            "GROUP",
            "BY",
            "t1.channel_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "internet",
            "from",
            "channel",
            "as",
            "t1",
            "join",
            "director_admin",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "channel_id",
            "=",
            "t2",
            ".",
            "channel_id",
            "group",
            "by",
            "t1",
            ".",
            "channel_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Find the name and internet web of the channel that is directed by the most directors.",
        "question_toks": [
            "Find",
            "the",
            "name",
            "and",
            "internet",
            "web",
            "of",
            "the",
            "channel",
            "that",
            "is",
            "directed",
            "by",
            "the",
            "most",
            "directors",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.name ,  T2.Internet FROM director_admin AS T1 JOIN channel AS T2 ON T1.channel_id  =  T2.channel_id JOIN director AS T3 ON T1.director_id  =  T3.director_id GROUP BY T3.director_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT name FROM director WHERE age BETWEEN 30 AND 60",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "director",
            "WHERE",
            "age",
            "BETWEEN",
            "30",
            "AND",
            "60"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "director",
            "where",
            "age",
            "between",
            "value",
            "and",
            "value"
        ],
        "question": "Find the name of the directors whose age is between 30 and 60.",
        "question_toks": [
            "Find",
            "the",
            "name",
            "of",
            "the",
            "directors",
            "whose",
            "age",
            "is",
            "between",
            "30",
            "and",
            "60",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    30.0,
                    60.0
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM director WHERE Age BETWEEN 30 AND 60"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  <  40 INTERSECT SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  >  60",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "channel",
            "AS",
            "t1",
            "JOIN",
            "director_admin",
            "AS",
            "t2",
            "ON",
            "t1.channel_id",
            "=",
            "t2.channel_id",
            "JOIN",
            "director",
            "AS",
            "t3",
            "ON",
            "t2.director_id",
            "=",
            "t3.director_id",
            "WHERE",
            "t3.age",
            "<",
            "40",
            "INTERSECT",
            "SELECT",
            "t1.name",
            "FROM",
            "channel",
            "AS",
            "t1",
            "JOIN",
            "director_admin",
            "AS",
            "t2",
            "ON",
            "t1.channel_id",
            "=",
            "t2.channel_id",
            "JOIN",
            "director",
            "AS",
            "t3",
            "ON",
            "t2.director_id",
            "=",
            "t3.director_id",
            "WHERE",
            "t3.age",
            ">",
            "60"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "channel",
            "as",
            "t1",
            "join",
            "director_admin",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "channel_id",
            "=",
            "t2",
            ".",
            "channel_id",
            "join",
            "director",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "director_id",
            "=",
            "t3",
            ".",
            "director_id",
            "where",
            "t3",
            ".",
            "age",
            "<",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "channel",
            "as",
            "t1",
            "join",
            "director_admin",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "channel_id",
            "=",
            "t2",
            ".",
            "channel_id",
            "join",
            "director",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "director_id",
            "=",
            "t3",
            ".",
            "director_id",
            "where",
            "t3",
            ".",
            "age",
            ">",
            "value"
        ],
        "question": "give me the name of channels that have both a director younger than 40 and a director older than 60.",
        "question_toks": [
            "give",
            "me",
            "the",
            "name",
            "of",
            "channels",
            "that",
            "have",
            "both",
            "a",
            "director",
            "younger",
            "than",
            "40",
            "and",
            "a",
            "director",
            "older",
            "than",
            "60",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    40.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            3
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    14,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        60.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.name FROM channel AS T1 JOIN program AS T2 ON T1.channel_id  =  T2.channel_id JOIN director AS T3 ON T2.director_id  =  T3.director_id WHERE T3.age < 40 AND T3.age > 60"
    },
    {
        "db_id": "bbc_channels",
        "query": "SELECT t1.name ,  t1.channel_id FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.name != \"Hank Baskett\"",
        "query_toks": [
            "SELECT",
            "t1.name",
            ",",
            "t1.channel_id",
            "FROM",
            "channel",
            "AS",
            "t1",
            "JOIN",
            "director_admin",
            "AS",
            "t2",
            "ON",
            "t1.channel_id",
            "=",
            "t2.channel_id",
            "JOIN",
            "director",
            "AS",
            "t3",
            "ON",
            "t2.director_id",
            "=",
            "t3.director_id",
            "WHERE",
            "t3.name",
            "!",
            "=",
            "``",
            "Hank",
            "Baskett",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "channel_id",
            "from",
            "channel",
            "as",
            "t1",
            "join",
            "director_admin",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "channel_id",
            "=",
            "t2",
            ".",
            "channel_id",
            "join",
            "director",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "director_id",
            "=",
            "t3",
            ".",
            "director_id",
            "where",
            "t3",
            ".",
            "name",
            "!",
            "=",
            "value"
        ],
        "question": "Find the id and name of the channel that is not directed by Hank Baskett.",
        "question_toks": [
            "Find",
            "the",
            "id",
            "and",
            "name",
            "of",
            "the",
            "channel",
            "that",
            "is",
            "not",
            "directed",
            "by",
            "Hank",
            "Baskett",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"Hank Baskett\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Channel_ID, name FROM channel WHERE director_id != (SELECT director_id FROM director WHERE name = \"Hank Baskett\")"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT count(*) FROM radio",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "radio"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "radio"
        ],
        "question": "How many radios are there?",
        "question_toks": [
            "How",
            "many",
            "radios",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM radio"
    },
    {
        "db_id": "tv_shows",
        "query": "select transmitter from radio order by erp_kw asc",
        "query_toks": [
            "select",
            "transmitter",
            "from",
            "radio",
            "order",
            "by",
            "erp_kw",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "transmitter",
            "from",
            "radio",
            "order",
            "by",
            "erp_kw",
            "asc"
        ],
        "question": "List the transmitters of radios in ascending order of erp kw .",
        "question_toks": [
            "List",
            "the",
            "transmitters",
            "of",
            "radios",
            "in",
            "ascending",
            "order",
            "of",
            "erp",
            "kw",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Transmitter FROM radio ORDER BY ERP_kW ASC"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT tv_show_name ,  Original_Airdate FROM tv_show",
        "query_toks": [
            "SELECT",
            "tv_show_name",
            ",",
            "Original_Airdate",
            "FROM",
            "tv_show"
        ],
        "query_toks_no_value": [
            "select",
            "tv_show_name",
            ",",
            "original_airdate",
            "from",
            "tv_show"
        ],
        "question": "What are the names and original air dates of tv shows?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "original",
            "air",
            "dates",
            "of",
            "tv",
            "shows",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT tv_show_name, original_airdate FROM tv_show"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT Station_name FROM city_channel WHERE Affiliation != \"ABC\"",
        "query_toks": [
            "SELECT",
            "Station_name",
            "FROM",
            "city_channel",
            "WHERE",
            "Affiliation",
            "!",
            "=",
            "``",
            "ABC",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "station_name",
            "from",
            "city_channel",
            "where",
            "affiliation",
            "!",
            "=",
            "value"
        ],
        "question": "List the station names of city channels whose affiliation is not \"ABC\".",
        "question_toks": [
            "List",
            "the",
            "station",
            "names",
            "of",
            "city",
            "channels",
            "whose",
            "affiliation",
            "is",
            "not",
            "``",
            "ABC",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"ABC\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.Station_name FROM city_channel_tv_show AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T3.Radio_ID  =  T1.Radio_ID WHERE T2.Affiliation  !=  'ABC'"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT Transmitter FROM radio WHERE ERP_kW  >  150 OR ERP_kW  <  30",
        "query_toks": [
            "SELECT",
            "Transmitter",
            "FROM",
            "radio",
            "WHERE",
            "ERP_kW",
            ">",
            "150",
            "OR",
            "ERP_kW",
            "<",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "transmitter",
            "from",
            "radio",
            "where",
            "erp_kw",
            ">",
            "value",
            "or",
            "erp_kw",
            "<",
            "value"
        ],
        "question": "Show the transmitters of radios whose ERP is bigger than 150 or smaller than 30.",
        "question_toks": [
            "Show",
            "the",
            "transmitters",
            "of",
            "radios",
            "whose",
            "ERP",
            "is",
            "bigger",
            "than",
            "150",
            "or",
            "smaller",
            "than",
            "30",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    150.0,
                    null
                ],
                "or",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT transmitter FROM radio WHERE ERP_kW > 150 OR ERP_kW < 30"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Transmitter",
            "FROM",
            "radio",
            "ORDER",
            "BY",
            "ERP_kW",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transmitter",
            "from",
            "radio",
            "order",
            "by",
            "erp_kw",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the transmitter of the radio with the largest ERP_kW?",
        "question_toks": [
            "What",
            "is",
            "the",
            "transmitter",
            "of",
            "the",
            "radio",
            "with",
            "the",
            "largest",
            "ERP_kW",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT avg(ERP_kW) FROM radio",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "ERP_kW",
            ")",
            "FROM",
            "radio"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "erp_kw",
            ")",
            "from",
            "radio"
        ],
        "question": "What is the average ERP across all radios?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "ERP",
            "across",
            "all",
            "radios",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(ERP_kW) FROM radio"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT Affiliation ,  COUNT(*) FROM city_channel GROUP BY Affiliation",
        "query_toks": [
            "SELECT",
            "Affiliation",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "city_channel",
            "GROUP",
            "BY",
            "Affiliation"
        ],
        "query_toks_no_value": [
            "select",
            "affiliation",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "city_channel",
            "group",
            "by",
            "affiliation"
        ],
        "question": "Show the different affiliations of city channels and the number of city channels with each affiliation.",
        "question_toks": [
            "Show",
            "the",
            "different",
            "affiliations",
            "of",
            "city",
            "channels",
            "and",
            "the",
            "number",
            "of",
            "city",
            "channels",
            "with",
            "each",
            "affiliation",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Affiliation, count(*) FROM city_channel GROUP BY Affiliation"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT Affiliation FROM city_channel GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Affiliation",
            "FROM",
            "city_channel",
            "GROUP",
            "BY",
            "Affiliation",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "affiliation",
            "from",
            "city_channel",
            "group",
            "by",
            "affiliation",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Please show the most common affiliation for city channels.",
        "question_toks": [
            "Please",
            "show",
            "the",
            "most",
            "common",
            "affiliation",
            "for",
            "city",
            "channels",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT affiliation, count(*) AS frequency FROM city_channel GROUP BY affiliation ORDER BY frequency DESC LIMIT 1"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT Affiliation FROM city_channel GROUP BY Affiliation HAVING COUNT(*)  >  3",
        "query_toks": [
            "SELECT",
            "Affiliation",
            "FROM",
            "city_channel",
            "GROUP",
            "BY",
            "Affiliation",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "affiliation",
            "from",
            "city_channel",
            "group",
            "by",
            "affiliation",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "List the affiliations shared by more than three city channels.",
        "question_toks": [
            "List",
            "the",
            "affiliations",
            "shared",
            "by",
            "more",
            "than",
            "three",
            "city",
            "channels",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT affiliation FROM city_channel GROUP BY affiliation HAVING count(*)  >  3"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT City ,  Station_name FROM city_channel ORDER BY Station_name ASC",
        "query_toks": [
            "SELECT",
            "City",
            ",",
            "Station_name",
            "FROM",
            "city_channel",
            "ORDER",
            "BY",
            "Station_name",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "station_name",
            "from",
            "city_channel",
            "order",
            "by",
            "station_name",
            "asc"
        ],
        "question": "Show the cities and station names of city channels in ascending alphabetical order of station name.",
        "question_toks": [
            "Show",
            "the",
            "cities",
            "and",
            "station",
            "names",
            "of",
            "city",
            "channels",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "of",
            "station",
            "name",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.City, T2.Station_name FROM city_channel AS T1 INNER JOIN city_channel AS T2 ON T1.ID = T2.ID ORDER BY T2.Station_name ASC"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT T3.Transmitter ,  T2.City FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID",
        "query_toks": [
            "SELECT",
            "T3.Transmitter",
            ",",
            "T2.City",
            "FROM",
            "city_channel_radio",
            "AS",
            "T1",
            "JOIN",
            "city_channel",
            "AS",
            "T2",
            "ON",
            "T1.City_channel_ID",
            "=",
            "T2.ID",
            "JOIN",
            "radio",
            "AS",
            "T3",
            "ON",
            "T1.Radio_ID",
            "=",
            "T3.Radio_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "transmitter",
            ",",
            "t2",
            ".",
            "city",
            "from",
            "city_channel_radio",
            "as",
            "t1",
            "join",
            "city_channel",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_channel_id",
            "=",
            "t2",
            ".",
            "id",
            "join",
            "radio",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "radio_id",
            "=",
            "t3",
            ".",
            "radio_id"
        ],
        "question": "Show the transmitters of radios and the cities of the channels they are associated with.",
        "question_toks": [
            "Show",
            "the",
            "transmitters",
            "of",
            "radios",
            "and",
            "the",
            "cities",
            "of",
            "the",
            "channels",
            "they",
            "are",
            "associated",
            "with",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Transmitter ,  City FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID  =  T2.City_channel_ID"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT T3.Transmitter ,  T2.Station_name FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID ORDER BY T3.ERP_kW DESC",
        "query_toks": [
            "SELECT",
            "T3.Transmitter",
            ",",
            "T2.Station_name",
            "FROM",
            "city_channel_radio",
            "AS",
            "T1",
            "JOIN",
            "city_channel",
            "AS",
            "T2",
            "ON",
            "T1.City_channel_ID",
            "=",
            "T2.ID",
            "JOIN",
            "radio",
            "AS",
            "T3",
            "ON",
            "T1.Radio_ID",
            "=",
            "T3.Radio_ID",
            "ORDER",
            "BY",
            "T3.ERP_kW",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "transmitter",
            ",",
            "t2",
            ".",
            "station_name",
            "from",
            "city_channel_radio",
            "as",
            "t1",
            "join",
            "city_channel",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_channel_id",
            "=",
            "t2",
            ".",
            "id",
            "join",
            "radio",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "radio_id",
            "=",
            "t3",
            ".",
            "radio_id",
            "order",
            "by",
            "t3",
            ".",
            "erp_kw",
            "desc"
        ],
        "question": "Show the transmitters of radios and the station names of the channels they are associated with in descending order of the ERP of the radios.",
        "question_toks": [
            "Show",
            "the",
            "transmitters",
            "of",
            "radios",
            "and",
            "the",
            "station",
            "names",
            "of",
            "the",
            "channels",
            "they",
            "are",
            "associated",
            "with",
            "in",
            "descending",
            "order",
            "of",
            "the",
            "ERP",
            "of",
            "the",
            "radios",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.transmitter ,  T2.station_name FROM radio AS T1 JOIN city_channel_radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID JOIN city_channel AS T2 ON T3.City_channel_ID  =  T2.ID ORDER BY T1.ERP_kW DESC"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT T2.Transmitter ,  COUNT(*) FROM city_channel_radio AS T1 JOIN radio AS T2 ON T1.Radio_ID  =  T2.Radio_ID GROUP BY T2.Transmitter",
        "query_toks": [
            "SELECT",
            "T2.Transmitter",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "city_channel_radio",
            "AS",
            "T1",
            "JOIN",
            "radio",
            "AS",
            "T2",
            "ON",
            "T1.Radio_ID",
            "=",
            "T2.Radio_ID",
            "GROUP",
            "BY",
            "T2.Transmitter"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "transmitter",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "city_channel_radio",
            "as",
            "t1",
            "join",
            "radio",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "radio_id",
            "=",
            "t2",
            ".",
            "radio_id",
            "group",
            "by",
            "t2",
            ".",
            "transmitter"
        ],
        "question": "Show the transmitters of the radios and the number of city channels they are associated with.",
        "question_toks": [
            "Show",
            "the",
            "transmitters",
            "of",
            "the",
            "radios",
            "and",
            "the",
            "number",
            "of",
            "city",
            "channels",
            "they",
            "are",
            "associated",
            "with",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.transmitter ,  count(T3.city_channel_id) FROM radio AS T1 JOIN city_channel_radio AS T2 ON T1.Radio_ID  =  T2.Radio_ID JOIN city_channel AS T3 ON T3.ID  =  T2.city_channel_id GROUP BY T1.transmitter"
    },
    {
        "db_id": "tv_shows",
        "query": "SELECT Transmitter FROM radio WHERE Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio)",
        "query_toks": [
            "SELECT",
            "Transmitter",
            "FROM",
            "radio",
            "WHERE",
            "Radio_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Radio_ID",
            "FROM",
            "city_channel_radio",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "transmitter",
            "from",
            "radio",
            "where",
            "radio_id",
            "not",
            "in",
            "(",
            "select",
            "radio_id",
            "from",
            "city_channel_radio",
            ")"
        ],
        "question": "Show the distinct transmitters of radios that are not associated with any city channel.",
        "question_toks": [
            "Show",
            "the",
            "distinct",
            "transmitters",
            "of",
            "radios",
            "that",
            "are",
            "not",
            "associated",
            "with",
            "any",
            "city",
            "channel",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            19,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Transmitter FROM radio WHERE radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio)"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "model",
            "FROM",
            "vehicle",
            "WHERE",
            "power",
            ">",
            "6000",
            "ORDER",
            "BY",
            "top_speed",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "vehicle",
            "where",
            "power",
            ">",
            "value",
            "order",
            "by",
            "top_speed",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the model of the vehicle with maximum top speed whose power is higher than 6000?",
        "question_toks": [
            "What",
            "is",
            "the",
            "model",
            "of",
            "the",
            "vehicle",
            "with",
            "maximum",
            "top",
            "speed",
            "whose",
            "power",
            "is",
            "higher",
            "than",
            "6000",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    6000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Model FROM vehicle WHERE Power > 6000 ORDER BY Top_Speed DESC LIMIT 1"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "model",
            "FROM",
            "vehicle",
            "WHERE",
            "power",
            ">",
            "6000",
            "ORDER",
            "BY",
            "top_speed",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "vehicle",
            "where",
            "power",
            ">",
            "value",
            "order",
            "by",
            "top_speed",
            "desc",
            "limit",
            "value"
        ],
        "question": "Of vehicles with power over 6000, return the model of the vehicle with the greatest top speed.",
        "question_toks": [
            "Of",
            "vehicles",
            "with",
            "power",
            "over",
            "6000",
            ",",
            "return",
            "the",
            "model",
            "of",
            "the",
            "vehicle",
            "with",
            "the",
            "greatest",
            "top",
            "speed",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    6000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Model FROM vehicle WHERE Power > 6000 ORDER BY Top_Speed DESC LIMIT 1"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT name FROM driver WHERE citizenship  =  'United States'",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "driver",
            "WHERE",
            "citizenship",
            "=",
            "'United",
            "States",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "driver",
            "where",
            "citizenship",
            "=",
            "value"
        ],
        "question": "What are the names of the drivers who are citizens of the 'United States'?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "drivers",
            "who",
            "are",
            "citizens",
            "of",
            "the",
            "'United",
            "States",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"United States\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM driver WHERE Citizenship = \"United States\""
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT name FROM driver WHERE citizenship  =  'United States'",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "driver",
            "WHERE",
            "citizenship",
            "=",
            "'United",
            "States",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "driver",
            "where",
            "citizenship",
            "=",
            "value"
        ],
        "question": "Return the names of drivers with citizenship from the United States.",
        "question_toks": [
            "Return",
            "the",
            "names",
            "of",
            "drivers",
            "with",
            "citizenship",
            "from",
            "the",
            "United",
            "States",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"United States\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM driver WHERE Citizenship = 'United States'"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "driver_id",
            "FROM",
            "vehicle_driver",
            "GROUP",
            "BY",
            "driver_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "driver_id",
            "from",
            "vehicle_driver",
            "group",
            "by",
            "driver_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "How many vehicles has a driver driven at most, and what is the driver id of the driver who has driven this many vehicles?",
        "question_toks": [
            "How",
            "many",
            "vehicles",
            "has",
            "a",
            "driver",
            "driven",
            "at",
            "most",
            ",",
            "and",
            "what",
            "is",
            "the",
            "driver",
            "id",
            "of",
            "the",
            "driver",
            "who",
            "has",
            "driven",
            "this",
            "many",
            "vehicles",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT MAX(COUNT(vehicle.Vehicle_ID)) AS Max_Vehicles, driver.Driver_ID FROM vehicle_driver JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID GROUP BY driver.Driver_ID"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "driver_id",
            "FROM",
            "vehicle_driver",
            "GROUP",
            "BY",
            "driver_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "driver_id",
            "from",
            "vehicle_driver",
            "group",
            "by",
            "driver_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the id of the driver who has driven the most vehicles, and how many vehicles is this?",
        "question_toks": [
            "What",
            "is",
            "the",
            "id",
            "of",
            "the",
            "driver",
            "who",
            "has",
            "driven",
            "the",
            "most",
            "vehicles",
            ",",
            "and",
            "how",
            "many",
            "vehicles",
            "is",
            "this",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Driver_ID, COUNT(*) \nFROM vehicle_driver AS T1 \nJOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID \nGROUP BY T1.Driver_ID \nORDER BY COUNT(*) DESC \nLIMIT 1"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "power",
            ")",
            ",",
            "avg",
            "(",
            "power",
            ")",
            "FROM",
            "vehicle",
            "WHERE",
            "builder",
            "=",
            "'Zhuzhou",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "power",
            ")",
            ",",
            "avg",
            "(",
            "power",
            ")",
            "from",
            "vehicle",
            "where",
            "builder",
            "=",
            "value"
        ],
        "question": "What is the maximum and average power for the vehicles manufactured by 'Zhuzhou'?",
        "question_toks": [
            "What",
            "is",
            "the",
            "maximum",
            "and",
            "average",
            "power",
            "for",
            "the",
            "vehicles",
            "manufactured",
            "by",
            "'Zhuzhou",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"Zhuzhou\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT max(T1.Power) ,  avg(T1.Power) FROM vehicle AS T1 INNER JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID INNER JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T1.Builder = \"Zhuzhou\""
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "power",
            ")",
            ",",
            "avg",
            "(",
            "power",
            ")",
            "FROM",
            "vehicle",
            "WHERE",
            "builder",
            "=",
            "'Zhuzhou",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "power",
            ")",
            ",",
            "avg",
            "(",
            "power",
            ")",
            "from",
            "vehicle",
            "where",
            "builder",
            "=",
            "value"
        ],
        "question": "Return the maximum and average power for the vehicles built by Zhuzhou.",
        "question_toks": [
            "Return",
            "the",
            "maximum",
            "and",
            "average",
            "power",
            "for",
            "the",
            "vehicles",
            "built",
            "by",
            "Zhuzhou",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"Zhuzhou\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT MAX(T1.Power), AVG(T1.Power) FROM vehicle AS T1 JOIN driver AS T2 ON T1.Vehicle_ID = T2.Driver_ID WHERE T2.Builder = 'Zhuzhou'"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "vehicle_id",
            "FROM",
            "vehicle_driver",
            "GROUP",
            "BY",
            "vehicle_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "vehicle_id",
            "from",
            "vehicle_driver",
            "group",
            "by",
            "vehicle_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "question": "What is the id of the vehicle driven for the least times for the vehicles ever used?",
        "question_toks": [
            "What",
            "is",
            "the",
            "id",
            "of",
            "the",
            "vehicle",
            "driven",
            "for",
            "the",
            "least",
            "times",
            "for",
            "the",
            "vehicles",
            "ever",
            "used",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT vehicle_id FROM vehicle_driver ORDER BY vehicle_id ASC LIMIT 1"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "vehicle_id",
            "FROM",
            "vehicle_driver",
            "GROUP",
            "BY",
            "vehicle_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "vehicle_id",
            "from",
            "vehicle_driver",
            "group",
            "by",
            "vehicle_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "question": "Return the id of the vehicle that has been driven the fewest times.",
        "question_toks": [
            "Return",
            "the",
            "id",
            "of",
            "the",
            "vehicle",
            "that",
            "has",
            "been",
            "driven",
            "the",
            "fewest",
            "times",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Vehicle_ID FROM vehicle_driver GROUP BY Vehicle_ID ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996",
        "query_toks": [
            "SELECT",
            "top_speed",
            ",",
            "power",
            "FROM",
            "vehicle",
            "WHERE",
            "build_year",
            "=",
            "1996"
        ],
        "query_toks_no_value": [
            "select",
            "top_speed",
            ",",
            "power",
            "from",
            "vehicle",
            "where",
            "build_year",
            "=",
            "value"
        ],
        "question": "What is the top speed and power of the vehicle manufactured in the year of 1996?",
        "question_toks": [
            "What",
            "is",
            "the",
            "top",
            "speed",
            "and",
            "power",
            "of",
            "the",
            "vehicle",
            "manufactured",
            "in",
            "the",
            "year",
            "of",
            "1996",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1996.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Top_Speed ,  Power FROM vehicle WHERE Build_Year = 1996"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996",
        "query_toks": [
            "SELECT",
            "top_speed",
            ",",
            "power",
            "FROM",
            "vehicle",
            "WHERE",
            "build_year",
            "=",
            "1996"
        ],
        "query_toks_no_value": [
            "select",
            "top_speed",
            ",",
            "power",
            "from",
            "vehicle",
            "where",
            "build_year",
            "=",
            "value"
        ],
        "question": "Return the top speed and power of the vehicle that was built in the year 1996.",
        "question_toks": [
            "Return",
            "the",
            "top",
            "speed",
            "and",
            "power",
            "of",
            "the",
            "vehicle",
            "that",
            "was",
            "built",
            "in",
            "the",
            "year",
            "1996",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1996.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Top_Speed ,  Power FROM vehicle WHERE Build_Year = '1996' ORDER BY Top_Speed DESC LIMIT 1;"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT build_year ,  model ,  builder FROM vehicle",
        "query_toks": [
            "SELECT",
            "build_year",
            ",",
            "model",
            ",",
            "builder",
            "FROM",
            "vehicle"
        ],
        "query_toks_no_value": [
            "select",
            "build_year",
            ",",
            "model",
            ",",
            "builder",
            "from",
            "vehicle"
        ],
        "question": "What are the build year, model name and builder of the vehicles?",
        "question_toks": [
            "What",
            "are",
            "the",
            "build",
            "year",
            ",",
            "model",
            "name",
            "and",
            "builder",
            "of",
            "the",
            "vehicles",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Build_Year , Model , Builder FROM vehicle"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT build_year ,  model ,  builder FROM vehicle",
        "query_toks": [
            "SELECT",
            "build_year",
            ",",
            "model",
            ",",
            "builder",
            "FROM",
            "vehicle"
        ],
        "query_toks_no_value": [
            "select",
            "build_year",
            ",",
            "model",
            ",",
            "builder",
            "from",
            "vehicle"
        ],
        "question": "Give the build year, model, and builder of each vehicle.",
        "question_toks": [
            "Give",
            "the",
            "build",
            "year",
            ",",
            "model",
            ",",
            "and",
            "builder",
            "of",
            "each",
            "vehicle",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Build_Year, Model, Builder FROM vehicle"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T1.driver_id",
            ")",
            "FROM",
            "vehicle_driver",
            "AS",
            "T1",
            "JOIN",
            "vehicle",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id",
            "WHERE",
            "T2.build_year",
            "=",
            "2012"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "t1",
            ".",
            "driver_id",
            ")",
            "from",
            "vehicle_driver",
            "as",
            "t1",
            "join",
            "vehicle",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id",
            "where",
            "t2",
            ".",
            "build_year",
            "=",
            "value"
        ],
        "question": "How many drivers have driven vehicles built in 2012?",
        "question_toks": [
            "How",
            "many",
            "drivers",
            "have",
            "driven",
            "vehicles",
            "built",
            "in",
            "2012",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    2012.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(T1.Driver_ID) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID  =  T2.Vehicle_ID WHERE T2.Build_Year  =  2012"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T1.driver_id",
            ")",
            "FROM",
            "vehicle_driver",
            "AS",
            "T1",
            "JOIN",
            "vehicle",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id",
            "WHERE",
            "T2.build_year",
            "=",
            "2012"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "t1",
            ".",
            "driver_id",
            ")",
            "from",
            "vehicle_driver",
            "as",
            "t1",
            "join",
            "vehicle",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id",
            "where",
            "t2",
            ".",
            "build_year",
            "=",
            "value"
        ],
        "question": "Count the number of different drivers who have driven vehicles built in 2012.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "different",
            "drivers",
            "who",
            "have",
            "driven",
            "vehicles",
            "built",
            "in",
            "2012",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    2012.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(DISTINCT d.Name) FROM driver d JOIN vehicle_driver vd ON d.Driver_ID  =  vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID  =  v.Vehicle_ID WHERE v.Build_Year = \"2012\""
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "driver",
            "WHERE",
            "Racing_Series",
            "=",
            "'NASCAR",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "driver",
            "where",
            "racing_series",
            "=",
            "value"
        ],
        "question": "How many drivers have raced in 'NASCAR'?",
        "question_toks": [
            "How",
            "many",
            "drivers",
            "have",
            "raced",
            "in",
            "'NASCAR",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"NASCAR\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT driver.Name) FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Racing_Series = 'NASCAR'"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "driver",
            "WHERE",
            "Racing_Series",
            "=",
            "'NASCAR",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "driver",
            "where",
            "racing_series",
            "=",
            "value"
        ],
        "question": "Count the number of drivers who have raced in NASCAR.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "drivers",
            "who",
            "have",
            "raced",
            "in",
            "NASCAR",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"NASCAR\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(T2.Driver_ID) FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Racing_Series = \"NASCAR\""
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT avg(top_speed) FROM vehicle",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "top_speed",
            ")",
            "FROM",
            "vehicle"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "top_speed",
            ")",
            "from",
            "vehicle"
        ],
        "question": "What is the average top speed of vehicles?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "top",
            "speed",
            "of",
            "vehicles",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(Top_Speed) FROM vehicle"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT avg(top_speed) FROM vehicle",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "top_speed",
            ")",
            "FROM",
            "vehicle"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "top_speed",
            ")",
            "from",
            "vehicle"
        ],
        "question": "Return the average top speed across all vehicles.",
        "question_toks": [
            "Return",
            "the",
            "average",
            "top",
            "speed",
            "across",
            "all",
            "vehicles",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(Top_Speed) FROM vehicle"
    },
    {
        "db_id": "vehicle_driver",
        "query": "select distinct t1.name from driver as t1 join vehicle_driver as t2 on t1.driver_id  =  t2.driver_id join vehicle as t3 on t2.vehicle_id  =  t3.vehicle_id where t3.power  >  5000",
        "query_toks": [
            "select",
            "distinct",
            "t1.name",
            "from",
            "driver",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1.driver_id",
            "=",
            "t2.driver_id",
            "join",
            "vehicle",
            "as",
            "t3",
            "on",
            "t2.vehicle_id",
            "=",
            "t3.vehicle_id",
            "where",
            "t3.power",
            ">",
            "5000"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "name",
            "from",
            "driver",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "driver_id",
            "=",
            "t2",
            ".",
            "driver_id",
            "join",
            "vehicle",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "vehicle_id",
            "=",
            "t3",
            ".",
            "vehicle_id",
            "where",
            "t3",
            ".",
            "power",
            ">",
            "value"
        ],
        "question": "What are the distinct driver names who have driven vehicles with power more than 5000 ?",
        "question_toks": [
            "What",
            "are",
            "the",
            "distinct",
            "driver",
            "names",
            "who",
            "have",
            "driven",
            "vehicles",
            "with",
            "power",
            "more",
            "than",
            "5000",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    5000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Name FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM vehicle_driver WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM vehicle WHERE Power > 5000))"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.power  >  5000",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Name",
            "FROM",
            "driver",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.driver_id",
            "=",
            "T2.driver_id",
            "JOIN",
            "vehicle",
            "AS",
            "T3",
            "ON",
            "T2.vehicle_id",
            "=",
            "T3.vehicle_id",
            "WHERE",
            "T3.power",
            ">",
            "5000"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "name",
            "from",
            "driver",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "driver_id",
            "=",
            "t2",
            ".",
            "driver_id",
            "join",
            "vehicle",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "vehicle_id",
            "=",
            "t3",
            ".",
            "vehicle_id",
            "where",
            "t3",
            ".",
            "power",
            ">",
            "value"
        ],
        "question": "Return the names of drivers who have driven vehicles with power over 5000.",
        "question_toks": [
            "Return",
            "the",
            "names",
            "of",
            "drivers",
            "who",
            "have",
            "driven",
            "vehicles",
            "with",
            "power",
            "over",
            "5000",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    5000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM vehicle_driver WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM vehicle WHERE Power > 5000))"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150",
        "query_toks": [
            "SELECT",
            "model",
            "FROM",
            "vehicle",
            "WHERE",
            "total_production",
            ">",
            "100",
            "OR",
            "top_speed",
            ">",
            "150"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "vehicle",
            "where",
            "total_production",
            ">",
            "value",
            "or",
            "top_speed",
            ">",
            "value"
        ],
        "question": "Which car models have total production larger than 100 or top speed higher than 150?",
        "question_toks": [
            "Which",
            "car",
            "models",
            "have",
            "total",
            "production",
            "larger",
            "than",
            "100",
            "or",
            "top",
            "speed",
            "higher",
            "than",
            "150",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ],
                "or",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    150.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Model FROM vehicle WHERE Total_Production > 100 OR Top_Speed > 150"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150",
        "query_toks": [
            "SELECT",
            "model",
            "FROM",
            "vehicle",
            "WHERE",
            "total_production",
            ">",
            "100",
            "OR",
            "top_speed",
            ">",
            "150"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "vehicle",
            "where",
            "total_production",
            ">",
            "value",
            "or",
            "top_speed",
            ">",
            "value"
        ],
        "question": "Give the models of cars that have a total production of over 100 or a top speed over 150.",
        "question_toks": [
            "Give",
            "the",
            "models",
            "of",
            "cars",
            "that",
            "have",
            "a",
            "total",
            "production",
            "of",
            "over",
            "100",
            "or",
            "a",
            "top",
            "speed",
            "over",
            "150",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ],
                "or",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    150.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Model FROM Vehicle WHERE Total_Production > 100 OR Top_Speed > 150;"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'",
        "query_toks": [
            "SELECT",
            "model",
            ",",
            "build_year",
            "FROM",
            "vehicle",
            "WHERE",
            "model",
            "LIKE",
            "'",
            "%",
            "DJ",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            ",",
            "build_year",
            "from",
            "vehicle",
            "where",
            "model",
            "like",
            "value"
        ],
        "question": "What are the model names and build year of the cars with 'DJ' in its model name?",
        "question_toks": [
            "What",
            "are",
            "the",
            "model",
            "names",
            "and",
            "build",
            "year",
            "of",
            "the",
            "cars",
            "with",
            "'DJ",
            "'",
            "in",
            "its",
            "model",
            "name",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"%DJ%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Model, Build_Year FROM vehicle WHERE Model LIKE '%DJ%';"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'",
        "query_toks": [
            "SELECT",
            "model",
            ",",
            "build_year",
            "FROM",
            "vehicle",
            "WHERE",
            "model",
            "LIKE",
            "'",
            "%",
            "DJ",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            ",",
            "build_year",
            "from",
            "vehicle",
            "where",
            "model",
            "like",
            "value"
        ],
        "question": "Return the model and build year of cars that include \"DJ\" in their model names.",
        "question_toks": [
            "Return",
            "the",
            "model",
            "and",
            "build",
            "year",
            "of",
            "cars",
            "that",
            "include",
            "``",
            "DJ",
            "''",
            "in",
            "their",
            "model",
            "names",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"%DJ%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Model ,  Build_Year FROM vehicle WHERE Model LIKE '%DJ%'"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id",
        "query_toks": [
            "SELECT",
            "model",
            "FROM",
            "vehicle",
            "EXCEPT",
            "SELECT",
            "T1.model",
            "FROM",
            "vehicle",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "vehicle",
            "except",
            "select",
            "t1",
            ".",
            "model",
            "from",
            "vehicle",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id"
        ],
        "question": "What are the models which have not been driven by any drivers?",
        "question_toks": [
            "What",
            "are",
            "the",
            "models",
            "which",
            "have",
            "not",
            "been",
            "driven",
            "by",
            "any",
            "drivers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT Model FROM vehicle WHERE Vehicle_ID NOT IN (SELECT Vehicle_ID FROM vehicle_driver)"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id",
        "query_toks": [
            "SELECT",
            "model",
            "FROM",
            "vehicle",
            "EXCEPT",
            "SELECT",
            "T1.model",
            "FROM",
            "vehicle",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "vehicle",
            "except",
            "select",
            "t1",
            ".",
            "model",
            "from",
            "vehicle",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id"
        ],
        "question": "Return the models of vehicles that have never been driven.",
        "question_toks": [
            "Return",
            "the",
            "models",
            "of",
            "vehicles",
            "that",
            "have",
            "never",
            "been",
            "driven",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT Model FROM vehicle EXCEPT SELECT T3.Model FROM vehicle_driver AS T1 JOIN vehicle AS T3 ON T1.Vehicle_ID = T3.Vehicle_ID"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'",
        "query_toks": [
            "SELECT",
            "T1.vehicle_id",
            ",",
            "T1.model",
            "FROM",
            "vehicle",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id",
            "GROUP",
            "BY",
            "T2.vehicle_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "=",
            "2",
            "OR",
            "T1.builder",
            "=",
            "'Ziyang",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "vehicle_id",
            ",",
            "t1",
            ".",
            "model",
            "from",
            "vehicle",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id",
            "group",
            "by",
            "t2",
            ".",
            "vehicle_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value",
            "or",
            "t1",
            ".",
            "builder",
            "=",
            "value"
        ],
        "question": "What are the vehicle ids and models of the vehicle which have been driven by two drivers or been manufactured by 'Ziyang'.",
        "question_toks": [
            "What",
            "are",
            "the",
            "vehicle",
            "ids",
            "and",
            "models",
            "of",
            "the",
            "vehicle",
            "which",
            "have",
            "been",
            "driven",
            "by",
            "two",
            "drivers",
            "or",
            "been",
            "manufactured",
            "by",
            "'Ziyang",
            "'",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"Ziyang\"",
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT v.Vehicle_ID, v.Model \nFROM vehicle v \nJOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID \nJOIN driver d ON d.Driver_ID = vd.Driver_ID \nWHERE v.Builder = 'Ziyang' \nOR (SELECT COUNT(DISTINCT d2.Driver_ID) FROM vehicle_driver vd2 JOIN driver d2 ON d2.Driver_ID = vd2.Driver_ID WHERE vd2.Vehicle_ID = v.Vehicle_ID) = 2;"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'",
        "query_toks": [
            "SELECT",
            "T1.vehicle_id",
            ",",
            "T1.model",
            "FROM",
            "vehicle",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id",
            "GROUP",
            "BY",
            "T2.vehicle_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "=",
            "2",
            "OR",
            "T1.builder",
            "=",
            "'Ziyang",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "vehicle_id",
            ",",
            "t1",
            ".",
            "model",
            "from",
            "vehicle",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id",
            "group",
            "by",
            "t2",
            ".",
            "vehicle_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value",
            "or",
            "t1",
            ".",
            "builder",
            "=",
            "value"
        ],
        "question": "Return the ids and models of vehicles that have been driven by exactly two drivers or built by Ziyang.",
        "question_toks": [
            "Return",
            "the",
            "ids",
            "and",
            "models",
            "of",
            "vehicles",
            "that",
            "have",
            "been",
            "driven",
            "by",
            "exactly",
            "two",
            "drivers",
            "or",
            "built",
            "by",
            "Ziyang",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"Ziyang\"",
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT v.Vehicle_ID, v.Model\nFROM vehicle v\nJOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID\nGROUP BY v.Vehicle_ID, v.Model\nHAVING COUNT(vd.Driver_ID) = 2 OR v.Builder = 'Ziyang'"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2",
        "query_toks": [
            "SELECT",
            "T1.vehicle_id",
            ",",
            "T1.model",
            "FROM",
            "vehicle",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id",
            "JOIN",
            "driver",
            "AS",
            "T3",
            "ON",
            "T2.driver_id",
            "=",
            "T3.driver_id",
            "WHERE",
            "T3.name",
            "=",
            "'Jeff",
            "Gordon",
            "'",
            "UNION",
            "SELECT",
            "T1.vehicle_id",
            ",",
            "T1.model",
            "FROM",
            "vehicle",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id",
            "GROUP",
            "BY",
            "T2.vehicle_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "vehicle_id",
            ",",
            "t1",
            ".",
            "model",
            "from",
            "vehicle",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id",
            "join",
            "driver",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "driver_id",
            "=",
            "t3",
            ".",
            "driver_id",
            "where",
            "t3",
            ".",
            "name",
            "=",
            "value",
            "union",
            "select",
            "t1",
            ".",
            "vehicle_id",
            ",",
            "t1",
            ".",
            "model",
            "from",
            "vehicle",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id",
            "group",
            "by",
            "t2",
            ".",
            "vehicle_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "What are the vehicle ids and models which have been driven by more than 2 drivers or been driven by the driver named 'Jeff Gordon'?",
        "question_toks": [
            "What",
            "are",
            "the",
            "vehicle",
            "ids",
            "and",
            "models",
            "which",
            "have",
            "been",
            "driven",
            "by",
            "more",
            "than",
            "2",
            "drivers",
            "or",
            "been",
            "driven",
            "by",
            "the",
            "driver",
            "named",
            "'Jeff",
            "Gordon",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Jeff Gordon\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        13,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        2.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        },
        "generated_sql": "SELECT T1.Vehicle_ID ,  T1.Model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID  =  T2.Vehicle_ID JOIN driver AS T3 ON T2.Driver_ID  =  T3.Driver_ID GROUP BY T2.Vehicle_ID HAVING COUNT(*) > 2 OR T3.Name = 'Jeff Gordon'"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2",
        "query_toks": [
            "SELECT",
            "T1.vehicle_id",
            ",",
            "T1.model",
            "FROM",
            "vehicle",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id",
            "JOIN",
            "driver",
            "AS",
            "T3",
            "ON",
            "T2.driver_id",
            "=",
            "T3.driver_id",
            "WHERE",
            "T3.name",
            "=",
            "'Jeff",
            "Gordon",
            "'",
            "UNION",
            "SELECT",
            "T1.vehicle_id",
            ",",
            "T1.model",
            "FROM",
            "vehicle",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.vehicle_id",
            "=",
            "T2.vehicle_id",
            "GROUP",
            "BY",
            "T2.vehicle_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "vehicle_id",
            ",",
            "t1",
            ".",
            "model",
            "from",
            "vehicle",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id",
            "join",
            "driver",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "driver_id",
            "=",
            "t3",
            ".",
            "driver_id",
            "where",
            "t3",
            ".",
            "name",
            "=",
            "value",
            "union",
            "select",
            "t1",
            ".",
            "vehicle_id",
            ",",
            "t1",
            ".",
            "model",
            "from",
            "vehicle",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicle_id",
            "=",
            "t2",
            ".",
            "vehicle_id",
            "group",
            "by",
            "t2",
            ".",
            "vehicle_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Return the ids and models of vehicles that have been driven by more than 2 drivers or been driven by the Jeff Gordon.",
        "question_toks": [
            "Return",
            "the",
            "ids",
            "and",
            "models",
            "of",
            "vehicles",
            "that",
            "have",
            "been",
            "driven",
            "by",
            "more",
            "than",
            "2",
            "drivers",
            "or",
            "been",
            "driven",
            "by",
            "the",
            "Jeff",
            "Gordon",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Jeff Gordon\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        13,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        2.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        },
        "generated_sql": "SELECT T2.Model, T2.Vehicle_ID FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T3.Name = 'Jeff Gordon' UNION SELECT T2.Model, T2.Vehicle_ID FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID GROUP BY T2.Model, T2.Vehicle_ID HAVING count(*) > 2"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vehicle",
            "WHERE",
            "top_speed",
            "=",
            "(",
            "SELECT",
            "max",
            "(",
            "top_speed",
            ")",
            "FROM",
            "vehicle",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vehicle",
            "where",
            "top_speed",
            "=",
            "(",
            "select",
            "max",
            "(",
            "top_speed",
            ")",
            "from",
            "vehicle",
            ")"
        ],
        "question": "How many vehicles have maximum top speed?",
        "question_toks": [
            "How",
            "many",
            "vehicles",
            "have",
            "maximum",
            "top",
            "speed",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM vehicle WHERE Top_Speed = ( SELECT max(Top_Speed) FROM vehicle )"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vehicle",
            "WHERE",
            "top_speed",
            "=",
            "(",
            "SELECT",
            "max",
            "(",
            "top_speed",
            ")",
            "FROM",
            "vehicle",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vehicle",
            "where",
            "top_speed",
            "=",
            "(",
            "select",
            "max",
            "(",
            "top_speed",
            ")",
            "from",
            "vehicle",
            ")"
        ],
        "question": "Count the number of vehicles that have a top speed equal to the maximum across all vehicles.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "vehicles",
            "that",
            "have",
            "a",
            "top",
            "speed",
            "equal",
            "to",
            "the",
            "maximum",
            "across",
            "all",
            "vehicles",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle);"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT name FROM driver ORDER BY name",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "driver",
            "ORDER",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "driver",
            "order",
            "by",
            "name"
        ],
        "question": "Show all driver names in the alphabetical order.",
        "question_toks": [
            "Show",
            "all",
            "driver",
            "names",
            "in",
            "the",
            "alphabetical",
            "order",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM driver ORDER BY Name"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT name FROM driver ORDER BY name",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "driver",
            "ORDER",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "driver",
            "order",
            "by",
            "name"
        ],
        "question": "What are the names of drivers, returned in alphbetical order?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "drivers",
            ",",
            "returned",
            "in",
            "alphbetical",
            "order",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM driver ORDER BY Name"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "racing_series",
            "FROM",
            "driver",
            "GROUP",
            "BY",
            "racing_series"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "racing_series",
            "from",
            "driver",
            "group",
            "by",
            "racing_series"
        ],
        "question": "How many drivers have been racing in each racing series?",
        "question_toks": [
            "How",
            "many",
            "drivers",
            "have",
            "been",
            "racing",
            "in",
            "each",
            "racing",
            "series",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Racing_Series, COUNT(driver.Driver_ID) FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID GROUP BY Racing_Series"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "racing_series",
            "FROM",
            "driver",
            "GROUP",
            "BY",
            "racing_series"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "racing_series",
            "from",
            "driver",
            "group",
            "by",
            "racing_series"
        ],
        "question": "Count the number of drivers that have raced in each series.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "drivers",
            "that",
            "have",
            "raced",
            "in",
            "each",
            "series",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(T2.Driver_ID) ,  T3.Racing_Series FROM vehicle_driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T1.Vehicle_ID = T3.Vehicle_ID GROUP BY T3.Racing_Series"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T1.citizenship",
            "FROM",
            "driver",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.driver_id",
            "=",
            "T2.driver_id",
            "JOIN",
            "vehicle",
            "AS",
            "T3",
            "ON",
            "T2.vehicle_id",
            "=",
            "T3.vehicle_id",
            "WHERE",
            "T3.model",
            "=",
            "'DJ1",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "citizenship",
            "from",
            "driver",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "driver_id",
            "=",
            "t2",
            ".",
            "driver_id",
            "join",
            "vehicle",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "vehicle_id",
            "=",
            "t3",
            ".",
            "vehicle_id",
            "where",
            "t3",
            ".",
            "model",
            "=",
            "value"
        ],
        "question": "What are the name and citizenship of the drivers who have driven the vehicle model 'DJ1'?",
        "question_toks": [
            "What",
            "are",
            "the",
            "name",
            "and",
            "citizenship",
            "of",
            "the",
            "drivers",
            "who",
            "have",
            "driven",
            "the",
            "vehicle",
            "model",
            "'DJ1",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"DJ1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Name ,  T2.Citizenship FROM vehicle_driver AS T1 JOIN driver AS T2 ON T1.Driver_ID  =  T2.Driver_ID JOIN vehicle AS T3 ON T1.Vehicle_ID  =  T3.Vehicle_ID WHERE T3.Model  =  'DJ1'"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T1.citizenship",
            "FROM",
            "driver",
            "AS",
            "T1",
            "JOIN",
            "vehicle_driver",
            "AS",
            "T2",
            "ON",
            "T1.driver_id",
            "=",
            "T2.driver_id",
            "JOIN",
            "vehicle",
            "AS",
            "T3",
            "ON",
            "T2.vehicle_id",
            "=",
            "T3.vehicle_id",
            "WHERE",
            "T3.model",
            "=",
            "'DJ1",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "citizenship",
            "from",
            "driver",
            "as",
            "t1",
            "join",
            "vehicle_driver",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "driver_id",
            "=",
            "t2",
            ".",
            "driver_id",
            "join",
            "vehicle",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "vehicle_id",
            "=",
            "t3",
            ".",
            "vehicle_id",
            "where",
            "t3",
            ".",
            "model",
            "=",
            "value"
        ],
        "question": "Return the names and citizenships of drivers who have driven the vehicle with the model 'DJ1'.",
        "question_toks": [
            "Return",
            "the",
            "names",
            "and",
            "citizenships",
            "of",
            "drivers",
            "who",
            "have",
            "driven",
            "the",
            "vehicle",
            "with",
            "the",
            "model",
            "'DJ1",
            "'",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"DJ1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Name , T1.Citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID  =  T2.Driver_ID JOIN vehicle AS T3 ON T3.Vehicle_ID = T2.Vehicle_ID WHERE T3.Model  =  'DJ1'"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "driver",
            "WHERE",
            "driver_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "driver_id",
            "FROM",
            "vehicle_driver",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "driver",
            "where",
            "driver_id",
            "not",
            "in",
            "(",
            "select",
            "driver_id",
            "from",
            "vehicle_driver",
            ")"
        ],
        "question": "How many drivers have not driven any cars?",
        "question_toks": [
            "How",
            "many",
            "drivers",
            "have",
            "not",
            "driven",
            "any",
            "cars",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            12,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver)"
    },
    {
        "db_id": "vehicle_driver",
        "query": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "driver",
            "WHERE",
            "driver_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "driver_id",
            "FROM",
            "vehicle_driver",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "driver",
            "where",
            "driver_id",
            "not",
            "in",
            "(",
            "select",
            "driver_id",
            "from",
            "vehicle_driver",
            ")"
        ],
        "question": "Count the number of drivers who have not driven any vehicles.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "drivers",
            "who",
            "have",
            "not",
            "driven",
            "any",
            "vehicles",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            12,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM vehicle_driver)"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT count(*) FROM Exams",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Exams"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "exams"
        ],
        "question": "How many exams are there?",
        "question_toks": [
            "How",
            "many",
            "exams",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM Exams"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT count(*) FROM Exams",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Exams"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "exams"
        ],
        "question": "Count the number of exams.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "exams",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) AS count FROM Exams"
    },
    {
        "db_id": "online_exams",
        "query": "select distinct subject_code from exams order by subject_code asc",
        "query_toks": [
            "select",
            "distinct",
            "subject_code",
            "from",
            "exams",
            "order",
            "by",
            "subject_code",
            "asc"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "subject_code",
            "from",
            "exams",
            "order",
            "by",
            "subject_code",
            "asc"
        ],
        "question": "List the distinct subject code of exams in ascending alphabetical order .",
        "question_toks": [
            "List",
            "the",
            "distinct",
            "subject",
            "code",
            "of",
            "exams",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "Subject_Code",
            "FROM",
            "Exams",
            "ORDER",
            "BY",
            "Subject_Code"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "subject_code",
            "from",
            "exams",
            "order",
            "by",
            "subject_code"
        ],
        "question": "Give me an alphabetically ordered list of the distinct subject code for exams.",
        "question_toks": [
            "Give",
            "me",
            "an",
            "alphabetically",
            "ordered",
            "list",
            "of",
            "the",
            "distinct",
            "subject",
            "code",
            "for",
            "exams",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT subject_code FROM Exams ORDER BY subject_code"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'",
        "query_toks": [
            "SELECT",
            "Exam_Date",
            ",",
            "Exam_Name",
            "FROM",
            "Exams",
            "WHERE",
            "Subject_Code",
            "!",
            "=",
            "'Database",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "exam_date",
            ",",
            "exam_name",
            "from",
            "exams",
            "where",
            "subject_code",
            "!",
            "=",
            "value"
        ],
        "question": "What are the names and dates of the exams with subject code that is not \"Database\"?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "dates",
            "of",
            "the",
            "exams",
            "with",
            "subject",
            "code",
            "that",
            "is",
            "not",
            "``",
            "Database",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Database\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Exam_Name, Exam_Date FROM Exams WHERE Subject_Code != \"Database\""
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'",
        "query_toks": [
            "SELECT",
            "Exam_Date",
            ",",
            "Exam_Name",
            "FROM",
            "Exams",
            "WHERE",
            "Subject_Code",
            "!",
            "=",
            "'Database",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "exam_date",
            ",",
            "exam_name",
            "from",
            "exams",
            "where",
            "subject_code",
            "!",
            "=",
            "value"
        ],
        "question": "Find the exams whose subject code is not \"Database\". What are the exam dates and exam names?",
        "question_toks": [
            "Find",
            "the",
            "exams",
            "whose",
            "subject",
            "code",
            "is",
            "not",
            "``",
            "Database",
            "''",
            ".",
            "What",
            "are",
            "the",
            "exam",
            "dates",
            "and",
            "exam",
            "names",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Database\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE SUBJECT_CODE <> \"Database\""
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC",
        "query_toks": [
            "SELECT",
            "Exam_Date",
            "FROM",
            "Exams",
            "WHERE",
            "Subject_Code",
            "LIKE",
            "'",
            "%",
            "data",
            "%",
            "'",
            "ORDER",
            "BY",
            "Exam_Date",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "exam_date",
            "from",
            "exams",
            "where",
            "subject_code",
            "like",
            "value",
            "order",
            "by",
            "exam_date",
            "desc"
        ],
        "question": "List the dates of the exams with subject code containing the word \"data\", in descending order of dates.",
        "question_toks": [
            "List",
            "the",
            "dates",
            "of",
            "the",
            "exams",
            "with",
            "subject",
            "code",
            "containing",
            "the",
            "word",
            "``",
            "data",
            "''",
            ",",
            "in",
            "descending",
            "order",
            "of",
            "dates",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"%data%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC",
        "query_toks": [
            "SELECT",
            "Exam_Date",
            "FROM",
            "Exams",
            "WHERE",
            "Subject_Code",
            "LIKE",
            "'",
            "%",
            "data",
            "%",
            "'",
            "ORDER",
            "BY",
            "Exam_Date",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "exam_date",
            "from",
            "exams",
            "where",
            "subject_code",
            "like",
            "value",
            "order",
            "by",
            "exam_date",
            "desc"
        ],
        "question": "What are the dates of the exams whose subject code contains the substring \"data\"? Return them in descending order of dates.",
        "question_toks": [
            "What",
            "are",
            "the",
            "dates",
            "of",
            "the",
            "exams",
            "whose",
            "subject",
            "code",
            "contains",
            "the",
            "substring",
            "``",
            "data",
            "''",
            "?",
            "Return",
            "them",
            "in",
            "descending",
            "order",
            "of",
            "dates",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"%data%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE \"%data%\" ORDER BY Exam_Date DESC"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
        "query_toks": [
            "SELECT",
            "Type_of_Question_Code",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "Questions",
            "GROUP",
            "BY",
            "Type_of_Question_Code"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_question_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "questions",
            "group",
            "by",
            "type_of_question_code"
        ],
        "question": "What are the type of questions and their counts?",
        "question_toks": [
            "What",
            "are",
            "the",
            "type",
            "of",
            "questions",
            "and",
            "their",
            "counts",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT `Type_of_Question_Code`,COUNT(*) FROM `Questions` GROUP BY `Type_of_Question_Code`"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
        "query_toks": [
            "SELECT",
            "Type_of_Question_Code",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "Questions",
            "GROUP",
            "BY",
            "Type_of_Question_Code"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_question_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "questions",
            "group",
            "by",
            "type_of_question_code"
        ],
        "question": "For each question type, return its type code and its count of occurrence.",
        "question_toks": [
            "For",
            "each",
            "question",
            "type",
            ",",
            "return",
            "its",
            "type",
            "code",
            "and",
            "its",
            "count",
            "of",
            "occurrence",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT TYPE_OF_QUESTION_CODE, count(TYPE_OF_QUESTION_CODE) FROM Questions GROUP BY TYPE_OF_QUESTION_CODE"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "Student_Answer_Text",
            "FROM",
            "Student_Answers",
            "WHERE",
            "Comments",
            "=",
            "``",
            "Normal",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "student_answer_text",
            "from",
            "student_answers",
            "where",
            "comments",
            "=",
            "value"
        ],
        "question": "What are the distinct student answer texts that received comments \"Normal\"?",
        "question_toks": [
            "What",
            "are",
            "the",
            "distinct",
            "student",
            "answer",
            "texts",
            "that",
            "received",
            "comments",
            "``",
            "Normal",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"Normal\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT T1.Student_Answer_Text FROM Student_Answers AS T1 INNER JOIN Student_Assessments AS T2 ON T1.Student_Answer_ID = T2.Student_Answer_ID WHERE T2.Comments = 'Normal'"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "Student_Answer_Text",
            "FROM",
            "Student_Answers",
            "WHERE",
            "Comments",
            "=",
            "``",
            "Normal",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "student_answer_text",
            "from",
            "student_answers",
            "where",
            "comments",
            "=",
            "value"
        ],
        "question": "List all the distinct student answer texts to which comments \"Normal\" were given?",
        "question_toks": [
            "List",
            "all",
            "the",
            "distinct",
            "student",
            "answer",
            "texts",
            "to",
            "which",
            "comments",
            "``",
            "Normal",
            "''",
            "were",
            "given",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"Normal\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT T2.Student_Answer_Text FROM Student_Assessments AS T1 INNER JOIN Student_Answers AS T2 ON T1.Student_Answer_ID = T2.Student_Answer_ID WHERE T2.Comments = \"Normal\""
    },
    {
        "db_id": "online_exams",
        "query": "SELECT count(DISTINCT Comments) FROM Student_Answers",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "Comments",
            ")",
            "FROM",
            "Student_Answers"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "comments",
            ")",
            "from",
            "student_answers"
        ],
        "question": "How many different comments are there for student answers?",
        "question_toks": [
            "How",
            "many",
            "different",
            "comments",
            "are",
            "there",
            "for",
            "student",
            "answers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                27,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT (DISTINCT Comments) FROM Student_Answers"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT count(DISTINCT Comments) FROM Student_Answers",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "Comments",
            ")",
            "FROM",
            "Student_Answers"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "comments",
            ")",
            "from",
            "student_answers"
        ],
        "question": "Count the number of different comments for student answers.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "different",
            "comments",
            "for",
            "student",
            "answers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                27,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT (DISTINCT Comments) FROM STUDENT_ANSWERS"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC",
        "query_toks": [
            "SELECT",
            "Student_Answer_Text",
            "FROM",
            "Student_Answers",
            "GROUP",
            "BY",
            "Student_Answer_Text",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "student_answer_text",
            "from",
            "student_answers",
            "group",
            "by",
            "student_answer_text",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc"
        ],
        "question": "List all the student answer texts in descending order of count.",
        "question_toks": [
            "List",
            "all",
            "the",
            "student",
            "answer",
            "texts",
            "in",
            "descending",
            "order",
            "of",
            "count",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    29,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT student_answer_text FROM student_answers GROUP BY student_answer_text ORDER BY COUNT(*) DESC"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC",
        "query_toks": [
            "SELECT",
            "Student_Answer_Text",
            "FROM",
            "Student_Answers",
            "GROUP",
            "BY",
            "Student_Answer_Text",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "student_answer_text",
            "from",
            "student_answers",
            "group",
            "by",
            "student_answer_text",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc"
        ],
        "question": "Sort the student answer texts in descending order of their frequency of occurrence.",
        "question_toks": [
            "Sort",
            "the",
            "student",
            "answer",
            "texts",
            "in",
            "descending",
            "order",
            "of",
            "their",
            "frequency",
            "of",
            "occurrence",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    29,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT student_answer_text, count(*) as freq \nFROM student_answers\ngroup by student_answer_text\norder by freq DESC"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID",
        "query_toks": [
            "SELECT",
            "T2.First_Name",
            ",",
            "T1.Date_of_Answer",
            "FROM",
            "Student_Answers",
            "AS",
            "T1",
            "JOIN",
            "Students",
            "AS",
            "T2",
            "ON",
            "T1.Student_ID",
            "=",
            "T2.Student_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "date_of_answer",
            "from",
            "student_answers",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id"
        ],
        "question": "Please show the first names of students and the dates of their answers.",
        "question_toks": [
            "Please",
            "show",
            "the",
            "first",
            "names",
            "of",
            "students",
            "and",
            "the",
            "dates",
            "of",
            "their",
            "answers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.first_name, T3.date_of_answer FROM students AS T1 JOIN STUDENT_ANSWERS AS T2 ON T1.Student_ID  =  T2.Student_ID JOIN QUESTIONS_IN_EXAMS AS T3 ON T2.Exam_ID = T3.Exam_ID"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID",
        "query_toks": [
            "SELECT",
            "T2.First_Name",
            ",",
            "T1.Date_of_Answer",
            "FROM",
            "Student_Answers",
            "AS",
            "T1",
            "JOIN",
            "Students",
            "AS",
            "T2",
            "ON",
            "T1.Student_ID",
            "=",
            "T2.Student_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "date_of_answer",
            "from",
            "student_answers",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id"
        ],
        "question": "For each student answer, find the first name of the student and the date of the answer.",
        "question_toks": [
            "For",
            "each",
            "student",
            "answer",
            ",",
            "find",
            "the",
            "first",
            "name",
            "of",
            "the",
            "student",
            "and",
            "the",
            "date",
            "of",
            "the",
            "answer",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.first_name, T1.date_of_answer FROM STUDENT_ANSWERS AS T1 JOIN STUDENTS AS T2 ON T1.student_id  =  T2.student_id"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC",
        "query_toks": [
            "SELECT",
            "T2.Email_Adress",
            ",",
            "T1.Date_of_Answer",
            "FROM",
            "Student_Answers",
            "AS",
            "T1",
            "JOIN",
            "Students",
            "AS",
            "T2",
            "ON",
            "T1.Student_ID",
            "=",
            "T2.Student_ID",
            "ORDER",
            "BY",
            "T1.Date_of_Answer",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "email_adress",
            ",",
            "t1",
            ".",
            "date_of_answer",
            "from",
            "student_answers",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "order",
            "by",
            "t1",
            ".",
            "date_of_answer",
            "desc"
        ],
        "question": "Please show the email addresses of students and the dates of their answers in descending order of dates.",
        "question_toks": [
            "Please",
            "show",
            "the",
            "email",
            "addresses",
            "of",
            "students",
            "and",
            "the",
            "dates",
            "of",
            "their",
            "answers",
            "in",
            "descending",
            "order",
            "of",
            "dates",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT T3.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T3 ON T1.Student_ID = T3.Student_ID WHERE T3.Email_Adress IS NOT NULL ORDER BY T1.Date_of_Answer DESC"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC",
        "query_toks": [
            "SELECT",
            "T2.Email_Adress",
            ",",
            "T1.Date_of_Answer",
            "FROM",
            "Student_Answers",
            "AS",
            "T1",
            "JOIN",
            "Students",
            "AS",
            "T2",
            "ON",
            "T1.Student_ID",
            "=",
            "T2.Student_ID",
            "ORDER",
            "BY",
            "T1.Date_of_Answer",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "email_adress",
            ",",
            "t1",
            ".",
            "date_of_answer",
            "from",
            "student_answers",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "order",
            "by",
            "t1",
            ".",
            "date_of_answer",
            "desc"
        ],
        "question": "For each student answer, find the email address of the student and the date of the answer. Sort them in descending order of dates.",
        "question_toks": [
            "For",
            "each",
            "student",
            "answer",
            ",",
            "find",
            "the",
            "email",
            "address",
            "of",
            "the",
            "student",
            "and",
            "the",
            "date",
            "of",
            "the",
            "answer",
            ".",
            "Sort",
            "them",
            "in",
            "descending",
            "order",
            "of",
            "dates",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T4.Email_Adress ,  T2.Date_of_Answer FROM Student_Answers AS T2 INNER JOIN Students AS T4 ON T2.Student_ID = T4.Student_ID ORDER BY T2.Date_of_Answer DESC"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Assessment",
            "FROM",
            "Student_Assessments",
            "GROUP",
            "BY",
            "Assessment",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "assessment",
            "from",
            "student_assessments",
            "group",
            "by",
            "assessment",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "question": "Please show the least common assessment for students.",
        "question_toks": [
            "Please",
            "show",
            "the",
            "least",
            "common",
            "assessment",
            "for",
            "students",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    34,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT t2.assessment FROM Student_Answers AS t1 INNER JOIN Student_Assessments AS t2 ON t1.student_answer_id  =  t2.student_answer_id GROUP BY t2.assessment ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Assessment",
            "FROM",
            "Student_Assessments",
            "GROUP",
            "BY",
            "Assessment",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "assessment",
            "from",
            "student_assessments",
            "group",
            "by",
            "assessment",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "question": "Which assessment has the smallest frequency count?",
        "question_toks": [
            "Which",
            "assessment",
            "has",
            "the",
            "smallest",
            "frequency",
            "count",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    34,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT assessment FROM student_assessments GROUP BY assessment ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.First_Name",
            "FROM",
            "Student_Answers",
            "AS",
            "T1",
            "JOIN",
            "Students",
            "AS",
            "T2",
            "ON",
            "T1.Student_ID",
            "=",
            "T2.Student_ID",
            "GROUP",
            "BY",
            "T1.Student_ID",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "first_name",
            "from",
            "student_answers",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Please show the first names of the students that have at least two answer records.",
        "question_toks": [
            "Please",
            "show",
            "the",
            "first",
            "names",
            "of",
            "the",
            "students",
            "that",
            "have",
            "at",
            "least",
            "two",
            "answer",
            "records",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    25,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT first_name FROM students WHERE student_id IN (SELECT student_id FROM student_answers GROUP BY student_id HAVING COUNT(*)  >=  2)"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.First_Name",
            "FROM",
            "Student_Answers",
            "AS",
            "T1",
            "JOIN",
            "Students",
            "AS",
            "T2",
            "ON",
            "T1.Student_ID",
            "=",
            "T2.Student_ID",
            "GROUP",
            "BY",
            "T1.Student_ID",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "first_name",
            "from",
            "student_answers",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Which students have 2 or more answer records? Give me their first names.",
        "question_toks": [
            "Which",
            "students",
            "have",
            "2",
            "or",
            "more",
            "answer",
            "records",
            "?",
            "Give",
            "me",
            "their",
            "first",
            "names",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    25,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT First_Name FROM STUDENTS GROUP BY Student_ID HAVING COUNT(*) >= 2"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Valid_Answer_Text",
            "FROM",
            "Valid_Answers",
            "GROUP",
            "BY",
            "Valid_Answer_Text",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "valid_answer_text",
            "from",
            "valid_answers",
            "group",
            "by",
            "valid_answer_text",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the most common valid answer text?",
        "question_toks": [
            "What",
            "is",
            "the",
            "most",
            "common",
            "valid",
            "answer",
            "text",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Valid_Answer_Text FROM Valid_Answers AS T1 INNER JOIN Student_Answers AS T2 ON T1.Valid_Answer_ID = T2.Valid_Answer_ID GROUP BY T2.Valid_Answer_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Valid_Answer_Text",
            "FROM",
            "Valid_Answers",
            "GROUP",
            "BY",
            "Valid_Answer_Text",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "valid_answer_text",
            "from",
            "valid_answers",
            "group",
            "by",
            "valid_answer_text",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Find the valid answer text that appeared most frequently.",
        "question_toks": [
            "Find",
            "the",
            "valid",
            "answer",
            "text",
            "that",
            "appeared",
            "most",
            "frequently",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT VALID_ANSWER_TEXT FROM VALID_ANSWERS GROUP BY VALID_ANSWER_TEXT ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"",
        "query_toks": [
            "SELECT",
            "Last_Name",
            "FROM",
            "Students",
            "WHERE",
            "Gender_MFU",
            "!",
            "=",
            "``",
            "M",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "students",
            "where",
            "gender_mfu",
            "!",
            "=",
            "value"
        ],
        "question": "List the last names of the students whose gender is not \"M\".",
        "question_toks": [
            "List",
            "the",
            "last",
            "names",
            "of",
            "the",
            "students",
            "whose",
            "gender",
            "is",
            "not",
            "``",
            "M",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"M\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT last_name FROM students WHERE gender_mfu != 'M';"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"",
        "query_toks": [
            "SELECT",
            "Last_Name",
            "FROM",
            "Students",
            "WHERE",
            "Gender_MFU",
            "!",
            "=",
            "``",
            "M",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "students",
            "where",
            "gender_mfu",
            "!",
            "=",
            "value"
        ],
        "question": "What are the last names of the students with gender other than \"M\"?",
        "question_toks": [
            "What",
            "are",
            "the",
            "last",
            "names",
            "of",
            "the",
            "students",
            "with",
            "gender",
            "other",
            "than",
            "``",
            "M",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"M\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Last_Name FROM Students WHERE Gender_MFU != 'M'"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU",
        "query_toks": [
            "SELECT",
            "Gender_MFU",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "Gender_MFU"
        ],
        "query_toks_no_value": [
            "select",
            "gender_mfu",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "students",
            "group",
            "by",
            "gender_mfu"
        ],
        "question": "List each gender and the corresponding number of students.",
        "question_toks": [
            "List",
            "each",
            "gender",
            "and",
            "the",
            "corresponding",
            "number",
            "of",
            "students",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Gender_MFU, count(*) FROM Students GROUP BY Gender_MFU"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU",
        "query_toks": [
            "SELECT",
            "Gender_MFU",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "Gender_MFU"
        ],
        "query_toks_no_value": [
            "select",
            "gender_mfu",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "students",
            "group",
            "by",
            "gender_mfu"
        ],
        "question": "For each gender, return the gender code and the number of students who identify as that gender.",
        "question_toks": [
            "For",
            "each",
            "gender",
            ",",
            "return",
            "the",
            "gender",
            "code",
            "and",
            "the",
            "number",
            "of",
            "students",
            "who",
            "identify",
            "as",
            "that",
            "gender",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Gender_MFU ,  count(*) FROM STUDENTS GROUP BY Gender_MFU;"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"",
        "query_toks": [
            "SELECT",
            "Last_Name",
            "FROM",
            "Students",
            "WHERE",
            "Gender_MFU",
            "=",
            "``",
            "F",
            "''",
            "OR",
            "Gender_MFU",
            "=",
            "``",
            "M",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "students",
            "where",
            "gender_mfu",
            "=",
            "value",
            "or",
            "gender_mfu",
            "=",
            "value"
        ],
        "question": "List the last names of the students whose gender is \"F\" or \"M\".",
        "question_toks": [
            "List",
            "the",
            "last",
            "names",
            "of",
            "the",
            "students",
            "whose",
            "gender",
            "is",
            "``",
            "F",
            "''",
            "or",
            "``",
            "M",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"F\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"M\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU = 'F' OR Gender_MFU = 'M'"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"",
        "query_toks": [
            "SELECT",
            "Last_Name",
            "FROM",
            "Students",
            "WHERE",
            "Gender_MFU",
            "=",
            "``",
            "F",
            "''",
            "OR",
            "Gender_MFU",
            "=",
            "``",
            "M",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "students",
            "where",
            "gender_mfu",
            "=",
            "value",
            "or",
            "gender_mfu",
            "=",
            "value"
        ],
        "question": "Which students identify their gender as \"F\" or \"M\"? Give me their last names.",
        "question_toks": [
            "Which",
            "students",
            "identify",
            "their",
            "gender",
            "as",
            "``",
            "F",
            "''",
            "or",
            "``",
            "M",
            "''",
            "?",
            "Give",
            "me",
            "their",
            "last",
            "names",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"F\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"M\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Last_Name FROM Students AS T1 INNER JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID WHERE T1.Gender_MFU = 'F' OR T1.Gender_MFU = 'M' GROUP BY T1.Last_Name"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)",
        "query_toks": [
            "SELECT",
            "First_Name",
            "FROM",
            "Students",
            "WHERE",
            "Student_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Student_ID",
            "FROM",
            "Student_Answers",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "students",
            "where",
            "student_id",
            "not",
            "in",
            "(",
            "select",
            "student_id",
            "from",
            "student_answers",
            ")"
        ],
        "question": "List the first names of the students who do not have any answers.",
        "question_toks": [
            "List",
            "the",
            "first",
            "names",
            "of",
            "the",
            "students",
            "who",
            "do",
            "not",
            "have",
            "any",
            "answers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            25,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.First_Name FROM students AS T1 LEFT JOIN student_answers AS T2 ON T1.Student_ID = T2.Student_ID WHERE T2.Student_ID IS NULL"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)",
        "query_toks": [
            "SELECT",
            "First_Name",
            "FROM",
            "Students",
            "WHERE",
            "Student_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Student_ID",
            "FROM",
            "Student_Answers",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "students",
            "where",
            "student_id",
            "not",
            "in",
            "(",
            "select",
            "student_id",
            "from",
            "student_answers",
            ")"
        ],
        "question": "Which students do not have any answers? Find their first names.",
        "question_toks": [
            "Which",
            "students",
            "do",
            "not",
            "have",
            "any",
            "answers",
            "?",
            "Find",
            "their",
            "first",
            "names",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            25,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.First_Name FROM Students AS T1 LEFT JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID WHERE T2.Student_ID IS NULL"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"",
        "query_toks": [
            "SELECT",
            "Student_Answer_Text",
            "FROM",
            "Student_Answers",
            "WHERE",
            "Comments",
            "=",
            "``",
            "Normal",
            "''",
            "INTERSECT",
            "SELECT",
            "Student_Answer_Text",
            "FROM",
            "Student_Answers",
            "WHERE",
            "Comments",
            "=",
            "``",
            "Absent",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "student_answer_text",
            "from",
            "student_answers",
            "where",
            "comments",
            "=",
            "value",
            "intersect",
            "select",
            "student_answer_text",
            "from",
            "student_answers",
            "where",
            "comments",
            "=",
            "value"
        ],
        "question": "Show the student answer texts that received both \"Normal\" and \"Absent\" as comments.",
        "question_toks": [
            "Show",
            "the",
            "student",
            "answer",
            "texts",
            "that",
            "received",
            "both",
            "``",
            "Normal",
            "''",
            "and",
            "``",
            "Absent",
            "''",
            "as",
            "comments",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"Normal\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    29,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        "\"Absent\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.Student_Answer_Text FROM Exams AS T1 JOIN Questions_in_Exams AS T2 ON T1.Exam_ID  =  T2.Exam_ID JOIN Student_Answers AS T3 ON T1.Exam_ID  =  T3.Exam_ID AND T2.Question_ID  =  T3.Question_ID WHERE T3.Comments  =  'Normal' INTERSECT SELECT T3.Student_Answer_Text FROM Exams AS T1 JOIN Questions_in_Exams AS T2 ON T1.Exam_ID  =  T2.Exam_ID JOIN Student_Answers AS T3 ON T1.Exam_ID  =  T3.Exam_ID AND T2.Question_ID  =  T3.Question_ID WHERE T3.Comments  =  'Absent'"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"",
        "query_toks": [
            "SELECT",
            "Student_Answer_Text",
            "FROM",
            "Student_Answers",
            "WHERE",
            "Comments",
            "=",
            "``",
            "Normal",
            "''",
            "INTERSECT",
            "SELECT",
            "Student_Answer_Text",
            "FROM",
            "Student_Answers",
            "WHERE",
            "Comments",
            "=",
            "``",
            "Absent",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "student_answer_text",
            "from",
            "student_answers",
            "where",
            "comments",
            "=",
            "value",
            "intersect",
            "select",
            "student_answer_text",
            "from",
            "student_answers",
            "where",
            "comments",
            "=",
            "value"
        ],
        "question": "Which student answer texts were given both \"Normal\" and \"Absent\" as comments?",
        "question_toks": [
            "Which",
            "student",
            "answer",
            "texts",
            "were",
            "given",
            "both",
            "``",
            "Normal",
            "''",
            "and",
            "``",
            "Absent",
            "''",
            "as",
            "comments",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"Normal\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    29,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        "\"Absent\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Student_Answer_Text FROM Student_Answers AS T1 JOIN Student_Answers AS T2 ON T1.Student_Answer_ID = T2.Student_Answer_ID WHERE T1.Comments = 'Normal' AND T2.Comments = 'Absent'"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3",
        "query_toks": [
            "SELECT",
            "Type_of_Question_Code",
            "FROM",
            "Questions",
            "GROUP",
            "BY",
            "Type_of_Question_Code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_question_code",
            "from",
            "questions",
            "group",
            "by",
            "type_of_question_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Show the types of questions that have at least three questions.",
        "question_toks": [
            "Show",
            "the",
            "types",
            "of",
            "questions",
            "that",
            "have",
            "at",
            "least",
            "three",
            "questions",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(*) >= 3"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3",
        "query_toks": [
            "SELECT",
            "Type_of_Question_Code",
            "FROM",
            "Questions",
            "GROUP",
            "BY",
            "Type_of_Question_Code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_question_code",
            "from",
            "questions",
            "group",
            "by",
            "type_of_question_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Which types of questions have 3 or more questions? Return the questions type code.",
        "question_toks": [
            "Which",
            "types",
            "of",
            "questions",
            "have",
            "3",
            "or",
            "more",
            "questions",
            "?",
            "Return",
            "the",
            "questions",
            "type",
            "code",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*) >= 3"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT * FROM Students",
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Students"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "students"
        ],
        "question": "Show all information on students.",
        "question_toks": [
            "Show",
            "all",
            "information",
            "on",
            "students",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT * FROM Students"
    },
    {
        "db_id": "online_exams",
        "query": "SELECT * FROM Students",
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Students"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "students"
        ],
        "question": "What is al the available information of each student?",
        "question_toks": [
            "What",
            "is",
            "al",
            "the",
            "available",
            "information",
            "of",
            "each",
            "student",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT * FROM students"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Addresses",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Addresses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses"
        ],
        "question": "How many addresses do we have?",
        "question_toks": [
            "How",
            "many",
            "addresses",
            "do",
            "we",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(address_id) FROM Addresses"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Addresses",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Addresses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "addresses"
        ],
        "question": "Count the number of addresses.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "addresses",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM addresses"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT address_id ,  address_details FROM Addresses",
        "query_toks": [
            "SELECT",
            "address_id",
            ",",
            "address_details",
            "FROM",
            "Addresses"
        ],
        "query_toks_no_value": [
            "select",
            "address_id",
            ",",
            "address_details",
            "from",
            "addresses"
        ],
        "question": "List all address ids and address details.",
        "question_toks": [
            "List",
            "all",
            "address",
            "ids",
            "and",
            "address",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT address_id ,  address_details FROM Addresses"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT address_id ,  address_details FROM Addresses",
        "query_toks": [
            "SELECT",
            "address_id",
            ",",
            "address_details",
            "FROM",
            "Addresses"
        ],
        "query_toks_no_value": [
            "select",
            "address_id",
            ",",
            "address_details",
            "from",
            "addresses"
        ],
        "question": "What are all the address ids and address details?",
        "question_toks": [
            "What",
            "are",
            "all",
            "the",
            "address",
            "ids",
            "and",
            "address",
            "details",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT address_id ,  address_details FROM addresses"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Products",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Products"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products"
        ],
        "question": "How many products do we have?",
        "question_toks": [
            "How",
            "many",
            "products",
            "do",
            "we",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM Products"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Products",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Products"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products"
        ],
        "question": "Count the number of products.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "products",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM Products"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_id ,  product_type_code ,  product_name FROM Products",
        "query_toks": [
            "SELECT",
            "product_id",
            ",",
            "product_type_code",
            ",",
            "product_name",
            "FROM",
            "Products"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            ",",
            "product_name",
            "from",
            "products"
        ],
        "question": "Show all product ids, product type codes, and product name.",
        "question_toks": [
            "Show",
            "all",
            "product",
            "ids",
            ",",
            "product",
            "type",
            "codes",
            ",",
            "and",
            "product",
            "name",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_id, product_type_code, product_name FROM Products"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_id ,  product_type_code ,  product_name FROM Products",
        "query_toks": [
            "SELECT",
            "product_id",
            ",",
            "product_type_code",
            ",",
            "product_name",
            "FROM",
            "Products"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            ",",
            "product_name",
            "from",
            "products"
        ],
        "question": "What are the ids, type codes, and names for all products?",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            ",",
            "type",
            "codes",
            ",",
            "and",
            "names",
            "for",
            "all",
            "products",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_id, product_type_code, product_name FROM Products;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"",
        "query_toks": [
            "SELECT",
            "product_price",
            "FROM",
            "Products",
            "WHERE",
            "product_name",
            "=",
            "``",
            "Monitor",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "product_price",
            "from",
            "products",
            "where",
            "product_name",
            "=",
            "value"
        ],
        "question": "What is the price for the product with name Monitor?",
        "question_toks": [
            "What",
            "is",
            "the",
            "price",
            "for",
            "the",
            "product",
            "with",
            "name",
            "Monitor",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Monitor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_price FROM Products WHERE product_name = 'Monitor'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"",
        "query_toks": [
            "SELECT",
            "product_price",
            "FROM",
            "Products",
            "WHERE",
            "product_name",
            "=",
            "``",
            "Monitor",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "product_price",
            "from",
            "products",
            "where",
            "product_name",
            "=",
            "value"
        ],
        "question": "Give the price of the Monitor product.",
        "question_toks": [
            "Give",
            "the",
            "price",
            "of",
            "the",
            "Monitor",
            "product",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Monitor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_price FROM Products WHERE product_name = 'Monitor'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "product_price",
            ")",
            ",",
            "avg",
            "(",
            "product_price",
            ")",
            ",",
            "max",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "product_price",
            ")",
            ",",
            "avg",
            "(",
            "product_price",
            ")",
            ",",
            "max",
            "(",
            "product_price",
            ")",
            "from",
            "products"
        ],
        "question": "Show the minimum, average, maximum price for all products.",
        "question_toks": [
            "Show",
            "the",
            "minimum",
            ",",
            "average",
            ",",
            "maximum",
            "price",
            "for",
            "all",
            "products",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT MIN(product_price), AVG(product_price), MAX(product_price) FROM Products;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "product_price",
            ")",
            ",",
            "avg",
            "(",
            "product_price",
            ")",
            ",",
            "max",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "product_price",
            ")",
            ",",
            "avg",
            "(",
            "product_price",
            ")",
            ",",
            "max",
            "(",
            "product_price",
            ")",
            "from",
            "products"
        ],
        "question": "What are the minimum, average, and maximum prices across all products?",
        "question_toks": [
            "What",
            "are",
            "the",
            "minimum",
            ",",
            "average",
            ",",
            "and",
            "maximum",
            "prices",
            "across",
            "all",
            "products",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT MIN(product_price) AS min_price, AVG(product_price) AS avg_price, MAX(product_price) AS max_price FROM Products;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Clothes",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value"
        ],
        "question": "What is the average price for products with type Clothes?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "price",
            "for",
            "products",
            "with",
            "type",
            "Clothes",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Clothes\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(T3.product_price) FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Products AS T3 ON T2.product_id = T3.product_id WHERE T3.product_type_code = 'Clothes'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Clothes",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value"
        ],
        "question": "Return the average price of Clothes.",
        "question_toks": [
            "Return",
            "the",
            "average",
            "price",
            "of",
            "Clothes",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Clothes\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(T2.product_price) FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T1.product_type_code = 'Clothes'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value"
        ],
        "question": "How many hardware type products do we have?",
        "question_toks": [
            "How",
            "many",
            "hardware",
            "type",
            "products",
            "do",
            "we",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Hardware\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\";"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value"
        ],
        "question": "Count the number of products of the type Hardware.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "products",
            "of",
            "the",
            "type",
            "Hardware",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Hardware\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_price",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_price",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            ")"
        ],
        "question": "Show all product names with price higher than the average.",
        "question_toks": [
            "Show",
            "all",
            "product",
            "names",
            "with",
            "price",
            "higher",
            "than",
            "the",
            "average",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_name FROM products WHERE product_price > (SELECT AVG(product_price) FROM products)"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_price",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_price",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            ")"
        ],
        "question": "What are the names of products that have a price above the average for all products.",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "products",
            "that",
            "have",
            "a",
            "price",
            "above",
            "the",
            "average",
            "for",
            "all",
            "products",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_name FROM Products WHERE product_price > (SELECT avg(product_price) FROM Products)"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''",
            "AND",
            "product_price",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            "and",
            "product_price",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            ")"
        ],
        "question": "Show all hardware product names with price higher than the average price of hardware type products.",
        "question_toks": [
            "Show",
            "all",
            "hardware",
            "product",
            "names",
            "with",
            "price",
            "higher",
            "than",
            "the",
            "average",
            "price",
            "of",
            "hardware",
            "type",
            "products",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Hardware\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        2,
                                        false
                                    ],
                                    null
                                ],
                                "\"Hardware\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT P.product_name FROM products AS P JOIN customer_orders AS CO ON P.product_id = CO.order_id JOIN orders_items AS OI ON CO.order_id = OI.order_id WHERE P.product_type_code = 'Hardware' AND P.product_price > (SELECT AVG(product_price) FROM products WHERE product_type_code = 'Hardware')"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''",
            "AND",
            "product_price",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            "and",
            "product_price",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            ")"
        ],
        "question": "What are the names of Hardware product with prices above the average price of Hardware products.",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "Hardware",
            "product",
            "with",
            "prices",
            "above",
            "the",
            "average",
            "price",
            "of",
            "Hardware",
            "products",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Hardware\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        2,
                                        false
                                    ],
                                    null
                                ],
                                "\"Hardware\"",
                                null
                            ]
                        ],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_name FROM Products WHERE product_type_code = 'Hardware' AND product_price > (SELECT AVG(product_price) FROM Products WHERE product_type_code = 'Hardware')"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Clothes",
            "''",
            "ORDER",
            "BY",
            "product_price",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            "order",
            "by",
            "product_price",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the name of the most expensive product with type Clothes?",
        "question_toks": [
            "What",
            "is",
            "the",
            "name",
            "of",
            "the",
            "most",
            "expensive",
            "product",
            "with",
            "type",
            "Clothes",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Clothes\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_name FROM Products WHERE product_type_code = 'Clothes' ORDER BY product_price DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Clothes",
            "''",
            "ORDER",
            "BY",
            "product_price",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            "order",
            "by",
            "product_price",
            "desc",
            "limit",
            "value"
        ],
        "question": "Give the name of the most expensive Clothes product.",
        "question_toks": [
            "Give",
            "the",
            "name",
            "of",
            "the",
            "most",
            "expensive",
            "Clothes",
            "product",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Clothes\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_name FROM Products WHERE product_type_code = 'Clothes' ORDER BY product_price DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "product_id",
            ",",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''",
            "ORDER",
            "BY",
            "product_price",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_name",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            "order",
            "by",
            "product_price",
            "asc",
            "limit",
            "value"
        ],
        "question": "What is the product id and product name for the cheapest Hardware type product?",
        "question_toks": [
            "What",
            "is",
            "the",
            "product",
            "id",
            "and",
            "product",
            "name",
            "for",
            "the",
            "cheapest",
            "Hardware",
            "type",
            "product",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Hardware\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "product_id",
            ",",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''",
            "ORDER",
            "BY",
            "product_price",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_name",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            "order",
            "by",
            "product_price",
            "asc",
            "limit",
            "value"
        ],
        "question": "Give the id and name of the cheapest Hardware product.",
        "question_toks": [
            "Give",
            "the",
            "id",
            "and",
            "name",
            "of",
            "the",
            "cheapest",
            "Hardware",
            "product",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Hardware\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products ORDER BY product_price DESC",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "ORDER",
            "BY",
            "product_price",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "order",
            "by",
            "product_price",
            "desc"
        ],
        "question": "List all product names in descending order of price.",
        "question_toks": [
            "List",
            "all",
            "product",
            "names",
            "in",
            "descending",
            "order",
            "of",
            "price",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_name FROM products ORDER BY product_price DESC"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products ORDER BY product_price DESC",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "ORDER",
            "BY",
            "product_price",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "order",
            "by",
            "product_price",
            "desc"
        ],
        "question": "What are the names of the products, sorted by descending price?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "products",
            ",",
            "sorted",
            "by",
            "descending",
            "price",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_name FROM Products ORDER BY product_price DESC"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''",
            "ORDER",
            "BY",
            "product_price",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            "order",
            "by",
            "product_price",
            "asc"
        ],
        "question": "Show all hardware type products in ascending order of price.",
        "question_toks": [
            "Show",
            "all",
            "hardware",
            "type",
            "products",
            "in",
            "ascending",
            "order",
            "of",
            "price",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Hardware\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_name \nFROM Products \nWHERE product_type_code = 'Hardware'\nORDER BY product_price ASC"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "``",
            "Hardware",
            "''",
            "ORDER",
            "BY",
            "product_price",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value",
            "order",
            "by",
            "product_price",
            "asc"
        ],
        "question": "What are the names of all Hardware products, sorted by price ascending?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "Hardware",
            "products",
            ",",
            "sorted",
            "by",
            "price",
            "ascending",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Hardware\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.product_name FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id WHERE T1.product_type_code  =  'Hardware' ORDER BY T1.product_price ASC"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code",
        "query_toks": [
            "SELECT",
            "product_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_type_code"
        ],
        "question": "List all product type codes and the number of products in each type.",
        "question_toks": [
            "List",
            "all",
            "product",
            "type",
            "codes",
            "and",
            "the",
            "number",
            "of",
            "products",
            "in",
            "each",
            "type",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_type_code, COUNT(*) FROM products GROUP BY product_type_code"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code",
        "query_toks": [
            "SELECT",
            "product_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_type_code"
        ],
        "question": "How many products are there for each product type?",
        "question_toks": [
            "How",
            "many",
            "products",
            "are",
            "there",
            "for",
            "each",
            "product",
            "type",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_type_code ,  count(*) \nFROM Products \nGROUP BY product_type_code"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code",
        "query_toks": [
            "SELECT",
            "product_type_code",
            ",",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            ",",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_type_code"
        ],
        "question": "Show all product type codes and the average price for each type.",
        "question_toks": [
            "Show",
            "all",
            "product",
            "type",
            "codes",
            "and",
            "the",
            "average",
            "price",
            "for",
            "each",
            "type",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_type_code ,  AVG(product_price) FROM Products GROUP BY product_type_code"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code",
        "query_toks": [
            "SELECT",
            "product_type_code",
            ",",
            "avg",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            ",",
            "avg",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_type_code"
        ],
        "question": "What is the average price of products for each product type?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "price",
            "of",
            "products",
            "for",
            "each",
            "product",
            "type",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_type_code, AVG(product_price) \nFROM products \nGROUP BY product_type_code"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "product_type_code",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            "from",
            "products",
            "group",
            "by",
            "product_type_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "What are the product type code with at least two products?",
        "question_toks": [
            "What",
            "are",
            "the",
            "product",
            "type",
            "code",
            "with",
            "at",
            "least",
            "two",
            "products",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING COUNT(product_type_code) >= 2"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "product_type_code",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            "from",
            "products",
            "group",
            "by",
            "product_type_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Give the product type codes of product types that have two or more products.",
        "question_toks": [
            "Give",
            "the",
            "product",
            "type",
            "codes",
            "of",
            "product",
            "types",
            "that",
            "have",
            "two",
            "or",
            "more",
            "products",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING COUNT(*) >= 2"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "product_type_code",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            "from",
            "products",
            "group",
            "by",
            "product_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the product type code with most number of products?",
        "question_toks": [
            "What",
            "is",
            "the",
            "product",
            "type",
            "code",
            "with",
            "most",
            "number",
            "of",
            "products",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "product_type_code",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            "from",
            "products",
            "group",
            "by",
            "product_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the most frequent product type code?",
        "question_toks": [
            "What",
            "is",
            "the",
            "most",
            "frequent",
            "product",
            "type",
            "code",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Customers",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers"
        ],
        "question": "How many customers do we have?",
        "question_toks": [
            "How",
            "many",
            "customers",
            "do",
            "we",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM Customers"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Customers",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers"
        ],
        "question": "Count the number of customers.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "customers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(customer_id) FROM Customers"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT customer_id ,  customer_name FROM Customers",
        "query_toks": [
            "SELECT",
            "customer_id",
            ",",
            "customer_name",
            "FROM",
            "Customers"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            ",",
            "customer_name",
            "from",
            "customers"
        ],
        "question": "Show all customer ids and customer names.",
        "question_toks": [
            "Show",
            "all",
            "customer",
            "ids",
            "and",
            "customer",
            "names",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT customer_id ,  customer_name FROM Customers"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT customer_id ,  customer_name FROM Customers",
        "query_toks": [
            "SELECT",
            "customer_id",
            ",",
            "customer_name",
            "FROM",
            "Customers"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            ",",
            "customer_name",
            "from",
            "customers"
        ],
        "question": "What are the ids and names of all customers?",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            "and",
            "names",
            "of",
            "all",
            "customers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT customer_id ,  customer_name FROM Customers"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"",
        "query_toks": [
            "SELECT",
            "customer_address",
            ",",
            "customer_phone",
            ",",
            "customer_email",
            "FROM",
            "Customers",
            "WHERE",
            "customer_name",
            "=",
            "``",
            "Jeromy",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "customer_address",
            ",",
            "customer_phone",
            ",",
            "customer_email",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "value"
        ],
        "question": "What is the customer address, customer phone, and customer email for Jeromy?",
        "question_toks": [
            "What",
            "is",
            "the",
            "customer",
            "address",
            ",",
            "customer",
            "phone",
            ",",
            "and",
            "customer",
            "email",
            "for",
            "Jeromy",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Jeromy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT customer_address ,  customer_phone ,  customer_email FROM customers WHERE customer_name = 'Jeromy';"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"",
        "query_toks": [
            "SELECT",
            "customer_address",
            ",",
            "customer_phone",
            ",",
            "customer_email",
            "FROM",
            "Customers",
            "WHERE",
            "customer_name",
            "=",
            "``",
            "Jeromy",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "customer_address",
            ",",
            "customer_phone",
            ",",
            "customer_email",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "value"
        ],
        "question": "Give the address, phone, and email for customers with the name Jeromy.",
        "question_toks": [
            "Give",
            "the",
            "address",
            ",",
            "phone",
            ",",
            "and",
            "email",
            "for",
            "customers",
            "with",
            "the",
            "name",
            "Jeromy",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Jeromy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT customer_address, customer_phone, customer_email FROM customers WHERE customer_name = 'Jeromy';"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code",
        "query_toks": [
            "SELECT",
            "payment_method_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "payment_method_code"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "payment_method_code"
        ],
        "question": "Show all payment method codes and the number of customers in each code.",
        "question_toks": [
            "Show",
            "all",
            "payment",
            "method",
            "codes",
            "and",
            "the",
            "number",
            "of",
            "customers",
            "in",
            "each",
            "code",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT payment_method_code, COUNT(*) AS num_customers FROM Customers GROUP BY payment_method_code"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code",
        "query_toks": [
            "SELECT",
            "payment_method_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "payment_method_code"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "payment_method_code"
        ],
        "question": "How many customers use each payment method?",
        "question_toks": [
            "How",
            "many",
            "customers",
            "use",
            "each",
            "payment",
            "method",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "payment_method_code",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "payment_method_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "customers",
            "group",
            "by",
            "payment_method_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the payment method code used by most number of customers?",
        "question_toks": [
            "What",
            "is",
            "the",
            "payment",
            "method",
            "code",
            "used",
            "by",
            "most",
            "number",
            "of",
            "customers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "payment_method_code",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "payment_method_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "customers",
            "group",
            "by",
            "payment_method_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Give the code of the payment method that is most commonly used.",
        "question_toks": [
            "Give",
            "the",
            "code",
            "of",
            "the",
            "payment",
            "method",
            "that",
            "is",
            "most",
            "commonly",
            "used",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)",
        "query_toks": [
            "SELECT",
            "customer_name",
            "FROM",
            "Customers",
            "WHERE",
            "payment_method_code",
            "=",
            "(",
            "SELECT",
            "payment_method_code",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "payment_method_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "customers",
            "where",
            "payment_method_code",
            "=",
            "(",
            "select",
            "payment_method_code",
            "from",
            "customers",
            "group",
            "by",
            "payment_method_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ],
        "question": "Show all customer names with the  payment method code used by least number of customers.",
        "question_toks": [
            "Show",
            "all",
            "customer",
            "names",
            "with",
            "the",
            "payment",
            "method",
            "code",
            "used",
            "by",
            "least",
            "number",
            "of",
            "customers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                9,
                                false
                            ]
                        ],
                        "having": [],
                        "orderBy": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.customer_name FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.payment_method_code ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)",
        "query_toks": [
            "SELECT",
            "customer_name",
            "FROM",
            "Customers",
            "WHERE",
            "payment_method_code",
            "=",
            "(",
            "SELECT",
            "payment_method_code",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "payment_method_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "customers",
            "where",
            "payment_method_code",
            "=",
            "(",
            "select",
            "payment_method_code",
            "from",
            "customers",
            "group",
            "by",
            "payment_method_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ],
        "question": "What are the names of customers who use the least common payment method?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "customers",
            "who",
            "use",
            "the",
            "least",
            "common",
            "payment",
            "method",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                9,
                                false
                            ]
                        ],
                        "having": [],
                        "orderBy": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT C.customer_name, COUNT(O.order_id)\nFROM Customers C\nJOIN Customer_Orders O ON C.customer_id = O.customer_id\nGROUP BY C.customer_name\nORDER BY COUNT(O.order_id) ASC\nLIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"",
        "query_toks": [
            "SELECT",
            "payment_method_code",
            ",",
            "customer_number",
            "FROM",
            "Customers",
            "WHERE",
            "customer_name",
            "=",
            "``",
            "Jeromy",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "customer_number",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "value"
        ],
        "question": "What is the payment method and customer number for customer named Jeromy?",
        "question_toks": [
            "What",
            "is",
            "the",
            "payment",
            "method",
            "and",
            "customer",
            "number",
            "for",
            "customer",
            "named",
            "Jeromy",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Jeromy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  'Jeromy'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"",
        "query_toks": [
            "SELECT",
            "payment_method_code",
            ",",
            "customer_number",
            "FROM",
            "Customers",
            "WHERE",
            "customer_name",
            "=",
            "``",
            "Jeromy",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "customer_number",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "value"
        ],
        "question": "Give the payment method code and customer number corresponding to the customer named Jeromy.",
        "question_toks": [
            "Give",
            "the",
            "payment",
            "method",
            "code",
            "and",
            "customer",
            "number",
            "corresponding",
            "to",
            "the",
            "customer",
            "named",
            "Jeromy",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Jeromy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT payment_method_code, customer_number FROM customers WHERE customer_name = 'Jeromy';"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT DISTINCT payment_method_code FROM Customers",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "payment_method_code",
            "FROM",
            "Customers"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "payment_method_code",
            "from",
            "customers"
        ],
        "question": "What are the distinct payment methods used by customers?",
        "question_toks": [
            "What",
            "are",
            "the",
            "distinct",
            "payment",
            "methods",
            "used",
            "by",
            "customers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT payment_method_code FROM Customers"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT DISTINCT payment_method_code FROM Customers",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "payment_method_code",
            "FROM",
            "Customers"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "payment_method_code",
            "from",
            "customers"
        ],
        "question": "Give the different payment method codes that customers use.",
        "question_toks": [
            "Give",
            "the",
            "different",
            "payment",
            "method",
            "codes",
            "that",
            "customers",
            "use",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT payment_method_code FROM Customers"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name",
        "query_toks": [
            "SELECT",
            "product_id",
            ",",
            "product_type_code",
            "FROM",
            "Products",
            "ORDER",
            "BY",
            "product_name"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            "from",
            "products",
            "order",
            "by",
            "product_name"
        ],
        "question": "Show the id and the product type for all products, order by product name.",
        "question_toks": [
            "Show",
            "the",
            "id",
            "and",
            "the",
            "product",
            "type",
            "for",
            "all",
            "products",
            ",",
            "order",
            "by",
            "product",
            "name",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_id, product_type_code FROM Products ORDER BY product_name"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name",
        "query_toks": [
            "SELECT",
            "product_id",
            ",",
            "product_type_code",
            "FROM",
            "Products",
            "ORDER",
            "BY",
            "product_name"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            ",",
            "product_type_code",
            "from",
            "products",
            "order",
            "by",
            "product_name"
        ],
        "question": "What are the ids and product types for all products, sorted alphabetically by product name?",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            "and",
            "product",
            "types",
            "for",
            "all",
            "products",
            ",",
            "sorted",
            "alphabetically",
            "by",
            "product",
            "name",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_id, product_type_code FROM Products ORDER BY product_name"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "product_type_code",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            "from",
            "products",
            "group",
            "by",
            "product_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "question": "What is the product type with least number of products?",
        "question_toks": [
            "What",
            "is",
            "the",
            "product",
            "type",
            "with",
            "least",
            "number",
            "of",
            "products",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.product_type_code FROM Products AS T1 JOIN Customer_Orders AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_type_code ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "product_type_code",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            "from",
            "products",
            "group",
            "by",
            "product_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "question": "What is the code of the product type that is least common?",
        "question_toks": [
            "What",
            "is",
            "the",
            "code",
            "of",
            "the",
            "product",
            "type",
            "that",
            "is",
            "least",
            "common",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT product_type_code FROM products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Customer_orders",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customer_orders"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customer_orders"
        ],
        "question": "How many customer orders do we have?",
        "question_toks": [
            "How",
            "many",
            "customer",
            "orders",
            "do",
            "we",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM Customer_Orders;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Customer_orders",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customer_orders"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customer_orders"
        ],
        "question": "Count the number of customer orders.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "customer",
            "orders",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM Customer_Orders;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"",
        "query_toks": [
            "SELECT",
            "order_id",
            ",",
            "order_date",
            ",",
            "order_status_code",
            "FROM",
            "Customer_orders",
            "AS",
            "T1",
            "JOIN",
            "Customers",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "WHERE",
            "T2.customer_name",
            "=",
            "``",
            "Jeromy",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "order_id",
            ",",
            "order_date",
            ",",
            "order_status_code",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "where",
            "t2",
            ".",
            "customer_name",
            "=",
            "value"
        ],
        "question": "Show the order ids, order dates, and order status codes for all orders by customer Jeromy.",
        "question_toks": [
            "Show",
            "the",
            "order",
            "ids",
            ",",
            "order",
            "dates",
            ",",
            "and",
            "order",
            "status",
            "codes",
            "for",
            "all",
            "orders",
            "by",
            "customer",
            "Jeromy",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Jeromy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT order_id, order_date, order_status_code FROM Customer_Orders WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_name = 'Jeremy')"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"",
        "query_toks": [
            "SELECT",
            "order_id",
            ",",
            "order_date",
            ",",
            "order_status_code",
            "FROM",
            "Customer_orders",
            "AS",
            "T1",
            "JOIN",
            "Customers",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "WHERE",
            "T2.customer_name",
            "=",
            "``",
            "Jeromy",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "order_id",
            ",",
            "order_date",
            ",",
            "order_status_code",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "where",
            "t2",
            ".",
            "customer_name",
            "=",
            "value"
        ],
        "question": "What were the ids, dates, and status codes for orders made by Jeromy?",
        "question_toks": [
            "What",
            "were",
            "the",
            "ids",
            ",",
            "dates",
            ",",
            "and",
            "status",
            "codes",
            "for",
            "orders",
            "made",
            "by",
            "Jeromy",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Jeromy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.order_id, T1.order_date, T1.order_status_code FROM Customer_Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_name = 'Jeremy'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
        "query_toks": [
            "SELECT",
            "T2.customer_name",
            ",",
            "T1.customer_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customer_orders",
            "AS",
            "T1",
            "JOIN",
            "Customers",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "customer_name",
            ",",
            "t1",
            ".",
            "customer_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id"
        ],
        "question": "Show all customer names, ids and the number of orders by each customer.",
        "question_toks": [
            "Show",
            "all",
            "customer",
            "names",
            ",",
            "ids",
            "and",
            "the",
            "number",
            "of",
            "orders",
            "by",
            "each",
            "customer",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    16,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.customer_name, T3.customer_id, count(T1.order_id) as number_of_orders \nFROM order_items T1 \nJOIN customer_orders T2 ON T1.order_id = T2.order_id \nJOIN customers T3 ON T2.customer_id = T3.customer_id \nGROUP BY T3.customer_id"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
        "query_toks": [
            "SELECT",
            "T2.customer_name",
            ",",
            "T1.customer_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customer_orders",
            "AS",
            "T1",
            "JOIN",
            "Customers",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "customer_name",
            ",",
            "t1",
            ".",
            "customer_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id"
        ],
        "question": "What are the names, ids, and number of orders made for each customer?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            ",",
            "ids",
            ",",
            "and",
            "number",
            "of",
            "orders",
            "made",
            "for",
            "each",
            "customer",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    16,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT customers.customer_name, customers.customer_id, count(customer_orders.order_id) AS num_orders FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id GROUP BY customers.customer_id"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.customer_id",
            ",",
            "T2.customer_name",
            ",",
            "T2.customer_phone",
            ",",
            "T2.customer_email",
            "FROM",
            "Customer_orders",
            "AS",
            "T1",
            "JOIN",
            "Customers",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.customer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_id",
            ",",
            "t2",
            ".",
            "customer_name",
            ",",
            "t2",
            ".",
            "customer_phone",
            ",",
            "t2",
            ".",
            "customer_email",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the customer id, name, phone, and email for the customer with most orders?",
        "question_toks": [
            "What",
            "is",
            "the",
            "customer",
            "id",
            ",",
            "name",
            ",",
            "phone",
            ",",
            "and",
            "email",
            "for",
            "the",
            "customer",
            "with",
            "most",
            "orders",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    16,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T4.customer_id, T4.customer_name, T4.customer_phone, T4.customer_email \nFROM Order_Items AS T1 \nJOIN Customer_Orders AS T2 ON T1.order_id = T2.order_id \nJOIN Customers AS T4 ON T2.customer_id = T4.customer_id \nGROUP BY T4.customer_id \nORDER BY count(*) DESC \nLIMIT 1;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.customer_id",
            ",",
            "T2.customer_name",
            ",",
            "T2.customer_phone",
            ",",
            "T2.customer_email",
            "FROM",
            "Customer_orders",
            "AS",
            "T1",
            "JOIN",
            "Customers",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.customer_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_id",
            ",",
            "t2",
            ".",
            "customer_name",
            ",",
            "t2",
            ".",
            "customer_phone",
            ",",
            "t2",
            ".",
            "customer_email",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Give the id, name, phone, and email corresponding to the customer who made the most orders.",
        "question_toks": [
            "Give",
            "the",
            "id",
            ",",
            "name",
            ",",
            "phone",
            ",",
            "and",
            "email",
            "corresponding",
            "to",
            "the",
            "customer",
            "who",
            "made",
            "the",
            "most",
            "orders",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    16,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email FROM Customers WHERE Customers.customer_id = ( SELECT order_id FROM Customer_Orders GROUP BY order_id ORDER BY COUNT(*) DESC LIMIT 1 )"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code",
        "query_toks": [
            "SELECT",
            "order_status_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customer_orders",
            "GROUP",
            "BY",
            "order_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status_code"
        ],
        "question": "Show all order status and the number of orders in each status.",
        "question_toks": [
            "Show",
            "all",
            "order",
            "status",
            "and",
            "the",
            "number",
            "of",
            "orders",
            "in",
            "each",
            "status",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT order_status_code, COUNT(*) FROM Customer_Orders GROUP BY order_status_code;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code",
        "query_toks": [
            "SELECT",
            "order_status_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customer_orders",
            "GROUP",
            "BY",
            "order_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status_code"
        ],
        "question": "How many orders have each order status code?",
        "question_toks": [
            "How",
            "many",
            "orders",
            "have",
            "each",
            "order",
            "status",
            "code",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "To query the number of orders for each order status code, you can use the following SQL query:\n\n```sql\nSELECT order_status_code, COUNT(*) AS num_orders\nFROM Customer_Orders\nGROUP BY order_status_code;\n```"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "order_status_code",
            "FROM",
            "Customer_orders",
            "GROUP",
            "BY",
            "order_status_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the order status code that is most common?",
        "question_toks": [
            "What",
            "is",
            "the",
            "order",
            "status",
            "code",
            "that",
            "is",
            "most",
            "common",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT `order_status_code` FROM `customer_orders` GROUP BY `order_status_code` ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "order_status_code",
            "FROM",
            "Customer_orders",
            "GROUP",
            "BY",
            "order_status_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Give the order status code that is most frequent across customer orders.",
        "question_toks": [
            "Give",
            "the",
            "order",
            "status",
            "code",
            "that",
            "is",
            "most",
            "frequent",
            "across",
            "customer",
            "orders",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT order_status_code FROM customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_orders",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "customer_orders",
            ")"
        ],
        "question": "How many customers do not have an order?",
        "question_toks": [
            "How",
            "many",
            "customers",
            "do",
            "not",
            "have",
            "an",
            "order",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            16,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_orders)"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_orders",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "customer_orders",
            ")"
        ],
        "question": "Count the number of customers who have not made an order.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "customers",
            "who",
            "have",
            "not",
            "made",
            "an",
            "order",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            16,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders)"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "EXCEPT",
            "SELECT",
            "T1.product_name",
            "FROM",
            "Products",
            "AS",
            "t1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "except",
            "select",
            "t1",
            ".",
            "product_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id"
        ],
        "question": "Show all product names without an order.",
        "question_toks": [
            "Show",
            "all",
            "product",
            "names",
            "without",
            "an",
            "order",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT `product_name` FROM Products WHERE `product_id` NOT IN (SELECT `product_id` FROM Order_Items)"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "EXCEPT",
            "SELECT",
            "T1.product_name",
            "FROM",
            "Products",
            "AS",
            "t1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "except",
            "select",
            "t1",
            ".",
            "product_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id"
        ],
        "question": "What are the names of products that have not been ordered?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "products",
            "that",
            "have",
            "not",
            "been",
            "ordered",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT product_name FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items)"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "order_quantity",
            ")",
            "FROM",
            "Order_items",
            "AS",
            "T1",
            "JOIN",
            "Products",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "WHERE",
            "T2.product_name",
            "=",
            "``",
            "Monitor",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "order_quantity",
            ")",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "where",
            "t2",
            ".",
            "product_name",
            "=",
            "value"
        ],
        "question": "How many products named Monitor have been ordered?",
        "question_toks": [
            "How",
            "many",
            "products",
            "named",
            "Monitor",
            "have",
            "been",
            "ordered",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Monitor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM `order_items` WHERE `product_id` IN (SELECT `product_id` FROM `products` WHERE `product_name` = \"Monitor\")"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "order_quantity",
            ")",
            "FROM",
            "Order_items",
            "AS",
            "T1",
            "JOIN",
            "Products",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "WHERE",
            "T2.product_name",
            "=",
            "``",
            "Monitor",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "order_quantity",
            ")",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "where",
            "t2",
            ".",
            "product_name",
            "=",
            "value"
        ],
        "question": "What is the total number of Monitor products that have been ordered?",
        "question_toks": [
            "What",
            "is",
            "the",
            "total",
            "number",
            "of",
            "Monitor",
            "products",
            "that",
            "have",
            "been",
            "ordered",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Monitor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT SUM(T2.order_quantity) AS total_orders FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'Monitor'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T3.customer_id",
            ")",
            "FROM",
            "Order_items",
            "AS",
            "T1",
            "JOIN",
            "Products",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "JOIN",
            "Customer_orders",
            "AS",
            "T3",
            "ON",
            "T3.order_id",
            "=",
            "T1.order_id",
            "WHERE",
            "T2.product_name",
            "=",
            "``",
            "Monitor",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "t3",
            ".",
            "customer_id",
            ")",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "customer_orders",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "order_id",
            "=",
            "t1",
            ".",
            "order_id",
            "where",
            "t2",
            ".",
            "product_name",
            "=",
            "value"
        ],
        "question": "How many customers have ordered the product named Monitor?",
        "question_toks": [
            "How",
            "many",
            "customers",
            "have",
            "ordered",
            "the",
            "product",
            "named",
            "Monitor",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                16,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Monitor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM Order_Items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  'Monitor'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T3.customer_id",
            ")",
            "FROM",
            "Order_items",
            "AS",
            "T1",
            "JOIN",
            "Products",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "JOIN",
            "Customer_orders",
            "AS",
            "T3",
            "ON",
            "T3.order_id",
            "=",
            "T1.order_id",
            "WHERE",
            "T2.product_name",
            "=",
            "``",
            "Monitor",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "t3",
            ".",
            "customer_id",
            ")",
            "from",
            "order_items",
            "as",
            "t1",
            "join",
            "products",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "customer_orders",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "order_id",
            "=",
            "t1",
            ".",
            "order_id",
            "where",
            "t2",
            ".",
            "product_name",
            "=",
            "value"
        ],
        "question": "Count the number of different customers who have bought a Monitor Product.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "different",
            "customers",
            "who",
            "have",
            "bought",
            "a",
            "Monitor",
            "Product",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                16,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Monitor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT T1.customer_id) FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id JOIN products AS T3 ON T2.product_id = T3.product_id WHERE T3.product_name = 'Monitor'"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(DISTINCT customer_id) FROM Customer_orders",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "customer_id",
            ")",
            "FROM",
            "Customer_orders"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "customer_id",
            ")",
            "from",
            "customer_orders"
        ],
        "question": "How many customers have an order?",
        "question_toks": [
            "How",
            "many",
            "customers",
            "have",
            "an",
            "order",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                16,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT customer_id) FROM Customer_Orders"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT count(DISTINCT customer_id) FROM Customer_orders",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "customer_id",
            ")",
            "FROM",
            "Customer_orders"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "customer_id",
            ")",
            "from",
            "customer_orders"
        ],
        "question": "Count the number of differnt customers who have made an order.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "differnt",
            "customers",
            "who",
            "have",
            "made",
            "an",
            "order",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                16,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT customer_id) FROM Customer_Orders"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders",
        "query_toks": [
            "SELECT",
            "customer_id",
            "FROM",
            "Customers",
            "EXCEPT",
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_orders"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customers",
            "except",
            "select",
            "customer_id",
            "from",
            "customer_orders"
        ],
        "question": "Show all customer ids without an order.",
        "question_toks": [
            "Show",
            "all",
            "customer",
            "ids",
            "without",
            "an",
            "order",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    16,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT customer_id FROM customers EXCEPT SELECT customer_id FROM customer_orders"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders",
        "query_toks": [
            "SELECT",
            "customer_id",
            "FROM",
            "Customers",
            "EXCEPT",
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_orders"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customers",
            "except",
            "select",
            "customer_id",
            "from",
            "customer_orders"
        ],
        "question": "What are the ids of customers who have not made an order?",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            "of",
            "customers",
            "who",
            "have",
            "not",
            "made",
            "an",
            "order",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    16,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT customer_id FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_orders)"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;",
        "query_toks": [
            "SELECT",
            "T1.order_date",
            ",",
            "T1.order_id",
            "FROM",
            "Customer_Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "WHERE",
            "T2.order_quantity",
            ">",
            "6",
            "UNION",
            "SELECT",
            "T1.order_date",
            ",",
            "T1.order_id",
            "FROM",
            "Customer_Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "GROUP",
            "BY",
            "T1.order_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_date",
            ",",
            "t1",
            ".",
            "order_id",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "where",
            "t2",
            ".",
            "order_quantity",
            ">",
            "value",
            "union",
            "select",
            "t1",
            ".",
            "order_date",
            ",",
            "t1",
            ".",
            "order_id",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Show all the order dates and ids of the orders with quantity of any product larger than 6 or with more than 3 products.",
        "question_toks": [
            "Show",
            "all",
            "the",
            "order",
            "dates",
            "and",
            "ids",
            "of",
            "the",
            "orders",
            "with",
            "quantity",
            "of",
            "any",
            "product",
            "larger",
            "than",
            "6",
            "or",
            "with",
            "more",
            "than",
            "3",
            "products",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    15,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    17,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    15,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        15,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        3.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        },
        "generated_sql": "SELECT T1.order_date, T1.order_id FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 OR T1.order_id IN (SELECT T1.order_id FROM order_items AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN order_items AS T3 ON T1.order_id  =  T3.order_id GROUP BY T1.order_id HAVING COUNT(*)  >  3)"
    },
    {
        "db_id": "customers_and_orders",
        "query": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;",
        "query_toks": [
            "SELECT",
            "T1.order_date",
            ",",
            "T1.order_id",
            "FROM",
            "Customer_Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "WHERE",
            "T2.order_quantity",
            ">",
            "6",
            "UNION",
            "SELECT",
            "T1.order_date",
            ",",
            "T1.order_id",
            "FROM",
            "Customer_Orders",
            "AS",
            "T1",
            "JOIN",
            "Order_items",
            "AS",
            "T2",
            "ON",
            "T1.order_id",
            "=",
            "T2.order_id",
            "GROUP",
            "BY",
            "T1.order_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "order_date",
            ",",
            "t1",
            ".",
            "order_id",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "where",
            "t2",
            ".",
            "order_quantity",
            ">",
            "value",
            "union",
            "select",
            "t1",
            ".",
            "order_date",
            ",",
            "t1",
            ".",
            "order_id",
            "from",
            "customer_orders",
            "as",
            "t1",
            "join",
            "order_items",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "order_id",
            "=",
            "t2",
            ".",
            "order_id",
            "group",
            "by",
            "t1",
            ".",
            "order_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "What are the order ids and corresponding order dates for orders with a quantity greater than 6 or consisting of more than 3 products?",
        "question_toks": [
            "What",
            "are",
            "the",
            "order",
            "ids",
            "and",
            "corresponding",
            "order",
            "dates",
            "for",
            "orders",
            "with",
            "a",
            "quantity",
            "greater",
            "than",
            "6",
            "or",
            "consisting",
            "of",
            "more",
            "than",
            "3",
            "products",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    15,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    17,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    15,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [
                    [
                        0,
                        15,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        3.0,
                        null
                    ]
                ],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        },
        "generated_sql": "SELECT t1.order_id, t1.order_date FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t2.order_quantity  >  6 OR count(t2.product_id)  >  3 GROUP BY t1.order_id"
    },
    {
        "db_id": "region_building",
        "query": "SELECT count(*) FROM building",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "building"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building"
        ],
        "question": "How many buildings are there?",
        "question_toks": [
            "How",
            "many",
            "buildings",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM building"
    },
    {
        "db_id": "region_building",
        "query": "SELECT count(*) FROM building",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "building"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building"
        ],
        "question": "Count the number of buildings.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "buildings",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM building"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "building",
            "ORDER",
            "BY",
            "Number_of_Stories",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "building",
            "order",
            "by",
            "number_of_stories",
            "asc"
        ],
        "question": "List the names of buildings in ascending order of number of stories.",
        "question_toks": [
            "List",
            "the",
            "names",
            "of",
            "buildings",
            "in",
            "ascending",
            "order",
            "of",
            "number",
            "of",
            "stories",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM building ORDER BY Number_of_Stories ASC"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "building",
            "ORDER",
            "BY",
            "Number_of_Stories",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "building",
            "order",
            "by",
            "number_of_stories",
            "asc"
        ],
        "question": "What is the list of building names, sorted by the number of stories of each building in ascending order?",
        "question_toks": [
            "What",
            "is",
            "the",
            "list",
            "of",
            "building",
            "names",
            ",",
            "sorted",
            "by",
            "the",
            "number",
            "of",
            "stories",
            "of",
            "each",
            "building",
            "in",
            "ascending",
            "order",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM building ORDER BY Number_of_Stories ASC"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Address FROM building ORDER BY Completed_Year DESC",
        "query_toks": [
            "SELECT",
            "Address",
            "FROM",
            "building",
            "ORDER",
            "BY",
            "Completed_Year",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            "from",
            "building",
            "order",
            "by",
            "completed_year",
            "desc"
        ],
        "question": "List the addresses of buildings in descending order of building completion year.",
        "question_toks": [
            "List",
            "the",
            "addresses",
            "of",
            "buildings",
            "in",
            "descending",
            "order",
            "of",
            "building",
            "completion",
            "year",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT address FROM building ORDER BY Completed_Year DESC"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Address FROM building ORDER BY Completed_Year DESC",
        "query_toks": [
            "SELECT",
            "Address",
            "FROM",
            "building",
            "ORDER",
            "BY",
            "Completed_Year",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            "from",
            "building",
            "order",
            "by",
            "completed_year",
            "desc"
        ],
        "question": "Sort the buildings in descending order of building completion year, and return the building addresses.",
        "question_toks": [
            "Sort",
            "the",
            "buildings",
            "in",
            "descending",
            "order",
            "of",
            "building",
            "completion",
            "year",
            ",",
            "and",
            "return",
            "the",
            "building",
            "addresses",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Address FROM building ORDER BY Completed_Year DESC"
    },
    {
        "db_id": "region_building",
        "query": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "Number_of_Stories",
            ")",
            "FROM",
            "building",
            "WHERE",
            "Completed_Year",
            "!",
            "=",
            "``",
            "1980",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "number_of_stories",
            ")",
            "from",
            "building",
            "where",
            "completed_year",
            "!",
            "=",
            "value"
        ],
        "question": "What is the maximum number of stories of buildings not completed in 1980?",
        "question_toks": [
            "What",
            "is",
            "the",
            "maximum",
            "number",
            "of",
            "stories",
            "of",
            "buildings",
            "not",
            "completed",
            "in",
            "1980",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"1980\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT MAX(Number_of_Stories) FROM building WHERE Completed_Year != 1980"
    },
    {
        "db_id": "region_building",
        "query": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "Number_of_Stories",
            ")",
            "FROM",
            "building",
            "WHERE",
            "Completed_Year",
            "!",
            "=",
            "``",
            "1980",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "number_of_stories",
            ")",
            "from",
            "building",
            "where",
            "completed_year",
            "!",
            "=",
            "value"
        ],
        "question": "Among the buildings not completed in 1980, what is the maximum number of stories?",
        "question_toks": [
            "Among",
            "the",
            "buildings",
            "not",
            "completed",
            "in",
            "1980",
            ",",
            "what",
            "is",
            "the",
            "maximum",
            "number",
            "of",
            "stories",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"1980\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT MAX(Number_of_Stories) FROM building WHERE Completed_Year != 1980"
    },
    {
        "db_id": "region_building",
        "query": "SELECT avg(Population) FROM region",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Population",
            ")",
            "FROM",
            "region"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "population",
            ")",
            "from",
            "region"
        ],
        "question": "What is the average population for all regions?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "population",
            "for",
            "all",
            "regions",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(Population) FROM region;"
    },
    {
        "db_id": "region_building",
        "query": "SELECT avg(Population) FROM region",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Population",
            ")",
            "FROM",
            "region"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "population",
            ")",
            "from",
            "region"
        ],
        "question": "Compute the average population of a region.",
        "question_toks": [
            "Compute",
            "the",
            "average",
            "population",
            "of",
            "a",
            "region",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(Population) AS Avg_Population FROM region"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Name FROM region ORDER BY Name ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "region",
            "ORDER",
            "BY",
            "Name",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "region",
            "order",
            "by",
            "name",
            "asc"
        ],
        "question": "What are the names of regions in ascending alphabetical order?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "regions",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM region ORDER BY Name ASC;"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Name FROM region ORDER BY Name ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "region",
            "ORDER",
            "BY",
            "Name",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "region",
            "order",
            "by",
            "name",
            "asc"
        ],
        "question": "List the names of regions in alphabetical order.",
        "question_toks": [
            "List",
            "the",
            "names",
            "of",
            "regions",
            "in",
            "alphabetical",
            "order",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM region ORDER BY Name ASC"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Capital FROM region WHERE Area  >  10000",
        "query_toks": [
            "SELECT",
            "Capital",
            "FROM",
            "region",
            "WHERE",
            "Area",
            ">",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "capital",
            "from",
            "region",
            "where",
            "area",
            ">",
            "value"
        ],
        "question": "What are the capitals of the regions with area bigger than 10000?",
        "question_toks": [
            "What",
            "are",
            "the",
            "capitals",
            "of",
            "the",
            "regions",
            "with",
            "area",
            "bigger",
            "than",
            "10000",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    10000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT `Capital` FROM `region` WHERE `Area` > 10000"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Capital FROM region WHERE Area  >  10000",
        "query_toks": [
            "SELECT",
            "Capital",
            "FROM",
            "region",
            "WHERE",
            "Area",
            ">",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "capital",
            "from",
            "region",
            "where",
            "area",
            ">",
            "value"
        ],
        "question": "Give me the capitals of the regions whose area is larger than 10000.",
        "question_toks": [
            "Give",
            "me",
            "the",
            "capitals",
            "of",
            "the",
            "regions",
            "whose",
            "area",
            "is",
            "larger",
            "than",
            "10000",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    10000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT capital FROM region WHERE area  >  10000"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Capital",
            "FROM",
            "region",
            "ORDER",
            "BY",
            "Population",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "capital",
            "from",
            "region",
            "order",
            "by",
            "population",
            "desc",
            "limit",
            "value"
        ],
        "question": "List the capital of the region with the largest population.",
        "question_toks": [
            "List",
            "the",
            "capital",
            "of",
            "the",
            "region",
            "with",
            "the",
            "largest",
            "population",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Capital",
            "FROM",
            "region",
            "ORDER",
            "BY",
            "Population",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "capital",
            "from",
            "region",
            "order",
            "by",
            "population",
            "desc",
            "limit",
            "value"
        ],
        "question": "Which region has the largest population? Give me the capital of the region.",
        "question_toks": [
            "Which",
            "region",
            "has",
            "the",
            "largest",
            "population",
            "?",
            "Give",
            "me",
            "the",
            "capital",
            "of",
            "the",
            "region",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "region",
            "ORDER",
            "BY",
            "Area",
            "DESC",
            "LIMIT",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "region",
            "order",
            "by",
            "area",
            "desc",
            "limit",
            "value"
        ],
        "question": "List the names of the regions with the top 5 largest areas.",
        "question_toks": [
            "List",
            "the",
            "names",
            "of",
            "the",
            "regions",
            "with",
            "the",
            "top",
            "5",
            "largest",
            "areas",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 5,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "region",
            "ORDER",
            "BY",
            "Area",
            "DESC",
            "LIMIT",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "region",
            "order",
            "by",
            "area",
            "desc",
            "limit",
            "value"
        ],
        "question": "What are the names of the 5 largest regions in terms of area?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "5",
            "largest",
            "regions",
            "in",
            "terms",
            "of",
            "area",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 5,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5"
    },
    {
        "db_id": "region_building",
        "query": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
        "query_toks": [
            "SELECT",
            "T1.Name",
            ",",
            "T2.Name",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "name",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id"
        ],
        "question": "Show the names of buildings and the names of regions they are in.",
        "question_toks": [
            "Show",
            "the",
            "names",
            "of",
            "buildings",
            "and",
            "the",
            "names",
            "of",
            "regions",
            "they",
            "are",
            "in",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID"
    },
    {
        "db_id": "region_building",
        "query": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
        "query_toks": [
            "SELECT",
            "T1.Name",
            ",",
            "T2.Name",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "name",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id"
        ],
        "question": "For each building, return the name of the building and the name of the region it belongs to.",
        "question_toks": [
            "For",
            "each",
            "building",
            ",",
            "return",
            "the",
            "name",
            "of",
            "the",
            "building",
            "and",
            "the",
            "name",
            "of",
            "the",
            "region",
            "it",
            "belongs",
            "to",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Name, T1.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID"
    },
    {
        "db_id": "region_building",
        "query": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "T2.Name",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID",
            "GROUP",
            "BY",
            "T1.Region_ID",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id",
            "group",
            "by",
            "t1",
            ".",
            "region_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Show the names of regions that have more than one building.",
        "question_toks": [
            "Show",
            "the",
            "names",
            "of",
            "regions",
            "that",
            "have",
            "more",
            "than",
            "one",
            "building",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Name FROM building AS T1 INNER JOIN region AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T2.Region_ID HAVING COUNT(T1.Building_ID) > 1"
    },
    {
        "db_id": "region_building",
        "query": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "T2.Name",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID",
            "GROUP",
            "BY",
            "T1.Region_ID",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id",
            "group",
            "by",
            "t1",
            ".",
            "region_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Which regions have more than one building? Give me the names of the regions.",
        "question_toks": [
            "Which",
            "regions",
            "have",
            "more",
            "than",
            "one",
            "building",
            "?",
            "Give",
            "me",
            "the",
            "names",
            "of",
            "the",
            "regions",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM region WHERE Region_ID IN (SELECT DISTINCT Region_ID FROM building) GROUP BY Region_ID HAVING COUNT(Region_ID) > 1"
    },
    {
        "db_id": "region_building",
        "query": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.capital",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID",
            "GROUP",
            "BY",
            "T1.Region_ID",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "capital",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id",
            "group",
            "by",
            "t1",
            ".",
            "region_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Show the capital of the region that has the most buildings.",
        "question_toks": [
            "Show",
            "the",
            "capital",
            "of",
            "the",
            "region",
            "that",
            "has",
            "the",
            "most",
            "buildings",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T2.Capital ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "region_building",
        "query": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.capital",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID",
            "GROUP",
            "BY",
            "T1.Region_ID",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "capital",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id",
            "group",
            "by",
            "t1",
            ".",
            "region_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Which region has the largest number of buildings? Show me the capital of the region.",
        "question_toks": [
            "Which",
            "region",
            "has",
            "the",
            "largest",
            "number",
            "of",
            "buildings",
            "?",
            "Show",
            "me",
            "the",
            "capital",
            "of",
            "the",
            "region",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Capital FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Capital ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "region_building",
        "query": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
        "query_toks": [
            "SELECT",
            "T1.Address",
            ",",
            "T2.Capital",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "address",
            ",",
            "t2",
            ".",
            "capital",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id"
        ],
        "question": "Show addresses of buildings and the capitals of regions they are in.",
        "question_toks": [
            "Show",
            "addresses",
            "of",
            "buildings",
            "and",
            "the",
            "capitals",
            "of",
            "regions",
            "they",
            "are",
            "in",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Name, T1.Address FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID"
    },
    {
        "db_id": "region_building",
        "query": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
        "query_toks": [
            "SELECT",
            "T1.Address",
            ",",
            "T2.Capital",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "address",
            ",",
            "t2",
            ".",
            "capital",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id"
        ],
        "question": "For each building, return the address of the building and the name of the region it belongs to.",
        "question_toks": [
            "For",
            "each",
            "building",
            ",",
            "return",
            "the",
            "address",
            "of",
            "the",
            "building",
            "and",
            "the",
            "name",
            "of",
            "the",
            "region",
            "it",
            "belongs",
            "to",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT building.Address ,  region.Name FROM building JOIN region ON building.Region_ID = region.Region_ID"
    },
    {
        "db_id": "region_building",
        "query": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"",
        "query_toks": [
            "SELECT",
            "T1.Number_of_Stories",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID",
            "WHERE",
            "T2.Name",
            "=",
            "``",
            "Abruzzo",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "number_of_stories",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "question": "Show the number of stories of buildings in the region with name \"Abruzzo\".",
        "question_toks": [
            "Show",
            "the",
            "number",
            "of",
            "stories",
            "of",
            "buildings",
            "in",
            "the",
            "region",
            "with",
            "name",
            "``",
            "Abruzzo",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"Abruzzo\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\""
    },
    {
        "db_id": "region_building",
        "query": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"",
        "query_toks": [
            "SELECT",
            "T1.Number_of_Stories",
            "FROM",
            "building",
            "AS",
            "T1",
            "JOIN",
            "region",
            "AS",
            "T2",
            "ON",
            "T1.Region_ID",
            "=",
            "T2.Region_ID",
            "WHERE",
            "T2.Name",
            "=",
            "``",
            "Abruzzo",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "number_of_stories",
            "from",
            "building",
            "as",
            "t1",
            "join",
            "region",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "region_id",
            "=",
            "t2",
            ".",
            "region_id",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "question": "Return the number of stories for each building in the region named \"Abruzzo\".",
        "question_toks": [
            "Return",
            "the",
            "number",
            "of",
            "stories",
            "for",
            "each",
            "building",
            "in",
            "the",
            "region",
            "named",
            "``",
            "Abruzzo",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"Abruzzo\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Number_of_Stories FROM building JOIN region ON building.Region_ID = region.Region_ID WHERE region.Name = \"Abruzzo\""
    },
    {
        "db_id": "region_building",
        "query": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year",
        "query_toks": [
            "SELECT",
            "Completed_Year",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "building",
            "GROUP",
            "BY",
            "Completed_Year"
        ],
        "query_toks_no_value": [
            "select",
            "completed_year",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "group",
            "by",
            "completed_year"
        ],
        "question": "Please show each completion year and the number of buildings completed in that year.",
        "question_toks": [
            "Please",
            "show",
            "each",
            "completion",
            "year",
            "and",
            "the",
            "number",
            "of",
            "buildings",
            "completed",
            "in",
            "that",
            "year",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Completed_Year, COUNT(*) AS Number_of_Buildings FROM building GROUP BY Completed_Year"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year",
        "query_toks": [
            "SELECT",
            "Completed_Year",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "building",
            "GROUP",
            "BY",
            "Completed_Year"
        ],
        "query_toks_no_value": [
            "select",
            "completed_year",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "building",
            "group",
            "by",
            "completed_year"
        ],
        "question": "For completion year, return the year and the number of buildings completed.",
        "question_toks": [
            "For",
            "completion",
            "year",
            ",",
            "return",
            "the",
            "year",
            "and",
            "the",
            "number",
            "of",
            "buildings",
            "completed",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Completed_Year, COUNT(*) as Number_of_Buildings FROM building GROUP BY Completed_Year"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Completed_Year",
            "FROM",
            "building",
            "GROUP",
            "BY",
            "Completed_Year",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "completed_year",
            "from",
            "building",
            "group",
            "by",
            "completed_year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "List the year in which the most buildings are completed.",
        "question_toks": [
            "List",
            "the",
            "year",
            "in",
            "which",
            "the",
            "most",
            "buildings",
            "are",
            "completed",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Completed_Year",
            "FROM",
            "building",
            "GROUP",
            "BY",
            "Completed_Year",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "completed_year",
            "from",
            "building",
            "group",
            "by",
            "completed_year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "In which year did the most building constructions complete?",
        "question_toks": [
            "In",
            "which",
            "year",
            "did",
            "the",
            "most",
            "building",
            "constructions",
            "complete",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT MAX(Completed_Year) FROM building"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "region",
            "WHERE",
            "Region_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Region_ID",
            "FROM",
            "building",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "region",
            "where",
            "region_id",
            "not",
            "in",
            "(",
            "select",
            "region_id",
            "from",
            "building",
            ")"
        ],
        "question": "List the names of regions that do not have any buildings.",
        "question_toks": [
            "List",
            "the",
            "names",
            "of",
            "regions",
            "that",
            "do",
            "not",
            "have",
            "any",
            "buildings",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "region",
            "WHERE",
            "Region_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Region_ID",
            "FROM",
            "building",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "region",
            "where",
            "region_id",
            "not",
            "in",
            "(",
            "select",
            "region_id",
            "from",
            "building",
            ")"
        ],
        "question": "What are the names of regions in which there are no buildings?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "regions",
            "in",
            "which",
            "there",
            "are",
            "no",
            "buildings",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Name FROM region EXCEPT SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15",
        "query_toks": [
            "SELECT",
            "Completed_Year",
            "FROM",
            "building",
            "WHERE",
            "Number_of_Stories",
            ">",
            "20",
            "INTERSECT",
            "SELECT",
            "Completed_Year",
            "FROM",
            "building",
            "WHERE",
            "Number_of_Stories",
            "<",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "completed_year",
            "from",
            "building",
            "where",
            "number_of_stories",
            ">",
            "value",
            "intersect",
            "select",
            "completed_year",
            "from",
            "building",
            "where",
            "number_of_stories",
            "<",
            "value"
        ],
        "question": "Show the completed years shared by buildings with more than 20 stories and buildings with less than 15 stories.",
        "question_toks": [
            "Show",
            "the",
            "completed",
            "years",
            "shared",
            "by",
            "buildings",
            "with",
            "more",
            "than",
            "20",
            "stories",
            "and",
            "buildings",
            "with",
            "less",
            "than",
            "15",
            "stories",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        4,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        15.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Completed_Year \nFROM building\nWHERE Number_of_Stories > 20\nINTERSECT \nSELECT Completed_Year \nFROM building \nWHERE Number_of_Stories < 15"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15",
        "query_toks": [
            "SELECT",
            "Completed_Year",
            "FROM",
            "building",
            "WHERE",
            "Number_of_Stories",
            ">",
            "20",
            "INTERSECT",
            "SELECT",
            "Completed_Year",
            "FROM",
            "building",
            "WHERE",
            "Number_of_Stories",
            "<",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "completed_year",
            "from",
            "building",
            "where",
            "number_of_stories",
            ">",
            "value",
            "intersect",
            "select",
            "completed_year",
            "from",
            "building",
            "where",
            "number_of_stories",
            "<",
            "value"
        ],
        "question": "In which years did both buildings with more than 20 stories and buildings with less than 15 stories were completed?",
        "question_toks": [
            "In",
            "which",
            "years",
            "did",
            "both",
            "buildings",
            "with",
            "more",
            "than",
            "20",
            "stories",
            "and",
            "buildings",
            "with",
            "less",
            "than",
            "15",
            "stories",
            "were",
            "completed",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        4,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        15.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Completed_Year FROM building WHERE Number_of_Stories > 20 INTERSECT SELECT DISTINCT Completed_Year FROM building WHERE Number_of_Stories < 15"
    },
    {
        "db_id": "region_building",
        "query": "SELECT DISTINCT Address FROM building",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "Address",
            "FROM",
            "building"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "address",
            "from",
            "building"
        ],
        "question": "Show the distinct addresses of buildings.",
        "question_toks": [
            "Show",
            "the",
            "distinct",
            "addresses",
            "of",
            "buildings",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Address FROM building"
    },
    {
        "db_id": "region_building",
        "query": "SELECT DISTINCT Address FROM building",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "Address",
            "FROM",
            "building"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "address",
            "from",
            "building"
        ],
        "question": "Give me a list of distinct building addresses.",
        "question_toks": [
            "Give",
            "me",
            "a",
            "list",
            "of",
            "distinct",
            "building",
            "addresses",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Address FROM building"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC",
        "query_toks": [
            "SELECT",
            "Completed_Year",
            "FROM",
            "building",
            "ORDER",
            "BY",
            "Number_of_Stories",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "completed_year",
            "from",
            "building",
            "order",
            "by",
            "number_of_stories",
            "desc"
        ],
        "question": "Show the completed years of buildings in descending order of the number of stories.",
        "question_toks": [
            "Show",
            "the",
            "completed",
            "years",
            "of",
            "buildings",
            "in",
            "descending",
            "order",
            "of",
            "the",
            "number",
            "of",
            "stories",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT completed_year FROM building ORDER BY number_of_stories DESC"
    },
    {
        "db_id": "region_building",
        "query": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC",
        "query_toks": [
            "SELECT",
            "Completed_Year",
            "FROM",
            "building",
            "ORDER",
            "BY",
            "Number_of_Stories",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "completed_year",
            "from",
            "building",
            "order",
            "by",
            "number_of_stories",
            "desc"
        ],
        "question": "Sort buildings in descending order of the number of stories, and return their completion years.",
        "question_toks": [
            "Sort",
            "buildings",
            "in",
            "descending",
            "order",
            "of",
            "the",
            "number",
            "of",
            "stories",
            ",",
            "and",
            "return",
            "their",
            "completion",
            "years",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC"
    },
    {
        "db_id": "government_shift",
        "query": "select channel_details from channels order by channel_details",
        "query_toks": [
            "select",
            "channel_details",
            "from",
            "channels",
            "order",
            "by",
            "channel_details"
        ],
        "query_toks_no_value": [
            "select",
            "channel_details",
            "from",
            "channels",
            "order",
            "by",
            "channel_details"
        ],
        "question": "List details of all the channel in alphabetical order .",
        "question_toks": [
            "List",
            "details",
            "of",
            "all",
            "the",
            "channel",
            "in",
            "alphabetical",
            "order",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT * FROM Channels ORDER BY Channel_Details ASC;"
    },
    {
        "db_id": "government_shift",
        "query": "select channel_details from channels order by channel_details",
        "query_toks": [
            "select",
            "channel_details",
            "from",
            "channels",
            "order",
            "by",
            "channel_details"
        ],
        "query_toks_no_value": [
            "select",
            "channel_details",
            "from",
            "channels",
            "order",
            "by",
            "channel_details"
        ],
        "question": "What is the list of channel details ordered alphabetically ?",
        "question_toks": [
            "What",
            "is",
            "the",
            "list",
            "of",
            "channel",
            "details",
            "ordered",
            "alphabetically",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details ASC"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT count(*) FROM services",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "services"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "services"
        ],
        "question": "How many services are there?",
        "question_toks": [
            "How",
            "many",
            "services",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM Services"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT count(*) FROM services",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "services"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "services"
        ],
        "question": "Count the number of services.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "services",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT count(*) FROM Services"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "analytical_layer_type_code",
            "FROM",
            "analytical_layer",
            "GROUP",
            "BY",
            "analytical_layer_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "analytical_layer_type_code",
            "from",
            "analytical_layer",
            "group",
            "by",
            "analytical_layer_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the most common analytical layer type code?",
        "question_toks": [
            "What",
            "is",
            "the",
            "most",
            "common",
            "analytical",
            "layer",
            "type",
            "code",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Analytical_Layer_Type_Code FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(Analytical_Layer_Type_Code) DESC LIMIT 1"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "analytical_layer_type_code",
            "FROM",
            "analytical_layer",
            "GROUP",
            "BY",
            "analytical_layer_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "analytical_layer_type_code",
            "from",
            "analytical_layer",
            "group",
            "by",
            "analytical_layer_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Find the analytical layer type code that appears most often.",
        "question_toks": [
            "Find",
            "the",
            "analytical",
            "layer",
            "type",
            "code",
            "that",
            "appears",
            "most",
            "often",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Analytical_Layer_Type_Code\nFROM Analytical_Layer\nGROUP BY Analytical_Layer_Type_Code\nORDER BY COUNT(*) DESC\nLIMIT 1"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"",
        "query_toks": [
            "SELECT",
            "t3.service_details",
            "FROM",
            "customers",
            "AS",
            "t1",
            "JOIN",
            "customers_and_services",
            "AS",
            "t2",
            "ON",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "JOIN",
            "services",
            "AS",
            "t3",
            "ON",
            "t2.service_id",
            "=",
            "t3.service_id",
            "WHERE",
            "t1.customer_details",
            "=",
            "``",
            "Hardy",
            "Kutch",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "service_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "services",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "service_id",
            "=",
            "t3",
            ".",
            "service_id",
            "where",
            "t1",
            ".",
            "customer_details",
            "=",
            "value"
        ],
        "question": "Find all the services that has been used by the customer with details \"Hardy Kutch\".",
        "question_toks": [
            "Find",
            "all",
            "the",
            "services",
            "that",
            "has",
            "been",
            "used",
            "by",
            "the",
            "customer",
            "with",
            "details",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Hardy Kutch\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T4.Service_Details FROM Customers AS T1 INNER JOIN Customers_and_Services AS T2 ON T1.Customer_ID = T2.Customer_ID INNER JOIN Services AS T4 ON T2.Service_ID = T4.Service_ID WHERE T1.Customer_Details = 'Hardy Kutch'"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"",
        "query_toks": [
            "SELECT",
            "t3.service_details",
            "FROM",
            "customers",
            "AS",
            "t1",
            "JOIN",
            "customers_and_services",
            "AS",
            "t2",
            "ON",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "JOIN",
            "services",
            "AS",
            "t3",
            "ON",
            "t2.service_id",
            "=",
            "t3.service_id",
            "WHERE",
            "t1.customer_details",
            "=",
            "``",
            "Hardy",
            "Kutch",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "service_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "services",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "service_id",
            "=",
            "t3",
            ".",
            "service_id",
            "where",
            "t1",
            ".",
            "customer_details",
            "=",
            "value"
        ],
        "question": "Which services were used by the customer with details \"Hardy Kutch\"? Give me the service details.",
        "question_toks": [
            "Which",
            "services",
            "were",
            "used",
            "by",
            "the",
            "customer",
            "with",
            "details",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "?",
            "Give",
            "me",
            "the",
            "service",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Hardy Kutch\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Service_Details FROM Services WHERE Service_ID IN (SELECT Service_ID FROM Customers_and_Services WHERE Customer_ID = (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch'));"
    },
    {
        "db_id": "government_shift",
        "query": "select t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id group by t1.service_details having count(*)  >  3",
        "query_toks": [
            "select",
            "t1.service_details",
            "from",
            "services",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1.service_id",
            "=",
            "t2.service_id",
            "group",
            "by",
            "t1.service_details",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "service_details",
            "from",
            "services",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "service_id",
            "=",
            "t2",
            ".",
            "service_id",
            "group",
            "by",
            "t1",
            ".",
            "service_details",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Find the details of the services that have been used by more than 3 times .",
        "question_toks": [
            "Find",
            "the",
            "details",
            "of",
            "the",
            "services",
            "that",
            "have",
            "been",
            "used",
            "by",
            "more",
            "than",
            "3",
            "times",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT T1.Service_Details FROM Services AS T1 JOIN Customers_and_Services AS T2 ON T1.Service_ID  =  T2.Service_ID GROUP BY T2.Service_ID HAVING count(*)  >  3"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_details HAVING count(*)  >  3",
        "query_toks": [
            "SELECT",
            "t1.service_details",
            "FROM",
            "services",
            "AS",
            "t1",
            "JOIN",
            "customers_and_services",
            "AS",
            "t2",
            "ON",
            "t1.service_id",
            "=",
            "t2.service_id",
            "GROUP",
            "BY",
            "t1.service_details",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "service_details",
            "from",
            "services",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "service_id",
            "=",
            "t2",
            ".",
            "service_id",
            "group",
            "by",
            "t1",
            ".",
            "service_details",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Which services were used by customers by more than 3 times? Give me the service details.",
        "question_toks": [
            "Which",
            "services",
            "were",
            "used",
            "by",
            "customers",
            "by",
            "more",
            "than",
            "3",
            "times",
            "?",
            "Give",
            "me",
            "the",
            "service",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Service_Details FROM Services WHERE Service_ID IN (SELECT Service_ID FROM Customers_and_Services GROUP BY Service_ID HAVING COUNT(Customer_ID) > 3);"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT t1.customer_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_details ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.customer_details",
            "FROM",
            "customers",
            "AS",
            "t1",
            "JOIN",
            "customers_and_services",
            "AS",
            "t2",
            "ON",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "GROUP",
            "BY",
            "t1.customer_details",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_details",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Find the details of the customer who has used services the most times.",
        "question_toks": [
            "Find",
            "the",
            "details",
            "of",
            "the",
            "customer",
            "who",
            "has",
            "used",
            "services",
            "the",
            "most",
            "times",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT c.Customer_Details FROM Customers c INNER JOIN Customers_and_Services cas ON c.Customer_ID = cas.Customer_ID GROUP BY cas.Customer_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "government_shift",
        "query": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
        "query_toks": [
            "select",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_details",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_details",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "return the details of the customer with largest count of used services.",
        "question_toks": [
            "return",
            "the",
            "details",
            "of",
            "the",
            "customer",
            "with",
            "largest",
            "count",
            "of",
            "used",
            "services."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT C.Customer_Details FROM Customers C GROUP BY C.Customer_Details ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "government_shift",
        "query": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
        "query_toks": [
            "select",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_details",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_details",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Find the name of the customer who has used the most types of services .",
        "question_toks": [
            "Find",
            "the",
            "name",
            "of",
            "the",
            "customer",
            "who",
            "has",
            "used",
            "the",
            "most",
            "types",
            "of",
            "services",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Customer_Details FROM Customers_and_Services AS T1 INNER JOIN Customers AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T2.Customer_Details ORDER BY COUNT(T2.Customer_Details) DESC LIMIT 1"
    },
    {
        "db_id": "government_shift",
        "query": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
        "query_toks": [
            "select",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "group",
            "by",
            "t1.customer_details",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_details",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Which customer has used the most types of services ? Give me the customer details .",
        "question_toks": [
            "Which",
            "customer",
            "has",
            "used",
            "the",
            "most",
            "types",
            "of",
            "services",
            "?",
            "Give",
            "me",
            "the",
            "customer",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Customer_Details FROM Customers WHERE Customer_ID IN (SELECT Customer_ID FROM Customers_and_Services GROUP BY Customer_ID ORDER BY COUNT(DISTINCT Service_ID) DESC LIMIT 1);"
    },
    {
        "db_id": "government_shift",
        "query": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)",
        "query_toks": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "customers_and_services",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "customers_and_services",
            ")"
        ],
        "question": "Find the details of the customer who has never used any services .",
        "question_toks": [
            "Find",
            "the",
            "details",
            "of",
            "the",
            "customer",
            "who",
            "has",
            "never",
            "used",
            "any",
            "services",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Customer_Details FROM customers WHERE Customer_ID NOT IN (SELECT Customer_ID FROM Customers_and_Services)"
    },
    {
        "db_id": "government_shift",
        "query": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)",
        "query_toks": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "customers_and_services",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_id",
            "not",
            "in",
            "(",
            "select",
            "customer_id",
            "from",
            "customers_and_services",
            ")"
        ],
        "question": "Which customers never used any services ? Give me the customer details .",
        "question_toks": [
            "Which",
            "customers",
            "never",
            "used",
            "any",
            "services",
            "?",
            "Give",
            "me",
            "the",
            "customer",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT customer_details FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customers_and_services);"
    },
    {
        "db_id": "government_shift",
        "query": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)",
        "query_toks": [
            "select",
            "distinct",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "where",
            "t2.service_id",
            "=",
            "(",
            "select",
            "service_id",
            "from",
            "services",
            "group",
            "by",
            "service_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "where",
            "t2",
            ".",
            "service_id",
            "=",
            "(",
            "select",
            "service_id",
            "from",
            "services",
            "group",
            "by",
            "service_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ],
        "question": "Find the details of the customers who have used the least-used service .",
        "question_toks": [
            "Find",
            "the",
            "details",
            "of",
            "the",
            "customers",
            "who",
            "have",
            "used",
            "the",
            "least-used",
            "service",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                1,
                                false
                            ]
                        ],
                        "having": [],
                        "orderBy": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Customers_and_Services_Details FROM Customers_and_Services GROUP BY Service_ID ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "government_shift",
        "query": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)",
        "query_toks": [
            "select",
            "distinct",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "where",
            "t2.service_id",
            "=",
            "(",
            "select",
            "service_id",
            "from",
            "services",
            "group",
            "by",
            "service_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "where",
            "t2",
            ".",
            "service_id",
            "=",
            "(",
            "select",
            "service_id",
            "from",
            "services",
            "group",
            "by",
            "service_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ],
        "question": "Which customers used the least commonly-used service ? Give me the distinct customer details .",
        "question_toks": [
            "Which",
            "customers",
            "used",
            "the",
            "least",
            "commonly-used",
            "service",
            "?",
            "Give",
            "me",
            "the",
            "distinct",
            "customer",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [
                            [
                                0,
                                1,
                                false
                            ]
                        ],
                        "having": [],
                        "orderBy": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "limit": 1,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT T2.Customer_Details FROM Customers_and_Services AS T1 JOIN Customers AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Service_ID ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "customers_and_services_details",
            ")",
            "FROM",
            "customers_and_services"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "customers_and_services_details",
            ")",
            "from",
            "customers_and_services"
        ],
        "question": "How many distinct customer and services details are there?",
        "question_toks": [
            "How",
            "many",
            "distinct",
            "customer",
            "and",
            "services",
            "details",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(DISTINCT Customer_Details) AS num_distinct_customers, COUNT(DISTINCT Service_Details) AS num_distinct_services FROM Customers UNION SELECT COUNT(DISTINCT Customer_Details) AS num_distinct_customers, COUNT(DISTINCT Service_Details) AS num_distinct_services FROM Services"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "customers_and_services_details",
            ")",
            "FROM",
            "customers_and_services"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "customers_and_services_details",
            ")",
            "from",
            "customers_and_services"
        ],
        "question": "Count the total number of available customers and services details.",
        "question_toks": [
            "Count",
            "the",
            "total",
            "number",
            "of",
            "available",
            "customers",
            "and",
            "services",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM Customers UNION SELECT COUNT(*) FROM Services"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"",
        "query_toks": [
            "SELECT",
            "customer_details",
            "FROM",
            "customers",
            "WHERE",
            "customer_details",
            "LIKE",
            "``",
            "%",
            "Kutch",
            "%",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_details",
            "like",
            "value"
        ],
        "question": "Find all the customers whose name contains \"Kutch\".",
        "question_toks": [
            "Find",
            "all",
            "the",
            "customers",
            "whose",
            "name",
            "contains",
            "``",
            "Kutch",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"%Kutch%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE '%Kutch%'"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"",
        "query_toks": [
            "SELECT",
            "customer_details",
            "FROM",
            "customers",
            "WHERE",
            "customer_details",
            "LIKE",
            "``",
            "%",
            "Kutch",
            "%",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_details",
            "like",
            "value"
        ],
        "question": "What are the details of the customers who have \"Kutch\" in part of their details?",
        "question_toks": [
            "What",
            "are",
            "the",
            "details",
            "of",
            "the",
            "customers",
            "who",
            "have",
            "``",
            "Kutch",
            "''",
            "in",
            "part",
            "of",
            "their",
            "details",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"%Kutch%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE '%Kutch%'"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "t3.service_details",
            "FROM",
            "customers",
            "AS",
            "t1",
            "JOIN",
            "customers_and_services",
            "AS",
            "t2",
            "ON",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "JOIN",
            "services",
            "AS",
            "t3",
            "ON",
            "t2.service_id",
            "=",
            "t3.service_id",
            "JOIN",
            "customer_interactions",
            "AS",
            "t4",
            "ON",
            "t3.service_id",
            "=",
            "t4.service_id",
            "WHERE",
            "t1.customer_details",
            "=",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "OR",
            "t4.services_and_channels_details",
            "=",
            "``",
            "good",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t3",
            ".",
            "service_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "services",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "service_id",
            "=",
            "t3",
            ".",
            "service_id",
            "join",
            "customer_interactions",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "service_id",
            "=",
            "t4",
            ".",
            "service_id",
            "where",
            "t1",
            ".",
            "customer_details",
            "=",
            "value",
            "or",
            "t4",
            ".",
            "services_and_channels_details",
            "=",
            "value"
        ],
        "question": "Find the name of all the services which either have been used by customer \"Hardy Kutch\" or have been rated as \"good\" in one of the customer interactions.",
        "question_toks": [
            "Find",
            "the",
            "name",
            "of",
            "all",
            "the",
            "services",
            "which",
            "either",
            "have",
            "been",
            "used",
            "by",
            "customer",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "or",
            "have",
            "been",
            "rated",
            "as",
            "``",
            "good",
            "''",
            "in",
            "one",
            "of",
            "the",
            "customer",
            "interactions",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Hardy Kutch\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"good\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Service_Details FROM Services AS T1 INNER JOIN Customers_and_Services AS T2 ON T1.Service_ID = T2.Service_ID INNER JOIN Customers AS T3 ON T2.Customer_ID = T3.Customer_ID WHERE T3.Customer_Details = \"Hardy Kutch\" OR T2.Customers_and_Services_Details = \"good\""
    },
    {
        "db_id": "government_shift",
        "query": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "t3.service_details",
            "FROM",
            "customers",
            "AS",
            "t1",
            "JOIN",
            "customers_and_services",
            "AS",
            "t2",
            "ON",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "JOIN",
            "services",
            "AS",
            "t3",
            "ON",
            "t2.service_id",
            "=",
            "t3.service_id",
            "JOIN",
            "customer_interactions",
            "AS",
            "t4",
            "ON",
            "t3.service_id",
            "=",
            "t4.service_id",
            "WHERE",
            "t1.customer_details",
            "=",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "OR",
            "t4.services_and_channels_details",
            "=",
            "``",
            "good",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t3",
            ".",
            "service_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "services",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "service_id",
            "=",
            "t3",
            ".",
            "service_id",
            "join",
            "customer_interactions",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "service_id",
            "=",
            "t4",
            ".",
            "service_id",
            "where",
            "t1",
            ".",
            "customer_details",
            "=",
            "value",
            "or",
            "t4",
            ".",
            "services_and_channels_details",
            "=",
            "value"
        ],
        "question": "Which services are used by the customer \"Hardy Kutch\" or are rated as \"good\" in a customer interaction? Give me the service details.",
        "question_toks": [
            "Which",
            "services",
            "are",
            "used",
            "by",
            "the",
            "customer",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "or",
            "are",
            "rated",
            "as",
            "``",
            "good",
            "''",
            "in",
            "a",
            "customer",
            "interaction",
            "?",
            "Give",
            "me",
            "the",
            "service",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Hardy Kutch\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"good\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Service_Details FROM Services AS T1 JOIN Customers_and_Services AS T2 ON T1.Service_ID  =  T2.Service_ID JOIN Customers AS T3 ON T3.Customer_ID  =  T2.Customer_ID WHERE T3.Customer_Details  =  \"Hardy Kutch\" UNION SELECT T1.Service_Details FROM Services AS T1 JOIN Customer_Interactions AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Status_Code  =  \"good\""
    },
    {
        "db_id": "government_shift",
        "query": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "t3.service_details",
            "FROM",
            "customers",
            "AS",
            "t1",
            "JOIN",
            "customers_and_services",
            "AS",
            "t2",
            "ON",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "JOIN",
            "services",
            "AS",
            "t3",
            "ON",
            "t2.service_id",
            "=",
            "t3.service_id",
            "JOIN",
            "customer_interactions",
            "AS",
            "t4",
            "ON",
            "t3.service_id",
            "=",
            "t4.service_id",
            "WHERE",
            "t1.customer_details",
            "=",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "AND",
            "t4.services_and_channels_details",
            "=",
            "``",
            "bad",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t3",
            ".",
            "service_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "services",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "service_id",
            "=",
            "t3",
            ".",
            "service_id",
            "join",
            "customer_interactions",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "service_id",
            "=",
            "t4",
            ".",
            "service_id",
            "where",
            "t1",
            ".",
            "customer_details",
            "=",
            "value",
            "and",
            "t4",
            ".",
            "services_and_channels_details",
            "=",
            "value"
        ],
        "question": "Find the names of all the services which both have been used by customer \"Hardy Kutch\" and have been rated \"bad\" in one of the customer interactions.",
        "question_toks": [
            "Find",
            "the",
            "names",
            "of",
            "all",
            "the",
            "services",
            "which",
            "both",
            "have",
            "been",
            "used",
            "by",
            "customer",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "and",
            "have",
            "been",
            "rated",
            "``",
            "bad",
            "''",
            "in",
            "one",
            "of",
            "the",
            "customer",
            "interactions",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Hardy Kutch\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"bad\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Service_Details FROM Customers_and_Services AS T1 INNER JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID INNER JOIN Customer_Interactions AS T3 ON T1.Customer_ID = T3.Customer_ID WHERE T3.Status_Code = 'bad' AND T1.Customer_Details = 'Hardy Kutch' GROUP BY T2.Service_Details HAVING COUNT(T2.Service_Details) = 2"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "t3.service_details",
            "FROM",
            "customers",
            "AS",
            "t1",
            "JOIN",
            "customers_and_services",
            "AS",
            "t2",
            "ON",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "JOIN",
            "services",
            "AS",
            "t3",
            "ON",
            "t2.service_id",
            "=",
            "t3.service_id",
            "JOIN",
            "customer_interactions",
            "AS",
            "t4",
            "ON",
            "t3.service_id",
            "=",
            "t4.service_id",
            "WHERE",
            "t1.customer_details",
            "=",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "AND",
            "t4.services_and_channels_details",
            "=",
            "``",
            "bad",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t3",
            ".",
            "service_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "services",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "service_id",
            "=",
            "t3",
            ".",
            "service_id",
            "join",
            "customer_interactions",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "service_id",
            "=",
            "t4",
            ".",
            "service_id",
            "where",
            "t1",
            ".",
            "customer_details",
            "=",
            "value",
            "and",
            "t4",
            ".",
            "services_and_channels_details",
            "=",
            "value"
        ],
        "question": "Which services are both used by the customer \"Hardy Kutch\" and are rated as \"bad\" in a customer interaction? Give me the service details.",
        "question_toks": [
            "Which",
            "services",
            "are",
            "both",
            "used",
            "by",
            "the",
            "customer",
            "``",
            "Hardy",
            "Kutch",
            "''",
            "and",
            "are",
            "rated",
            "as",
            "``",
            "bad",
            "''",
            "in",
            "a",
            "customer",
            "interaction",
            "?",
            "Give",
            "me",
            "the",
            "service",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Hardy Kutch\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"bad\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.Service_Details \nFROM Customers AS T1 \nINNER JOIN Customers_and_Services AS T2 ON T1.Customer_ID = T2.Customer_ID \nINNER JOIN Services AS T3 ON T2.Service_ID = T3.Service_ID \nINNER JOIN Customer_Interactions AS T4 ON T2.Customer_ID = T4.Customer_ID \nWHERE T1.Customer_Details = 'Hardy Kutch' AND T4.Status_Code = 'bad'"
    },
    {
        "db_id": "government_shift",
        "query": "select distinct t1.service_details from services as t1 join customer_interactions as t2 on t1.service_id  =  t2.service_id join channels as t3 on t2.channel_id  =  t3.channel_id where t3.channel_details  =  \"15 ij\"",
        "query_toks": [
            "select",
            "distinct",
            "t1.service_details",
            "from",
            "services",
            "as",
            "t1",
            "join",
            "customer_interactions",
            "as",
            "t2",
            "on",
            "t1.service_id",
            "=",
            "t2.service_id",
            "join",
            "channels",
            "as",
            "t3",
            "on",
            "t2.channel_id",
            "=",
            "t3.channel_id",
            "where",
            "t3.channel_details",
            "=",
            "\"15 ij\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "service_details",
            "from",
            "services",
            "as",
            "t1",
            "join",
            "customer_interactions",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "service_id",
            "=",
            "t2",
            ".",
            "service_id",
            "join",
            "channels",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "channel_id",
            "=",
            "t3",
            ".",
            "channel_id",
            "where",
            "t3",
            ".",
            "channel_details",
            "=",
            "value"
        ],
        "question": "Find details of all the services that have interacted with `` 15 ij '' for the the channel details.",
        "question_toks": [
            "Find",
            "details",
            "of",
            "all",
            "the",
            "services",
            "that",
            "have",
            "interacted",
            "with",
            "``",
            "15",
            "ij",
            "''",
            "for",
            "the",
            "the",
            "channel",
            "details."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"15 ij\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Service_Details FROM Services AS T1 JOIN Customer_Interactions AS T2 ON T1.Service_ID = T2.Service_ID JOIN Channels AS T3 ON T2.Channel_ID = T3.Channel_ID WHERE T3.Channel_Details = '15 ij'"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customer_interactions AS t2 ON t1.service_id  =  t2.service_id JOIN channels AS t3 ON t2.channel_id  =  t3.channel_id WHERE t3.channel_details  =  \"15 ij\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "t1.service_details",
            "FROM",
            "services",
            "AS",
            "t1",
            "JOIN",
            "customer_interactions",
            "AS",
            "t2",
            "ON",
            "t1.service_id",
            "=",
            "t2.service_id",
            "JOIN",
            "channels",
            "AS",
            "t3",
            "ON",
            "t2.channel_id",
            "=",
            "t3.channel_id",
            "WHERE",
            "t3.channel_details",
            "=",
            "``",
            "15",
            "ij",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "service_details",
            "from",
            "services",
            "as",
            "t1",
            "join",
            "customer_interactions",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "service_id",
            "=",
            "t2",
            ".",
            "service_id",
            "join",
            "channels",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "channel_id",
            "=",
            "t3",
            ".",
            "channel_id",
            "where",
            "t3",
            ".",
            "channel_details",
            "=",
            "value"
        ],
        "question": "Give me the details of all the services that have interacted with the channel with detail \"15 ij\".",
        "question_toks": [
            "Give",
            "me",
            "the",
            "details",
            "of",
            "all",
            "the",
            "services",
            "that",
            "have",
            "interacted",
            "with",
            "the",
            "channel",
            "with",
            "detail",
            "``",
            "15",
            "ij",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"15 ij\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT t1.service_details FROM services AS t1 INNER JOIN customer_interactions AS t2 ON t1.service_id  =  t2.service_id INNER JOIN channels AS t3 ON t2.channel_id  =  t3.channel_id WHERE t3.channel_details  =  \"15 ij\""
    },
    {
        "db_id": "government_shift",
        "query": "select t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id where t2.status_code  =  \"stuck\" and services_and_channels_details  =  \"bad\"",
        "query_toks": [
            "select",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_interactions",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "where",
            "t2.status_code",
            "=",
            "\"stuck\"",
            "and",
            "services_and_channels_details",
            "=",
            "\"bad\""
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_interactions",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "where",
            "t2",
            ".",
            "status_code",
            "=",
            "value",
            "and",
            "services_and_channels_details",
            "=",
            "value"
        ],
        "question": "Find all the details of the customers who have been involved in an interaction with status `` Stuck '' and service and channel detail `` bad '' .",
        "question_toks": [
            "Find",
            "all",
            "the",
            "details",
            "of",
            "the",
            "customers",
            "who",
            "have",
            "been",
            "involved",
            "in",
            "an",
            "interaction",
            "with",
            "status",
            "``",
            "Stuck",
            "''",
            "and",
            "service",
            "and",
            "channel",
            "detail",
            "``",
            "bad",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"stuck\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"bad\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.customer_details FROM customers AS T1 JOIN customer_interactions AS T2 ON T1.customer_id = T2.customer_id WHERE T2.status_code = 'Stuck' AND T2.services_and_channels_details = 'bad'"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.status_code  =  \"Stuck\" AND services_and_channels_details  =  \"bad\"",
        "query_toks": [
            "SELECT",
            "t1.customer_details",
            "FROM",
            "customers",
            "AS",
            "t1",
            "JOIN",
            "customer_interactions",
            "AS",
            "t2",
            "ON",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "WHERE",
            "t2.status_code",
            "=",
            "``",
            "Stuck",
            "''",
            "AND",
            "services_and_channels_details",
            "=",
            "``",
            "bad",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_interactions",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "where",
            "t2",
            ".",
            "status_code",
            "=",
            "value",
            "and",
            "services_and_channels_details",
            "=",
            "value"
        ],
        "question": "Which customers have experienced status \"Stuck\" and service and channel detail \"bad\" in  an interaction? Give me the customer details.",
        "question_toks": [
            "Which",
            "customers",
            "have",
            "experienced",
            "status",
            "``",
            "Stuck",
            "''",
            "and",
            "service",
            "and",
            "channel",
            "detail",
            "``",
            "bad",
            "''",
            "in",
            "an",
            "interaction",
            "?",
            "Give",
            "me",
            "the",
            "customer",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Stuck\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"bad\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T3.Customer_Details FROM Customer_Interactions AS T1 INNER JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID INNER JOIN Customers AS T3 ON T1.Customer_ID = T3.Customer_ID WHERE T1.Status_Code = 'Stuck' AND T1.Services_and_Channels_Details = 'bad';"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "integration_platform",
            "WHERE",
            "integration_platform_details",
            "=",
            "``",
            "Success",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "integration_platform",
            "where",
            "integration_platform_details",
            "=",
            "value"
        ],
        "question": "How many integration platforms are successful?",
        "question_toks": [
            "How",
            "many",
            "integration",
            "platforms",
            "are",
            "successful",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Success\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(T1.Integration_Platform_ID) FROM Integration_Platform AS T1 INNER JOIN Customer_Interactions AS T2 ON T1.Customer_Interaction_ID = T2.Customer_Interaction_ID WHERE T2.Status_Code = 'Close'"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "integration_platform",
            "WHERE",
            "integration_platform_details",
            "=",
            "``",
            "Success",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "integration_platform",
            "where",
            "integration_platform_details",
            "=",
            "value"
        ],
        "question": "Count the number of integration platforms that have \"Success\" in the details.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "integration",
            "platforms",
            "that",
            "have",
            "``",
            "Success",
            "''",
            "in",
            "the",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Success\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details = 'Success'"
    },
    {
        "db_id": "government_shift",
        "query": "select distinct t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id join integration_platform as t3 where t3.integration_platform_details  =  \"fail\"",
        "query_toks": [
            "select",
            "distinct",
            "t1.customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_interactions",
            "as",
            "t2",
            "on",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "join",
            "integration_platform",
            "as",
            "t3",
            "where",
            "t3.integration_platform_details",
            "=",
            "\"fail\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_interactions",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "integration_platform",
            "as",
            "t3",
            "where",
            "t3",
            ".",
            "integration_platform_details",
            "=",
            "value"
        ],
        "question": "List the details of all the customers who are associated with a failed integration platform .",
        "question_toks": [
            "List",
            "the",
            "details",
            "of",
            "all",
            "the",
            "customers",
            "who",
            "are",
            "associated",
            "with",
            "a",
            "failed",
            "integration",
            "platform",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"fail\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T2.Customer_Details FROM Integration_Platform AS T1 JOIN Customers AS T2 ON T1.Customer_Interaction_ID  =  T2.Customer_ID WHERE T1.Integration_Platform_Details = 'Fail'"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT DISTINCT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id JOIN integration_platform AS t3 WHERE t3.integration_platform_details  =  \"Fail\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "t1.customer_details",
            "FROM",
            "customers",
            "AS",
            "t1",
            "JOIN",
            "customer_interactions",
            "AS",
            "t2",
            "ON",
            "t1.customer_id",
            "=",
            "t2.customer_id",
            "JOIN",
            "integration_platform",
            "AS",
            "t3",
            "WHERE",
            "t3.integration_platform_details",
            "=",
            "``",
            "Fail",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_interactions",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "integration_platform",
            "as",
            "t3",
            "where",
            "t3",
            ".",
            "integration_platform_details",
            "=",
            "value"
        ],
        "question": "Which customers have integration platform details \"Fail\" in interactions? Give me the customer details.",
        "question_toks": [
            "Which",
            "customers",
            "have",
            "integration",
            "platform",
            "details",
            "``",
            "Fail",
            "''",
            "in",
            "interactions",
            "?",
            "Give",
            "me",
            "the",
            "customer",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Fail\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT T2.Customer_Details FROM Integration_Platform AS T1 JOIN Customer_Interactions AS T2 ON T1.Customer_Interaction_ID = T2.Customer_Interaction_ID WHERE T1.Integration_Platform_Details = 'Fail'"
    },
    {
        "db_id": "government_shift",
        "query": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id",
        "query_toks": [
            "select",
            "service_details",
            "from",
            "services",
            "except",
            "select",
            "t2.service_details",
            "from",
            "customers_and_services",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.service_id",
            "=",
            "t2.service_id"
        ],
        "query_toks_no_value": [
            "select",
            "service_details",
            "from",
            "services",
            "except",
            "select",
            "t2",
            ".",
            "service_details",
            "from",
            "customers_and_services",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "service_id",
            "=",
            "t2",
            ".",
            "service_id"
        ],
        "question": "Which service ( s ) has never been used by any customer ? List their details .",
        "question_toks": [
            "Which",
            "service",
            "(",
            "s",
            ")",
            "has",
            "never",
            "been",
            "used",
            "by",
            "any",
            "customer",
            "?",
            "List",
            "their",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT Service_Details FROM Services WHERE Service_ID NOT IN (SELECT DISTINCT Service_ID FROM Customers_and_Services)"
    },
    {
        "db_id": "government_shift",
        "query": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id",
        "query_toks": [
            "select",
            "service_details",
            "from",
            "services",
            "except",
            "select",
            "t2.service_details",
            "from",
            "customers_and_services",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1.service_id",
            "=",
            "t2.service_id"
        ],
        "query_toks_no_value": [
            "select",
            "service_details",
            "from",
            "services",
            "except",
            "select",
            "t2",
            ".",
            "service_details",
            "from",
            "customers_and_services",
            "as",
            "t1",
            "join",
            "services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "service_id",
            "=",
            "t2",
            ".",
            "service_id"
        ],
        "question": "Find details of the services that no customer has ever used . Return the service details .",
        "question_toks": [
            "Find",
            "details",
            "of",
            "the",
            "services",
            "that",
            "no",
            "customer",
            "has",
            "ever",
            "used",
            ".",
            "Return",
            "the",
            "service",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        },
        "generated_sql": "SELECT Service_Details FROM Services WHERE Service_ID NOT IN (SELECT Service_ID FROM Customers_and_Services)"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code",
        "query_toks": [
            "SELECT",
            "analytical_layer_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "analytical_layer",
            "GROUP",
            "BY",
            "analytical_layer_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "analytical_layer_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "analytical_layer",
            "group",
            "by",
            "analytical_layer_type_code"
        ],
        "question": "Find all the layer type codes with their corresponding usage count.",
        "question_toks": [
            "Find",
            "all",
            "the",
            "layer",
            "type",
            "codes",
            "with",
            "their",
            "corresponding",
            "usage",
            "count",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) AS usage_count FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code",
        "query_toks": [
            "SELECT",
            "analytical_layer_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "analytical_layer",
            "GROUP",
            "BY",
            "analytical_layer_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "analytical_layer_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "analytical_layer",
            "group",
            "by",
            "analytical_layer_type_code"
        ],
        "question": "For each analytical layer, return the analytical layer type code and the number of times it was used.",
        "question_toks": [
            "For",
            "each",
            "analytical",
            "layer",
            ",",
            "return",
            "the",
            "analytical",
            "layer",
            "type",
            "code",
            "and",
            "the",
            "number",
            "of",
            "times",
            "it",
            "was",
            "used",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) AS 'Number_of_Usage' FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code"
    },
    {
        "db_id": "government_shift",
        "query": "select distinct t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id where t2.customers_and_services_details  =  \"unsatisfied\"",
        "query_toks": [
            "select",
            "distinct",
            "t1.service_details",
            "from",
            "services",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1.service_id",
            "=",
            "t2.service_id",
            "where",
            "t2.customers_and_services_details",
            "=",
            "\"unsatisfied\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "service_details",
            "from",
            "services",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "service_id",
            "=",
            "t2",
            ".",
            "service_id",
            "where",
            "t2",
            ".",
            "customers_and_services_details",
            "=",
            "value"
        ],
        "question": "Find details of all the services that have been marked as `` unsatisfied '' in customers and services details .",
        "question_toks": [
            "Find",
            "details",
            "of",
            "all",
            "the",
            "services",
            "that",
            "have",
            "been",
            "marked",
            "as",
            "``",
            "unsatisfied",
            "''",
            "in",
            "customers",
            "and",
            "services",
            "details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"unsatisfied\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Service_Details FROM Services WHERE Service_ID IN (SELECT Service_ID FROM Customers_and_Services WHERE Customers_and_Services_Details = 'Unsatisfied');"
    },
    {
        "db_id": "government_shift",
        "query": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id WHERE t2.customers_and_services_details  =  \"Unsatisfied\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "t1.service_details",
            "FROM",
            "services",
            "AS",
            "t1",
            "JOIN",
            "customers_and_services",
            "AS",
            "t2",
            "ON",
            "t1.service_id",
            "=",
            "t2.service_id",
            "WHERE",
            "t2.customers_and_services_details",
            "=",
            "``",
            "Unsatisfied",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "service_details",
            "from",
            "services",
            "as",
            "t1",
            "join",
            "customers_and_services",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "service_id",
            "=",
            "t2",
            ".",
            "service_id",
            "where",
            "t2",
            ".",
            "customers_and_services_details",
            "=",
            "value"
        ],
        "question": "Which services have been rated as \"unsatisfied\" in customers and services details? Give me the service_details.",
        "question_toks": [
            "Which",
            "services",
            "have",
            "been",
            "rated",
            "as",
            "``",
            "unsatisfied",
            "''",
            "in",
            "customers",
            "and",
            "services",
            "details",
            "?",
            "Give",
            "me",
            "the",
            "service_details",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Unsatisfied\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Service_Details FROM Services AS T1 JOIN Customers_and_Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Customers_and_Services_Details = 'Unsatisfied'"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT count(*) FROM vehicles",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vehicles"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vehicles"
        ],
        "question": "How many vehicles do we have?",
        "question_toks": [
            "How",
            "many",
            "vehicles",
            "do",
            "we",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(*) FROM Vehicles"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT count(*) FROM vehicles",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vehicles"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vehicles"
        ],
        "question": "Count the number of vehicles.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "vehicles",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT COUNT(id) FROM Vehicles"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name FROM vehicles ORDER BY model_year DESC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "vehicles",
            "ORDER",
            "BY",
            "model_year",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "vehicles",
            "order",
            "by",
            "model_year",
            "desc"
        ],
        "question": "Show names for all vehicles in descending order of model year.",
        "question_toks": [
            "Show",
            "names",
            "for",
            "all",
            "vehicles",
            "in",
            "descending",
            "order",
            "of",
            "model",
            "year",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name FROM vehicles ORDER BY Model_year DESC;"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name FROM vehicles ORDER BY model_year DESC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "vehicles",
            "ORDER",
            "BY",
            "model_year",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "vehicles",
            "order",
            "by",
            "model_year",
            "desc"
        ],
        "question": "What are the names of all vehicles, ordered by model year descending?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "vehicles",
            ",",
            "ordered",
            "by",
            "model",
            "year",
            "descending",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name FROM Vehicles ORDER BY Model_year DESC"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT DISTINCT type_of_powertrain FROM vehicles",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "type_of_powertrain",
            "FROM",
            "vehicles"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "type_of_powertrain",
            "from",
            "vehicles"
        ],
        "question": "List all distinct types of powertrain of vehicles.",
        "question_toks": [
            "List",
            "all",
            "distinct",
            "types",
            "of",
            "powertrain",
            "of",
            "vehicles",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT DISTINCT type_of_powertrain FROM vehicles",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "type_of_powertrain",
            "FROM",
            "vehicles"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "type_of_powertrain",
            "from",
            "vehicles"
        ],
        "question": "What are the different types of powertrains?",
        "question_toks": [
            "What",
            "are",
            "the",
            "different",
            "types",
            "of",
            "powertrains",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "type_of_powertrain",
            ",",
            "annual_fuel_cost",
            "FROM",
            "vehicles",
            "WHERE",
            "model_year",
            "=",
            "2013",
            "OR",
            "model_year",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "type_of_powertrain",
            ",",
            "annual_fuel_cost",
            "from",
            "vehicles",
            "where",
            "model_year",
            "=",
            "value",
            "or",
            "model_year",
            "=",
            "value"
        ],
        "question": "Show name, type of powertrain, and annual fuel cost for all vehicles with model year 2013 or 2014.",
        "question_toks": [
            "Show",
            "name",
            ",",
            "type",
            "of",
            "powertrain",
            ",",
            "and",
            "annual",
            "fuel",
            "cost",
            "for",
            "all",
            "vehicles",
            "with",
            "model",
            "year",
            "2013",
            "or",
            "2014",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name, Type_of_powertrain , Annual_fuel_cost FROM Vehicles WHERE Model_year = 2013 OR Model_year = 2014"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "type_of_powertrain",
            ",",
            "annual_fuel_cost",
            "FROM",
            "vehicles",
            "WHERE",
            "model_year",
            "=",
            "2013",
            "OR",
            "model_year",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "type_of_powertrain",
            ",",
            "annual_fuel_cost",
            "from",
            "vehicles",
            "where",
            "model_year",
            "=",
            "value",
            "or",
            "model_year",
            "=",
            "value"
        ],
        "question": "What are the names, types of powertrains, and yearly fuel costs for vehicles with model years in either 2013 2014?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            ",",
            "types",
            "of",
            "powertrains",
            ",",
            "and",
            "yearly",
            "fuel",
            "costs",
            "for",
            "vehicles",
            "with",
            "model",
            "years",
            "in",
            "either",
            "2013",
            "2014",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT type_of_powertrain ,  yearly_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013",
        "query_toks": [
            "SELECT",
            "type_of_powertrain",
            "FROM",
            "vehicles",
            "WHERE",
            "model_year",
            "=",
            "2014",
            "INTERSECT",
            "SELECT",
            "type_of_powertrain",
            "FROM",
            "vehicles",
            "WHERE",
            "model_year",
            "=",
            "2013"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_powertrain",
            "from",
            "vehicles",
            "where",
            "model_year",
            "=",
            "value",
            "intersect",
            "select",
            "type_of_powertrain",
            "from",
            "vehicles",
            "where",
            "model_year",
            "=",
            "value"
        ],
        "question": "Show types of powertrain with vehicles both from 2014 and 2013.",
        "question_toks": [
            "Show",
            "types",
            "of",
            "powertrain",
            "with",
            "vehicles",
            "both",
            "from",
            "2014",
            "and",
            "2013",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        2013.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Type_of_powertrain FROM Vehicles WHERE Model_year  =  2014 INTERSECT SELECT Type_of_powertrain FROM Vehicles WHERE Model_year  =  2013"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013",
        "query_toks": [
            "SELECT",
            "type_of_powertrain",
            "FROM",
            "vehicles",
            "WHERE",
            "model_year",
            "=",
            "2014",
            "INTERSECT",
            "SELECT",
            "type_of_powertrain",
            "FROM",
            "vehicles",
            "WHERE",
            "model_year",
            "=",
            "2013"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_powertrain",
            "from",
            "vehicles",
            "where",
            "model_year",
            "=",
            "value",
            "intersect",
            "select",
            "type_of_powertrain",
            "from",
            "vehicles",
            "where",
            "model_year",
            "=",
            "value"
        ],
        "question": "What are the types of powertrains that have vehicles that were made in both 2013 and 2014?",
        "question_toks": [
            "What",
            "are",
            "the",
            "types",
            "of",
            "powertrains",
            "that",
            "have",
            "vehicles",
            "that",
            "were",
            "made",
            "in",
            "both",
            "2013",
            "and",
            "2014",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        2013.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Type_of_powertrain FROM Vehicles WHERE Model_year  =  2013 INTERSECT SELECT Type_of_powertrain FROM Vehicles WHERE Model_year  =  2014"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain",
        "query_toks": [
            "SELECT",
            "type_of_powertrain",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vehicles",
            "GROUP",
            "BY",
            "type_of_powertrain"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_powertrain",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vehicles",
            "group",
            "by",
            "type_of_powertrain"
        ],
        "question": "Show all types of powertrain and the number of vehicles in each type.",
        "question_toks": [
            "Show",
            "all",
            "types",
            "of",
            "powertrain",
            "and",
            "the",
            "number",
            "of",
            "vehicles",
            "in",
            "each",
            "type",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Type_of_powertrain ,  COUNT(*) FROM Vehicles GROUP BY Type_of_powertrain"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain",
        "query_toks": [
            "SELECT",
            "type_of_powertrain",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "vehicles",
            "GROUP",
            "BY",
            "type_of_powertrain"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_powertrain",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "vehicles",
            "group",
            "by",
            "type_of_powertrain"
        ],
        "question": "How many vehicles have each type of powertrain?",
        "question_toks": [
            "How",
            "many",
            "vehicles",
            "have",
            "each",
            "type",
            "of",
            "powertrain",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT type_of_powertrain ,  count(*) FROM Vehicles GROUP BY type_of_powertrain"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "type_of_powertrain",
            "FROM",
            "vehicles",
            "GROUP",
            "BY",
            "type_of_powertrain",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_powertrain",
            "from",
            "vehicles",
            "group",
            "by",
            "type_of_powertrain",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the type of powertrain with most number of vehicles.",
        "question_toks": [
            "What",
            "is",
            "the",
            "type",
            "of",
            "powertrain",
            "with",
            "most",
            "number",
            "of",
            "vehicles",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT TYPE_OF_POWERTRAIN FROM VEHICLES GROUP BY TYPE_OF_POWERTRAIN ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "type_of_powertrain",
            "FROM",
            "vehicles",
            "GROUP",
            "BY",
            "type_of_powertrain",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_powertrain",
            "from",
            "vehicles",
            "group",
            "by",
            "type_of_powertrain",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Which type of powertrain is most common?",
        "question_toks": [
            "Which",
            "type",
            "of",
            "powertrain",
            "is",
            "most",
            "common",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Type_of_powertrain FROM Vehicles GROUP BY Type_of_powertrain ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "annual_fuel_cost",
            ")",
            ",",
            "max",
            "(",
            "annual_fuel_cost",
            ")",
            ",",
            "avg",
            "(",
            "annual_fuel_cost",
            ")",
            "FROM",
            "vehicles"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "annual_fuel_cost",
            ")",
            ",",
            "max",
            "(",
            "annual_fuel_cost",
            ")",
            ",",
            "avg",
            "(",
            "annual_fuel_cost",
            ")",
            "from",
            "vehicles"
        ],
        "question": "Show minimum, maximum, and average annual fuel cost for all vehicles.",
        "question_toks": [
            "Show",
            "minimum",
            ",",
            "maximum",
            ",",
            "and",
            "average",
            "annual",
            "fuel",
            "cost",
            "for",
            "all",
            "vehicles",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT MIN(Annual_fuel_cost) ,  MAX(Annual_fuel_cost) ,  AVG(Annual_fuel_cost) FROM Vehicles;"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "annual_fuel_cost",
            ")",
            ",",
            "max",
            "(",
            "annual_fuel_cost",
            ")",
            ",",
            "avg",
            "(",
            "annual_fuel_cost",
            ")",
            "FROM",
            "vehicles"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "annual_fuel_cost",
            ")",
            ",",
            "max",
            "(",
            "annual_fuel_cost",
            ")",
            ",",
            "avg",
            "(",
            "annual_fuel_cost",
            ")",
            "from",
            "vehicles"
        ],
        "question": "What are the minimum, maximum, and average annual fuel costs across all vehicles?",
        "question_toks": [
            "What",
            "are",
            "the",
            "minimum",
            ",",
            "maximum",
            ",",
            "and",
            "average",
            "annual",
            "fuel",
            "costs",
            "across",
            "all",
            "vehicles",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM Vehicles"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "model_year",
            "FROM",
            "vehicles",
            "WHERE",
            "city_fuel_economy_rate",
            "<",
            "=",
            "highway_fuel_economy_rate"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "model_year",
            "from",
            "vehicles",
            "where",
            "city_fuel_economy_rate",
            "<",
            "=",
            "highway_fuel_economy_rate"
        ],
        "question": "Show name and model year for vehicles with city fuel economy rate less than or equal to highway fuel economy rate.",
        "question_toks": [
            "Show",
            "name",
            "and",
            "model",
            "year",
            "for",
            "vehicles",
            "with",
            "city",
            "fuel",
            "economy",
            "rate",
            "less",
            "than",
            "or",
            "equal",
            "to",
            "highway",
            "fuel",
            "economy",
            "rate",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    6,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        14,
                        false
                    ],
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name, Model_year FROM Vehicles WHERE City_fuel_economy_rate<=Highway_fuel_economy_rate"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "model_year",
            "FROM",
            "vehicles",
            "WHERE",
            "city_fuel_economy_rate",
            "<",
            "=",
            "highway_fuel_economy_rate"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "model_year",
            "from",
            "vehicles",
            "where",
            "city_fuel_economy_rate",
            "<",
            "=",
            "highway_fuel_economy_rate"
        ],
        "question": "What are the names and model years for vehicles that have a city fuel economy rate less than or equal to its highway fuel economy rate?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "model",
            "years",
            "for",
            "vehicles",
            "that",
            "have",
            "a",
            "city",
            "fuel",
            "economy",
            "rate",
            "less",
            "than",
            "or",
            "equal",
            "to",
            "its",
            "highway",
            "fuel",
            "economy",
            "rate",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    6,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        14,
                        false
                    ],
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name ,  Model_year FROM Vehicles WHERE City_fuel_economy_rate <= Highway_fuel_economy_rate"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "type_of_powertrain",
            ",",
            "avg",
            "(",
            "annual_fuel_cost",
            ")",
            "FROM",
            "vehicles",
            "GROUP",
            "BY",
            "type_of_powertrain",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_powertrain",
            ",",
            "avg",
            "(",
            "annual_fuel_cost",
            ")",
            "from",
            "vehicles",
            "group",
            "by",
            "type_of_powertrain",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Show the type of powertrain with at least two vehicles, and the average annual fuel cost for vehicles in each such type.",
        "question_toks": [
            "Show",
            "the",
            "type",
            "of",
            "powertrain",
            "with",
            "at",
            "least",
            "two",
            "vehicles",
            ",",
            "and",
            "the",
            "average",
            "annual",
            "fuel",
            "cost",
            "for",
            "vehicles",
            "in",
            "each",
            "such",
            "type",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Type_of_powertrain, AVG(Annual_fuel_cost) \nFROM Vehicles \nGROUP BY Type_of_powertrain \nHAVING COUNT(*) >= 2"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "type_of_powertrain",
            ",",
            "avg",
            "(",
            "annual_fuel_cost",
            ")",
            "FROM",
            "vehicles",
            "GROUP",
            "BY",
            "type_of_powertrain",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "type_of_powertrain",
            ",",
            "avg",
            "(",
            "annual_fuel_cost",
            ")",
            "from",
            "vehicles",
            "group",
            "by",
            "type_of_powertrain",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "What are the types of powertrains for which there are two or more vehicles, and what are their average annual fuel costs?",
        "question_toks": [
            "What",
            "are",
            "the",
            "types",
            "of",
            "powertrains",
            "for",
            "which",
            "there",
            "are",
            "two",
            "or",
            "more",
            "vehicles",
            ",",
            "and",
            "what",
            "are",
            "their",
            "average",
            "annual",
            "fuel",
            "costs",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.Type_of_powertrain, AVG(T2.Annual_fuel_cost) FROM Vehicles AS T1 INNER JOIN Renting_history AS T2 ON T1.id  =  T2.vehicles_id GROUP BY T1.Type_of_powertrain HAVING COUNT(T1.id)  >=  2"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name ,  age ,  membership_credit FROM customers",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "age",
            ",",
            "membership_credit",
            "FROM",
            "customers"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "age",
            ",",
            "membership_credit",
            "from",
            "customers"
        ],
        "question": "Show the name, age, membership credit for all customers?",
        "question_toks": [
            "Show",
            "the",
            "name",
            ",",
            "age",
            ",",
            "membership",
            "credit",
            "for",
            "all",
            "customers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name ,  age ,  membership_credit FROM Customers"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name ,  age ,  membership_credit FROM customers",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "age",
            ",",
            "membership_credit",
            "FROM",
            "customers"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "age",
            ",",
            "membership_credit",
            "from",
            "customers"
        ],
        "question": "What are the names, ages, and membership credits for all customers?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            ",",
            "ages",
            ",",
            "and",
            "membership",
            "credits",
            "for",
            "all",
            "customers",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name, age, membership_credit FROM Customers;"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "age",
            "FROM",
            "customers",
            "ORDER",
            "BY",
            "membership_credit",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "age",
            "from",
            "customers",
            "order",
            "by",
            "membership_credit",
            "desc",
            "limit",
            "value"
        ],
        "question": "Show the name and age of the customer with maximum membership credit.",
        "question_toks": [
            "Show",
            "the",
            "name",
            "and",
            "age",
            "of",
            "the",
            "customer",
            "with",
            "maximum",
            "membership",
            "credit",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name ,  age FROM Customers ORDER BY membership_credit DESC LIMIT 1"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "age",
            "FROM",
            "customers",
            "ORDER",
            "BY",
            "membership_credit",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "age",
            "from",
            "customers",
            "order",
            "by",
            "membership_credit",
            "desc",
            "limit",
            "value"
        ],
        "question": "What is the name and age of the customer with the most membership credit?",
        "question_toks": [
            "What",
            "is",
            "the",
            "name",
            "and",
            "age",
            "of",
            "the",
            "customer",
            "with",
            "the",
            "most",
            "membership",
            "credit",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name ,  age FROM Customers ORDER BY membership_credit DESC LIMIT 1"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "customers",
            "WHERE",
            "membership_credit",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "membership_credit",
            ")",
            "FROM",
            "customers",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "customers",
            "where",
            "membership_credit",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "membership_credit",
            ")",
            "from",
            "customers",
            ")"
        ],
        "question": "What is the average age for customers with a membership credit above the average?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "age",
            "for",
            "customers",
            "with",
            "a",
            "membership",
            "credit",
            "above",
            "the",
            "average",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT AVG(age) FROM customers WHERE membership_credit > (SELECT AVG(membership_credit) FROM customers)"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "customers",
            "WHERE",
            "membership_credit",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "membership_credit",
            ")",
            "FROM",
            "customers",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "customers",
            "where",
            "membership_credit",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "membership_credit",
            ")",
            "from",
            "customers",
            ")"
        ],
        "question": "Return the average age for customers who have membership above the average across all customers.",
        "question_toks": [
            "Return",
            "the",
            "average",
            "age",
            "for",
            "customers",
            "who",
            "have",
            "membership",
            "above",
            "the",
            "average",
            "across",
            "all",
            "customers",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT avg(age) FROM customers WHERE membership_credit > (SELECT avg(membership_credit) FROM customers)"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT * FROM discount",
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "discount"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "discount"
        ],
        "question": "Show all information for all discounts.",
        "question_toks": [
            "Show",
            "all",
            "information",
            "for",
            "all",
            "discounts",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT * FROM Discount"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT * FROM discount",
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "discount"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "discount"
        ],
        "question": "Return all information about discounts.",
        "question_toks": [
            "Return",
            "all",
            "information",
            "about",
            "discounts",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT * FROM Discount"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "sum",
            "(",
            "T1.total_hours",
            ")",
            "FROM",
            "renting_history",
            "AS",
            "T1",
            "JOIN",
            "vehicles",
            "AS",
            "T2",
            "ON",
            "T1.vehicles_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T2.id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "sum",
            "(",
            "t1",
            ".",
            "total_hours",
            ")",
            "from",
            "renting_history",
            "as",
            "t1",
            "join",
            "vehicles",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicles_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t2",
            ".",
            "id"
        ],
        "question": "Show the name and total hours of renting for each vehicle.",
        "question_toks": [
            "Show",
            "the",
            "name",
            "and",
            "total",
            "hours",
            "of",
            "renting",
            "for",
            "each",
            "vehicle",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT t3.name ,  t1.total_hours FROM renting_history AS t1 JOIN vehicles AS t3 ON t1.vehicles_id  =  t3.id"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "sum",
            "(",
            "T1.total_hours",
            ")",
            "FROM",
            "renting_history",
            "AS",
            "T1",
            "JOIN",
            "vehicles",
            "AS",
            "T2",
            "ON",
            "T1.vehicles_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T2.id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "sum",
            "(",
            "t1",
            ".",
            "total_hours",
            ")",
            "from",
            "renting_history",
            "as",
            "t1",
            "join",
            "vehicles",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicles_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t2",
            ".",
            "id"
        ],
        "question": "What are the names and total rental hours for each vehicle?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "total",
            "rental",
            "hours",
            "for",
            "each",
            "vehicle",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT v.name, SUM(rh.total_hours) as total_rental_hours FROM Vehicles v JOIN Renting_history rh ON v.id = rh.vehicles_id GROUP BY v.name"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "vehicles",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "vehicles_id",
            "FROM",
            "renting_history",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "vehicles",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "vehicles_id",
            "from",
            "renting_history",
            ")"
        ],
        "question": "Show the name of vehicles with no renting history.",
        "question_toks": [
            "Show",
            "the",
            "name",
            "of",
            "vehicles",
            "with",
            "no",
            "renting",
            "history",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name FROM Vehicles WHERE id NOT IN (SELECT vehicles_id FROM Renting_history)"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "vehicles",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "vehicles_id",
            "FROM",
            "renting_history",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "vehicles",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "vehicles_id",
            "from",
            "renting_history",
            ")"
        ],
        "question": "What are the names of vehicles that have never been rented?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "vehicles",
            "that",
            "have",
            "never",
            "been",
            "rented",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT name FROM Vehicles WHERE id NOT IN (SELECT vehicles_id FROM Renting_history);"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "renting_history",
            "AS",
            "T1",
            "JOIN",
            "customers",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T2.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "renting_history",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t2",
            ".",
            "id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "Show the name of customer with at least two renting history records.",
        "question_toks": [
            "Show",
            "the",
            "name",
            "of",
            "customer",
            "with",
            "at",
            "least",
            "two",
            "renting",
            "history",
            "records",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Customers.name HAVING COUNT(*) >= 2"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "renting_history",
            "AS",
            "T1",
            "JOIN",
            "customers",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T2.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "renting_history",
            "as",
            "t1",
            "join",
            "customers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t2",
            ".",
            "id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "question": "What are the names of customers who have two or more records of rental history?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "customers",
            "who",
            "have",
            "two",
            "or",
            "more",
            "records",
            "of",
            "rental",
            "history",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT T1.name FROM customers AS T1 JOIN renting_history AS T2 ON T1.id  =  T2.customer_id GROUP BY T1.id HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "vehicle_rent",
        "query": "SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "T2.model_year",
            "FROM",
            "renting_history",
            "AS",
            "T1",
            "JOIN",
            "vehicles",
            "AS",
            "T2",
            "ON",
            "T1.vehicles_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T2.id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "model_year",
            "from",
            "renting_history",
            "as",
            "t1",
            "join",
            "vehicles",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "vehicles_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t2",
            ".",
            "id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Show the name and model year of the vehicle with most number of renting history records.",
        "question_toks": [
            "Show",
            "the",
            "name",
            "and",
            "model",
            "year",
            "of",
            "the",
            "vehicle",
            "with",
            "most",
            "number",
            "of",
            "renting",
            "history",
            "records",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        },
        "generated_sql": "SELECT vehicles.name, vehicles.Model_year FROM vehicles JOIN renting_history ON vehicles.id = renting_history.vehicles_id GROUP BY vehicles.id ORDER BY count(*) DESC LIMIT 1;"
    }
]